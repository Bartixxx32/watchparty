{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addNackSuppportForOpus = void 0;\n/**\n * This function adds RTCP NACK support for OPUS codec in given capabilities.\n */\n\nfunction addNackSuppportForOpus(rtpCapabilities) {\n  var _a;\n\n  var _iterator = _createForOfIteratorHelper(rtpCapabilities.codecs || []),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var codec = _step.value;\n\n      if ((codec.mimeType.toLowerCase() === 'audio/opus' || codec.mimeType.toLowerCase() === 'audio/multiopus') && !((_a = codec.rtcpFeedback) === null || _a === void 0 ? void 0 : _a.some(function (fb) {\n        return fb.type === 'nack' && !fb.parameter;\n      }))) {\n        if (!codec.rtcpFeedback) {\n          codec.rtcpFeedback = [];\n        }\n\n        codec.rtcpFeedback.push({\n          type: 'nack'\n        });\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nexports.addNackSuppportForOpus = addNackSuppportForOpus;","map":{"version":3,"names":["Object","defineProperty","exports","value","addNackSuppportForOpus","rtpCapabilities","_a","codecs","codec","mimeType","toLowerCase","rtcpFeedback","some","fb","type","parameter","push"],"sources":["/home/runner/work/watchparty/watchparty/node_modules/mediasoup-client/lib/handlers/ortc/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addNackSuppportForOpus = void 0;\n/**\n * This function adds RTCP NACK support for OPUS codec in given capabilities.\n */\nfunction addNackSuppportForOpus(rtpCapabilities) {\n    var _a;\n    for (const codec of (rtpCapabilities.codecs || [])) {\n        if ((codec.mimeType.toLowerCase() === 'audio/opus' ||\n            codec.mimeType.toLowerCase() === 'audio/multiopus') &&\n            !((_a = codec.rtcpFeedback) === null || _a === void 0 ? void 0 : _a.some((fb) => fb.type === 'nack' && !fb.parameter))) {\n            if (!codec.rtcpFeedback) {\n                codec.rtcpFeedback = [];\n            }\n            codec.rtcpFeedback.push({ type: 'nack' });\n        }\n    }\n}\nexports.addNackSuppportForOpus = addNackSuppportForOpus;\n"],"mappings":"AAAA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,sBAAR,GAAiC,KAAK,CAAtC;AACA;AACA;AACA;;AACA,SAASA,sBAAT,CAAgCC,eAAhC,EAAiD;EAC7C,IAAIC,EAAJ;;EAD6C,2CAExBD,eAAe,CAACE,MAAhB,IAA0B,EAFF;EAAA;;EAAA;IAE7C,oDAAoD;MAAA,IAAzCC,KAAyC;;MAChD,IAAI,CAACA,KAAK,CAACC,QAAN,CAAeC,WAAf,OAAiC,YAAjC,IACDF,KAAK,CAACC,QAAN,CAAeC,WAAf,OAAiC,iBADjC,KAEA,EAAE,CAACJ,EAAE,GAAGE,KAAK,CAACG,YAAZ,MAA8B,IAA9B,IAAsCL,EAAE,KAAK,KAAK,CAAlD,GAAsD,KAAK,CAA3D,GAA+DA,EAAE,CAACM,IAAH,CAAQ,UAACC,EAAD;QAAA,OAAQA,EAAE,CAACC,IAAH,KAAY,MAAZ,IAAsB,CAACD,EAAE,CAACE,SAAlC;MAAA,CAAR,CAAjE,CAFJ,EAE4H;QACxH,IAAI,CAACP,KAAK,CAACG,YAAX,EAAyB;UACrBH,KAAK,CAACG,YAAN,GAAqB,EAArB;QACH;;QACDH,KAAK,CAACG,YAAN,CAAmBK,IAAnB,CAAwB;UAAEF,IAAI,EAAE;QAAR,CAAxB;MACH;IACJ;EAX4C;IAAA;EAAA;IAAA;EAAA;AAYhD;;AACDZ,OAAO,CAACE,sBAAR,GAAiCA,sBAAjC"},"metadata":{},"sourceType":"script"}