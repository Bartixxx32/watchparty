{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataConsumer = void 0;\n\nvar Logger_1 = require(\"./Logger\");\n\nvar EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\n\nvar logger = new Logger_1.Logger('DataConsumer');\n\nvar DataConsumer = /*#__PURE__*/function (_EnhancedEventEmitter) {\n  _inherits(DataConsumer, _EnhancedEventEmitter);\n\n  var _super = _createSuper(DataConsumer);\n\n  function DataConsumer(_ref) {\n    var _this;\n\n    var id = _ref.id,\n        dataProducerId = _ref.dataProducerId,\n        dataChannel = _ref.dataChannel,\n        sctpStreamParameters = _ref.sctpStreamParameters,\n        appData = _ref.appData;\n\n    _classCallCheck(this, DataConsumer);\n\n    _this = _super.call(this); // Closed flag.\n\n    _this._closed = false; // Observer instance.\n\n    _this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n    logger.debug('constructor()');\n    _this._id = id;\n    _this._dataProducerId = dataProducerId;\n    _this._dataChannel = dataChannel;\n    _this._sctpStreamParameters = sctpStreamParameters;\n    _this._appData = appData || {};\n\n    _this.handleDataChannel();\n\n    return _this;\n  }\n  /**\n   * DataConsumer id.\n   */\n\n\n  _createClass(DataConsumer, [{\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n    /**\n     * Associated DataProducer id.\n     */\n\n  }, {\n    key: \"dataProducerId\",\n    get: function get() {\n      return this._dataProducerId;\n    }\n    /**\n     * Whether the DataConsumer is closed.\n     */\n\n  }, {\n    key: \"closed\",\n    get: function get() {\n      return this._closed;\n    }\n    /**\n     * SCTP stream parameters.\n     */\n\n  }, {\n    key: \"sctpStreamParameters\",\n    get: function get() {\n      return this._sctpStreamParameters;\n    }\n    /**\n     * DataChannel readyState.\n     */\n\n  }, {\n    key: \"readyState\",\n    get: function get() {\n      return this._dataChannel.readyState;\n    }\n    /**\n     * DataChannel label.\n     */\n\n  }, {\n    key: \"label\",\n    get: function get() {\n      return this._dataChannel.label;\n    }\n    /**\n     * DataChannel protocol.\n     */\n\n  }, {\n    key: \"protocol\",\n    get: function get() {\n      return this._dataChannel.protocol;\n    }\n    /**\n     * DataChannel binaryType.\n     */\n\n  }, {\n    key: \"binaryType\",\n    get: function get() {\n      return this._dataChannel.binaryType;\n    }\n    /**\n     * Set DataChannel binaryType.\n     */\n    ,\n    set: function set(binaryType) {\n      this._dataChannel.binaryType = binaryType;\n    }\n    /**\n     * App custom data.\n     */\n\n  }, {\n    key: \"appData\",\n    get: function get() {\n      return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ,\n    set: function set(appData) {\n      throw new Error('cannot override appData object');\n    }\n  }, {\n    key: \"observer\",\n    get: function get() {\n      return this._observer;\n    }\n    /**\n     * Closes the DataConsumer.\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._closed) {\n        return;\n      }\n\n      logger.debug('close()');\n      this._closed = true;\n\n      this._dataChannel.close();\n\n      this.emit('@close'); // Emit observer event.\n\n      this._observer.safeEmit('close');\n    }\n    /**\n     * Transport was closed.\n     */\n\n  }, {\n    key: \"transportClosed\",\n    value: function transportClosed() {\n      if (this._closed) {\n        return;\n      }\n\n      logger.debug('transportClosed()');\n      this._closed = true;\n\n      this._dataChannel.close();\n\n      this.safeEmit('transportclose'); // Emit observer event.\n\n      this._observer.safeEmit('close');\n    }\n  }, {\n    key: \"handleDataChannel\",\n    value: function handleDataChannel() {\n      var _this2 = this;\n\n      this._dataChannel.addEventListener('open', function () {\n        if (_this2._closed) {\n          return;\n        }\n\n        logger.debug('DataChannel \"open\" event');\n\n        _this2.safeEmit('open');\n      });\n\n      this._dataChannel.addEventListener('error', function (event) {\n        if (_this2._closed) {\n          return;\n        }\n\n        var error = event.error;\n\n        if (!error) {\n          error = new Error('unknown DataChannel error');\n        }\n\n        if (error.errorDetail === 'sctp-failure') {\n          logger.error('DataChannel SCTP error [sctpCauseCode:%s]: %s', error.sctpCauseCode, error.message);\n        } else {\n          logger.error('DataChannel \"error\" event: %o', error);\n        }\n\n        _this2.safeEmit('error', error);\n      });\n\n      this._dataChannel.addEventListener('close', function () {\n        if (_this2._closed) {\n          return;\n        }\n\n        logger.warn('DataChannel \"close\" event');\n        _this2._closed = true;\n\n        _this2.emit('@close');\n\n        _this2.safeEmit('close'); // Emit observer event.\n\n\n        _this2._observer.safeEmit('close');\n      });\n\n      this._dataChannel.addEventListener('message', function (event) {\n        if (_this2._closed) {\n          return;\n        }\n\n        _this2.safeEmit('message', event.data);\n      });\n    }\n  }]);\n\n  return DataConsumer;\n}(EnhancedEventEmitter_1.EnhancedEventEmitter);\n\nexports.DataConsumer = DataConsumer;","map":{"version":3,"names":["Object","defineProperty","exports","value","DataConsumer","Logger_1","require","EnhancedEventEmitter_1","logger","Logger","id","dataProducerId","dataChannel","sctpStreamParameters","appData","_closed","_observer","EnhancedEventEmitter","debug","_id","_dataProducerId","_dataChannel","_sctpStreamParameters","_appData","handleDataChannel","readyState","label","protocol","binaryType","Error","close","emit","safeEmit","addEventListener","event","error","errorDetail","sctpCauseCode","message","warn","data"],"sources":["/home/runner/work/watchparty/watchparty/node_modules/mediasoup-client/lib/DataConsumer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataConsumer = void 0;\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst logger = new Logger_1.Logger('DataConsumer');\nclass DataConsumer extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n    constructor({ id, dataProducerId, dataChannel, sctpStreamParameters, appData }) {\n        super();\n        // Closed flag.\n        this._closed = false;\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor()');\n        this._id = id;\n        this._dataProducerId = dataProducerId;\n        this._dataChannel = dataChannel;\n        this._sctpStreamParameters = sctpStreamParameters;\n        this._appData = appData || {};\n        this.handleDataChannel();\n    }\n    /**\n     * DataConsumer id.\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Associated DataProducer id.\n     */\n    get dataProducerId() {\n        return this._dataProducerId;\n    }\n    /**\n     * Whether the DataConsumer is closed.\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * SCTP stream parameters.\n     */\n    get sctpStreamParameters() {\n        return this._sctpStreamParameters;\n    }\n    /**\n     * DataChannel readyState.\n     */\n    get readyState() {\n        return this._dataChannel.readyState;\n    }\n    /**\n     * DataChannel label.\n     */\n    get label() {\n        return this._dataChannel.label;\n    }\n    /**\n     * DataChannel protocol.\n     */\n    get protocol() {\n        return this._dataChannel.protocol;\n    }\n    /**\n     * DataChannel binaryType.\n     */\n    get binaryType() {\n        return this._dataChannel.binaryType;\n    }\n    /**\n     * Set DataChannel binaryType.\n     */\n    set binaryType(binaryType) {\n        this._dataChannel.binaryType = binaryType;\n    }\n    /**\n     * App custom data.\n     */\n    get appData() {\n        return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    set appData(appData) {\n        throw new Error('cannot override appData object');\n    }\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Closes the DataConsumer.\n     */\n    close() {\n        if (this._closed) {\n            return;\n        }\n        logger.debug('close()');\n        this._closed = true;\n        this._dataChannel.close();\n        this.emit('@close');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Transport was closed.\n     */\n    transportClosed() {\n        if (this._closed) {\n            return;\n        }\n        logger.debug('transportClosed()');\n        this._closed = true;\n        this._dataChannel.close();\n        this.safeEmit('transportclose');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    handleDataChannel() {\n        this._dataChannel.addEventListener('open', () => {\n            if (this._closed) {\n                return;\n            }\n            logger.debug('DataChannel \"open\" event');\n            this.safeEmit('open');\n        });\n        this._dataChannel.addEventListener('error', (event) => {\n            if (this._closed) {\n                return;\n            }\n            let { error } = event;\n            if (!error) {\n                error = new Error('unknown DataChannel error');\n            }\n            if (error.errorDetail === 'sctp-failure') {\n                logger.error('DataChannel SCTP error [sctpCauseCode:%s]: %s', error.sctpCauseCode, error.message);\n            }\n            else {\n                logger.error('DataChannel \"error\" event: %o', error);\n            }\n            this.safeEmit('error', error);\n        });\n        this._dataChannel.addEventListener('close', () => {\n            if (this._closed) {\n                return;\n            }\n            logger.warn('DataChannel \"close\" event');\n            this._closed = true;\n            this.emit('@close');\n            this.safeEmit('close');\n            // Emit observer event.\n            this._observer.safeEmit('close');\n        });\n        this._dataChannel.addEventListener('message', (event) => {\n            if (this._closed) {\n                return;\n            }\n            this.safeEmit('message', event.data);\n        });\n    }\n}\nexports.DataConsumer = DataConsumer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}