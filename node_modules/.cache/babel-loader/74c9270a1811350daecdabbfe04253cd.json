{"ast":null,"code":"import _classCallCheck from\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import{Modal,Button,Table}from'semantic-ui-react';import{SubscribeButton}from'../SubscribeButton/SubscribeButton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ScreenShareModal=/*#__PURE__*/function(_React$Component){_inherits(ScreenShareModal,_React$Component);var _super=_createSuper(ScreenShareModal);function ScreenShareModal(){_classCallCheck(this,ScreenShareModal);return _super.apply(this,arguments);}_createClass(ScreenShareModal,[{key:\"render\",value:function render(){var _this=this;var closeModal=this.props.closeModal;var subscribeButton=!this.props.isSubscriber?/*#__PURE__*/_jsx(SubscribeButton,{user:this.props.user}):null;return/*#__PURE__*/_jsxs(Modal,{open:true,onClose:closeModal,children:[/*#__PURE__*/_jsx(Modal.Header,{children:\"Share Your Screen\"}),/*#__PURE__*/_jsx(Modal.Content,{image:true,children:/*#__PURE__*/_jsxs(Modal.Description,{children:[/*#__PURE__*/_jsx(\"div\",{children:\"You're about to share your screen.\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"This feature is only supported on Chrome and Edge.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Audio sharing only works if sharing your entire screen or a browser tab, not an application.\"})]}),/*#__PURE__*/_jsxs(Table,{definition:true,unstackable:true,striped:true,celled:true,children:[/*#__PURE__*/_jsx(Table.Header,{children:/*#__PURE__*/_jsxs(Table.Row,{children:[/*#__PURE__*/_jsx(Table.HeaderCell,{}),/*#__PURE__*/_jsx(Table.HeaderCell,{children:\"WatchParty Free\"}),/*#__PURE__*/_jsx(Table.HeaderCell,{children:\"WatchParty Plus\"})]})}),/*#__PURE__*/_jsxs(Table.Body,{children:[/*#__PURE__*/_jsxs(Table.Row,{children:[/*#__PURE__*/_jsx(Table.Cell,{children:\"Method\"}),/*#__PURE__*/_jsx(Table.Cell,{children:\"Stream your video to each viewer individually.\"}),/*#__PURE__*/_jsxs(Table.Cell,{children:[\"Our relay server streams to viewers for you.\",/*#__PURE__*/_jsx(\"br\",{}),\"Higher quality and lower bandwidth usage.\"]})]}),/*#__PURE__*/_jsxs(Table.Row,{children:[/*#__PURE__*/_jsx(Table.Cell,{children:\"Latency\"}),/*#__PURE__*/_jsx(Table.Cell,{children:\"< 1s\"}),/*#__PURE__*/_jsx(Table.Cell,{children:\"< 1s\"})]}),/*#__PURE__*/_jsxs(Table.Row,{children:[/*#__PURE__*/_jsx(Table.Cell,{children:\"Recommended Max Viewers\"}),/*#__PURE__*/_jsx(Table.Cell,{children:\"5\"}),/*#__PURE__*/_jsx(Table.Cell,{children:\"20\"})]}),/*#__PURE__*/_jsxs(Table.Row,{children:[/*#__PURE__*/_jsx(Table.Cell,{children:\"Recommended Upload Speed\"}),/*#__PURE__*/_jsx(Table.Cell,{children:\"5 Mbps per viewer\"}),/*#__PURE__*/_jsx(Table.Cell,{children:\"5 Mbps\"})]}),/*#__PURE__*/_jsxs(Table.Row,{children:[/*#__PURE__*/_jsx(Table.Cell,{}),/*#__PURE__*/_jsx(Table.Cell,{children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){_this.props.startScreenShare(false);_this.props.closeModal();},children:\"Start Screenshare\"})}),/*#__PURE__*/_jsx(Table.Cell,{children:this.props.isSubscriber?/*#__PURE__*/_jsx(Button,{color:\"orange\",onClick:function onClick(){_this.props.startScreenShare(true);_this.props.closeModal();},children:\"Start Screenshare w/Relay\"}):subscribeButton})]})]})]})]})})]});}}]);return ScreenShareModal;}(React.Component);","map":{"version":3,"names":["React","Modal","Button","Table","SubscribeButton","ScreenShareModal","closeModal","props","subscribeButton","isSubscriber","user","startScreenShare","Component"],"sources":["/home/runner/work/watchparty/watchparty/src/components/Modal/ScreenShareModal.tsx"],"sourcesContent":["import React from 'react';\nimport { Modal, Button, Table } from 'semantic-ui-react';\nimport firebase from 'firebase/compat/app';\nimport { SubscribeButton } from '../SubscribeButton/SubscribeButton';\n\nexport class ScreenShareModal extends React.Component<{\n  closeModal: () => void;\n  startScreenShare: (useMediaSoup: boolean) => void;\n  isSubscriber: boolean;\n  user: firebase.User | undefined;\n  beta?: boolean;\n}> {\n  render() {\n    const { closeModal } = this.props;\n    const subscribeButton = !this.props.isSubscriber ? (\n      <SubscribeButton user={this.props.user} />\n    ) : null;\n    return (\n      <Modal open={true} onClose={closeModal}>\n        <Modal.Header>Share Your Screen</Modal.Header>\n        <Modal.Content image>\n          <Modal.Description>\n            <div>You're about to share your screen.</div>\n            <ul>\n              <li>This feature is only supported on Chrome and Edge.</li>\n              <li>\n                Audio sharing only works if sharing your entire screen or a\n                browser tab, not an application.\n              </li>\n            </ul>\n            <Table definition unstackable striped celled>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell />\n                  <Table.HeaderCell>WatchParty Free</Table.HeaderCell>\n                  <Table.HeaderCell>WatchParty Plus</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n                <Table.Row>\n                  <Table.Cell>Method</Table.Cell>\n                  <Table.Cell>\n                    Stream your video to each viewer individually.\n                  </Table.Cell>\n                  <Table.Cell>\n                    Our relay server streams to viewers for you.\n                    <br />\n                    Higher quality and lower bandwidth usage.\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>Latency</Table.Cell>\n                  <Table.Cell>{`< 1s`}</Table.Cell>\n                  <Table.Cell>{`< 1s`}</Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>Recommended Max Viewers</Table.Cell>\n                  <Table.Cell>5</Table.Cell>\n                  <Table.Cell>20</Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>Recommended Upload Speed</Table.Cell>\n                  <Table.Cell>5 Mbps per viewer</Table.Cell>\n                  <Table.Cell>5 Mbps</Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell></Table.Cell>\n                  <Table.Cell>\n                    <Button\n                      onClick={() => {\n                        this.props.startScreenShare(false);\n                        this.props.closeModal();\n                      }}\n                    >\n                      Start Screenshare\n                    </Button>\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.isSubscriber ? (\n                      <Button\n                        color=\"orange\"\n                        onClick={() => {\n                          this.props.startScreenShare(true);\n                          this.props.closeModal();\n                        }}\n                      >\n                        Start Screenshare w/Relay\n                      </Button>\n                    ) : (\n                      subscribeButton\n                    )}\n                  </Table.Cell>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </Modal.Description>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n}\n"],"mappings":"oeAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,KAAxB,KAAqC,mBAArC,CAEA,OAASC,eAAT,KAAgC,oCAAhC,C,wFAEA,UAAaC,iBAAb,2RAOE,iBAAS,gBACP,GAAQC,WAAR,CAAuB,KAAKC,KAA5B,CAAQD,UAAR,CACA,GAAME,gBAAe,CAAG,CAAC,KAAKD,KAAL,CAAWE,YAAZ,cACtB,KAAC,eAAD,EAAiB,IAAI,CAAE,KAAKF,KAAL,CAAWG,IAAlC,EADsB,CAEpB,IAFJ,CAGA,mBACE,MAAC,KAAD,EAAO,IAAI,CAAE,IAAb,CAAmB,OAAO,CAAEJ,UAA5B,wBACE,KAAC,KAAD,CAAO,MAAP,gCADF,cAEE,KAAC,KAAD,CAAO,OAAP,EAAe,KAAK,KAApB,uBACE,MAAC,KAAD,CAAO,WAAP,yBACE,2DADF,cAEE,mCACE,0EADF,cAEE,oHAFF,GAFF,cASE,MAAC,KAAD,EAAO,UAAU,KAAjB,CAAkB,WAAW,KAA7B,CAA8B,OAAO,KAArC,CAAsC,MAAM,KAA5C,wBACE,KAAC,KAAD,CAAO,MAAP,wBACE,MAAC,KAAD,CAAO,GAAP,yBACE,KAAC,KAAD,CAAO,UAAP,IADF,cAEE,KAAC,KAAD,CAAO,UAAP,8BAFF,cAGE,KAAC,KAAD,CAAO,UAAP,8BAHF,GADF,EADF,cASE,MAAC,KAAD,CAAO,IAAP,yBACE,MAAC,KAAD,CAAO,GAAP,yBACE,KAAC,KAAD,CAAO,IAAP,qBADF,cAEE,KAAC,KAAD,CAAO,IAAP,6DAFF,cAKE,MAAC,KAAD,CAAO,IAAP,wEAEE,aAFF,+CALF,GADF,cAYE,MAAC,KAAD,CAAO,GAAP,yBACE,KAAC,KAAD,CAAO,IAAP,sBADF,cAEE,KAAC,KAAD,CAAO,IAAP,mBAFF,cAGE,KAAC,KAAD,CAAO,IAAP,mBAHF,GAZF,cAiBE,MAAC,KAAD,CAAO,GAAP,yBACE,KAAC,KAAD,CAAO,IAAP,sCADF,cAEE,KAAC,KAAD,CAAO,IAAP,gBAFF,cAGE,KAAC,KAAD,CAAO,IAAP,iBAHF,GAjBF,cAsBE,MAAC,KAAD,CAAO,GAAP,yBACE,KAAC,KAAD,CAAO,IAAP,uCADF,cAEE,KAAC,KAAD,CAAO,IAAP,gCAFF,cAGE,KAAC,KAAD,CAAO,IAAP,qBAHF,GAtBF,cA2BE,MAAC,KAAD,CAAO,GAAP,yBACE,KAAC,KAAD,CAAO,IAAP,IADF,cAEE,KAAC,KAAD,CAAO,IAAP,wBACE,KAAC,MAAD,EACE,OAAO,CAAE,kBAAM,CACb,KAAI,CAACC,KAAL,CAAWI,gBAAX,CAA4B,KAA5B,EACA,KAAI,CAACJ,KAAL,CAAWD,UAAX,GACD,CAJH,+BADF,EAFF,cAYE,KAAC,KAAD,CAAO,IAAP,WACG,KAAKC,KAAL,CAAWE,YAAX,cACC,KAAC,MAAD,EACE,KAAK,CAAC,QADR,CAEE,OAAO,CAAE,kBAAM,CACb,KAAI,CAACF,KAAL,CAAWI,gBAAX,CAA4B,IAA5B,EACA,KAAI,CAACJ,KAAL,CAAWD,UAAX,GACD,CALH,uCADD,CAWCE,eAZJ,EAZF,GA3BF,GATF,GATF,GADF,EAFF,GADF,CAmFD,CA/FH,8BAAsCR,KAAK,CAACY,SAA5C"},"metadata":{},"sourceType":"module"}