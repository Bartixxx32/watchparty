{"ast":null,"code":"var _classCallCheck = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _require = require(\"./OptionsBuilder\"),\n    buildOptions = _require.buildOptions;\n\nvar OrderedObjParser = require(\"./OrderedObjParser\");\n\nvar _require2 = require(\"./node2json\"),\n    prettify = _require2.prettify;\n\nvar validator = require('../validator');\n\nvar XMLParser = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function XMLParser(options) {\n    _classCallCheck(this, XMLParser);\n\n    this.externalEntities = {};\n    this.options = buildOptions(options);\n  }\n  /**\n   * Parse XML dats to JS object \n   * @param {string|Buffer} xmlData \n   * @param {boolean|Object} validationOption \n   */\n\n\n  _createClass(XMLParser, [{\n    key: \"parse\",\n    value: function parse(xmlData, validationOption) {\n      if (typeof xmlData === \"string\") {} else if (xmlData.toString) {\n        xmlData = xmlData.toString();\n      } else {\n        throw new Error(\"XML data is accepted in String or Bytes[] form.\");\n      }\n\n      if (validationOption) {\n        if (validationOption === true) validationOption = {}; //validate with default options\n\n        var result = validator.validate(xmlData, validationOption);\n\n        if (result !== true) {\n          throw Error(\"\".concat(result.err.msg, \":\").concat(result.err.line, \":\").concat(result.err.col));\n        }\n      }\n\n      var orderedObjParser = new OrderedObjParser(this.options);\n      orderedObjParser.addExternalEntities(this.externalEntities);\n      var orderedResult = orderedObjParser.parseXml(xmlData);\n      if (this.options.preserveOrder || orderedResult === undefined) return orderedResult;else return prettify(orderedResult, this.options);\n    }\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n\n  }, {\n    key: \"addEntity\",\n    value: function addEntity(key, value) {\n      if (value.indexOf(\"&\") !== -1) {\n        throw new Error(\"Entity value can't have '&'\");\n      } else if (key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1) {\n        throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\");\n      } else if (value === \"&\") {\n        throw new Error(\"An entity with value '&' is not permitted\");\n      } else {\n        this.externalEntities[key] = value;\n      }\n    }\n  }]);\n\n  return XMLParser;\n}();\n\nmodule.exports = XMLParser;","map":{"version":3,"names":["require","buildOptions","OrderedObjParser","prettify","validator","XMLParser","options","externalEntities","xmlData","validationOption","toString","Error","result","validate","err","msg","line","col","orderedObjParser","addExternalEntities","orderedResult","parseXml","preserveOrder","undefined","key","value","indexOf","module","exports"],"sources":["/home/runner/work/watchparty/watchparty/node_modules/fast-xml-parser/src/xmlparser/XMLParser.js"],"sourcesContent":["const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;"],"mappings":";;;;AAAA,eAAwBA,OAAO,CAAC,kBAAD,CAA/B;AAAA,IAAQC,YAAR,YAAQA,YAAR;;AACA,IAAMC,gBAAgB,GAAGF,OAAO,CAAC,oBAAD,CAAhC;;AACA,gBAAoBA,OAAO,CAAC,aAAD,CAA3B;AAAA,IAAQG,QAAR,aAAQA,QAAR;;AACA,IAAMC,SAAS,GAAGJ,OAAO,CAAC,cAAD,CAAzB;;IAEMK,S;;;EAEF,mBAAYC,OAAZ,EAAoB;IAAA;;IAChB,KAAKC,gBAAL,GAAwB,EAAxB;IACA,KAAKD,OAAL,GAAeL,YAAY,CAACK,OAAD,CAA3B;EAEH;EACD;AACJ;AACA;AACA;AACA;;;;;WACI,eAAME,OAAN,EAAcC,gBAAd,EAA+B;MAC3B,IAAG,OAAOD,OAAP,KAAmB,QAAtB,EAA+B,CAC9B,CADD,MACM,IAAIA,OAAO,CAACE,QAAZ,EAAqB;QACvBF,OAAO,GAAGA,OAAO,CAACE,QAAR,EAAV;MACH,CAFK,MAED;QACD,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;MACH;;MACD,IAAIF,gBAAJ,EAAqB;QACjB,IAAGA,gBAAgB,KAAK,IAAxB,EAA8BA,gBAAgB,GAAG,EAAnB,CADb,CACoC;;QAErD,IAAMG,MAAM,GAAGR,SAAS,CAACS,QAAV,CAAmBL,OAAnB,EAA4BC,gBAA5B,CAAf;;QACA,IAAIG,MAAM,KAAK,IAAf,EAAqB;UACnB,MAAMD,KAAK,WAAKC,MAAM,CAACE,GAAP,CAAWC,GAAhB,cAAuBH,MAAM,CAACE,GAAP,CAAWE,IAAlC,cAA0CJ,MAAM,CAACE,GAAP,CAAWG,GAArD,EAAX;QACD;MACF;;MACH,IAAMC,gBAAgB,GAAG,IAAIhB,gBAAJ,CAAqB,KAAKI,OAA1B,CAAzB;MACAY,gBAAgB,CAACC,mBAAjB,CAAqC,KAAKZ,gBAA1C;MACA,IAAMa,aAAa,GAAGF,gBAAgB,CAACG,QAAjB,CAA0Bb,OAA1B,CAAtB;MACA,IAAG,KAAKF,OAAL,CAAagB,aAAb,IAA8BF,aAAa,KAAKG,SAAnD,EAA8D,OAAOH,aAAP,CAA9D,KACK,OAAOjB,QAAQ,CAACiB,aAAD,EAAgB,KAAKd,OAArB,CAAf;IACR;IAED;AACJ;AACA;AACA;AACA;;;;WACI,mBAAUkB,GAAV,EAAeC,KAAf,EAAqB;MACjB,IAAGA,KAAK,CAACC,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA3B,EAA6B;QACzB,MAAM,IAAIf,KAAJ,CAAU,6BAAV,CAAN;MACH,CAFD,MAEM,IAAGa,GAAG,CAACE,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAAtB,IAA2BF,GAAG,CAACE,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAApD,EAAsD;QACxD,MAAM,IAAIf,KAAJ,CAAU,sEAAV,CAAN;MACH,CAFK,MAEA,IAAGc,KAAK,KAAK,GAAb,EAAiB;QACnB,MAAM,IAAId,KAAJ,CAAU,2CAAV,CAAN;MACH,CAFK,MAED;QACD,KAAKJ,gBAAL,CAAsBiB,GAAtB,IAA6BC,KAA7B;MACH;IACJ;;;;;;AAGLE,MAAM,CAACC,OAAP,GAAiBvB,SAAjB"},"metadata":{},"sourceType":"script"}