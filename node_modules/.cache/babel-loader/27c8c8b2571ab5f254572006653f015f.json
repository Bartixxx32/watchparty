{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _get = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _inherits = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EnhancedEventEmitter = void 0;\n\nvar events_1 = require(\"events\");\n\nvar Logger_1 = require(\"./Logger\");\n\nvar logger = new Logger_1.Logger('EnhancedEventEmitter');\n\nvar EnhancedEventEmitter = /*#__PURE__*/function (_events_1$EventEmitte) {\n  _inherits(EnhancedEventEmitter, _events_1$EventEmitte);\n\n  var _super = _createSuper(EnhancedEventEmitter);\n\n  function EnhancedEventEmitter() {\n    var _this;\n\n    _classCallCheck(this, EnhancedEventEmitter);\n\n    _this = _super.call(this);\n\n    _this.setMaxListeners(Infinity);\n\n    return _this;\n  }\n\n  _createClass(EnhancedEventEmitter, [{\n    key: \"emit\",\n    value: function emit(eventName) {\n      var _get2;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return (_get2 = _get(_getPrototypeOf(EnhancedEventEmitter.prototype), \"emit\", this)).call.apply(_get2, [this, eventName].concat(args));\n    }\n    /**\n     * Special addition to the EventEmitter API.\n     */\n\n  }, {\n    key: \"safeEmit\",\n    value: function safeEmit(eventName) {\n      var numListeners = _get(_getPrototypeOf(EnhancedEventEmitter.prototype), \"listenerCount\", this).call(this, eventName);\n\n      try {\n        var _get3;\n\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        return (_get3 = _get(_getPrototypeOf(EnhancedEventEmitter.prototype), \"emit\", this)).call.apply(_get3, [this, eventName].concat(args));\n      } catch (error) {\n        logger.error('safeEmit() | event listener threw an error [eventName:%s]:%o', eventName, error);\n        return Boolean(numListeners);\n      }\n    }\n  }, {\n    key: \"on\",\n    value: function on(eventName, listener) {\n      _get(_getPrototypeOf(EnhancedEventEmitter.prototype), \"on\", this).call(this, eventName, listener);\n\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(eventName, listener) {\n      _get(_getPrototypeOf(EnhancedEventEmitter.prototype), \"off\", this).call(this, eventName, listener);\n\n      return this;\n    }\n  }, {\n    key: \"addListener\",\n    value: function addListener(eventName, listener) {\n      _get(_getPrototypeOf(EnhancedEventEmitter.prototype), \"on\", this).call(this, eventName, listener);\n\n      return this;\n    }\n  }, {\n    key: \"prependListener\",\n    value: function prependListener(eventName, listener) {\n      _get(_getPrototypeOf(EnhancedEventEmitter.prototype), \"prependListener\", this).call(this, eventName, listener);\n\n      return this;\n    }\n  }, {\n    key: \"once\",\n    value: function once(eventName, listener) {\n      _get(_getPrototypeOf(EnhancedEventEmitter.prototype), \"once\", this).call(this, eventName, listener);\n\n      return this;\n    }\n  }, {\n    key: \"prependOnceListener\",\n    value: function prependOnceListener(eventName, listener) {\n      _get(_getPrototypeOf(EnhancedEventEmitter.prototype), \"prependOnceListener\", this).call(this, eventName, listener);\n\n      return this;\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(eventName, listener) {\n      _get(_getPrototypeOf(EnhancedEventEmitter.prototype), \"off\", this).call(this, eventName, listener);\n\n      return this;\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventName) {\n      _get(_getPrototypeOf(EnhancedEventEmitter.prototype), \"removeAllListeners\", this).call(this, eventName);\n\n      return this;\n    }\n  }, {\n    key: \"listenerCount\",\n    value: function listenerCount(eventName) {\n      return _get(_getPrototypeOf(EnhancedEventEmitter.prototype), \"listenerCount\", this).call(this, eventName);\n    }\n  }, {\n    key: \"listeners\",\n    value: function listeners(eventName) {\n      return _get(_getPrototypeOf(EnhancedEventEmitter.prototype), \"listeners\", this).call(this, eventName);\n    }\n  }, {\n    key: \"rawListeners\",\n    value: function rawListeners(eventName) {\n      return _get(_getPrototypeOf(EnhancedEventEmitter.prototype), \"rawListeners\", this).call(this, eventName);\n    }\n  }]);\n\n  return EnhancedEventEmitter;\n}(events_1.EventEmitter);\n\nexports.EnhancedEventEmitter = EnhancedEventEmitter;","map":{"version":3,"names":["Object","defineProperty","exports","value","EnhancedEventEmitter","events_1","require","Logger_1","logger","Logger","setMaxListeners","Infinity","eventName","args","numListeners","error","Boolean","listener","EventEmitter"],"sources":["/home/runner/work/watchparty/watchparty/node_modules/mediasoup-client/lib/EnhancedEventEmitter.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnhancedEventEmitter = void 0;\nconst events_1 = require(\"events\");\nconst Logger_1 = require(\"./Logger\");\nconst logger = new Logger_1.Logger('EnhancedEventEmitter');\nclass EnhancedEventEmitter extends events_1.EventEmitter {\n    constructor() {\n        super();\n        this.setMaxListeners(Infinity);\n    }\n    emit(eventName, ...args) {\n        return super.emit(eventName, ...args);\n    }\n    /**\n     * Special addition to the EventEmitter API.\n     */\n    safeEmit(eventName, ...args) {\n        const numListeners = super.listenerCount(eventName);\n        try {\n            return super.emit(eventName, ...args);\n        }\n        catch (error) {\n            logger.error('safeEmit() | event listener threw an error [eventName:%s]:%o', eventName, error);\n            return Boolean(numListeners);\n        }\n    }\n    on(eventName, listener) {\n        super.on(eventName, listener);\n        return this;\n    }\n    off(eventName, listener) {\n        super.off(eventName, listener);\n        return this;\n    }\n    addListener(eventName, listener) {\n        super.on(eventName, listener);\n        return this;\n    }\n    prependListener(eventName, listener) {\n        super.prependListener(eventName, listener);\n        return this;\n    }\n    once(eventName, listener) {\n        super.once(eventName, listener);\n        return this;\n    }\n    prependOnceListener(eventName, listener) {\n        super.prependOnceListener(eventName, listener);\n        return this;\n    }\n    removeListener(eventName, listener) {\n        super.off(eventName, listener);\n        return this;\n    }\n    removeAllListeners(eventName) {\n        super.removeAllListeners(eventName);\n        return this;\n    }\n    listenerCount(eventName) {\n        return super.listenerCount(eventName);\n    }\n    listeners(eventName) {\n        return super.listeners(eventName);\n    }\n    rawListeners(eventName) {\n        return super.rawListeners(eventName);\n    }\n}\nexports.EnhancedEventEmitter = EnhancedEventEmitter;\n"],"mappings":"AAAA;;;;;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,oBAAR,GAA+B,KAAK,CAApC;;AACA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAME,MAAM,GAAG,IAAID,QAAQ,CAACE,MAAb,CAAoB,sBAApB,CAAf;;IACML,oB;;;;;EACF,gCAAc;IAAA;;IAAA;;IACV;;IACA,MAAKM,eAAL,CAAqBC,QAArB;;IAFU;EAGb;;;;WACD,cAAKC,SAAL,EAAyB;MAAA;;MAAA,kCAANC,IAAM;QAANA,IAAM;MAAA;;MACrB,8GAAkBD,SAAlB,SAAgCC,IAAhC;IACH;IACD;AACJ;AACA;;;;WACI,kBAASD,SAAT,EAA6B;MACzB,IAAME,YAAY,2FAAuBF,SAAvB,CAAlB;;MACA,IAAI;QAAA;;QAAA,mCAFeC,IAEf;UAFeA,IAEf;QAAA;;QACA,8GAAkBD,SAAlB,SAAgCC,IAAhC;MACH,CAFD,CAGA,OAAOE,KAAP,EAAc;QACVP,MAAM,CAACO,KAAP,CAAa,8DAAb,EAA6EH,SAA7E,EAAwFG,KAAxF;QACA,OAAOC,OAAO,CAACF,YAAD,CAAd;MACH;IACJ;;;WACD,YAAGF,SAAH,EAAcK,QAAd,EAAwB;MACpB,6EAASL,SAAT,EAAoBK,QAApB;;MACA,OAAO,IAAP;IACH;;;WACD,aAAIL,SAAJ,EAAeK,QAAf,EAAyB;MACrB,8EAAUL,SAAV,EAAqBK,QAArB;;MACA,OAAO,IAAP;IACH;;;WACD,qBAAYL,SAAZ,EAAuBK,QAAvB,EAAiC;MAC7B,6EAASL,SAAT,EAAoBK,QAApB;;MACA,OAAO,IAAP;IACH;;;WACD,yBAAgBL,SAAhB,EAA2BK,QAA3B,EAAqC;MACjC,0FAAsBL,SAAtB,EAAiCK,QAAjC;;MACA,OAAO,IAAP;IACH;;;WACD,cAAKL,SAAL,EAAgBK,QAAhB,EAA0B;MACtB,+EAAWL,SAAX,EAAsBK,QAAtB;;MACA,OAAO,IAAP;IACH;;;WACD,6BAAoBL,SAApB,EAA+BK,QAA/B,EAAyC;MACrC,8FAA0BL,SAA1B,EAAqCK,QAArC;;MACA,OAAO,IAAP;IACH;;;WACD,wBAAeL,SAAf,EAA0BK,QAA1B,EAAoC;MAChC,8EAAUL,SAAV,EAAqBK,QAArB;;MACA,OAAO,IAAP;IACH;;;WACD,4BAAmBL,SAAnB,EAA8B;MAC1B,6FAAyBA,SAAzB;;MACA,OAAO,IAAP;IACH;;;WACD,uBAAcA,SAAd,EAAyB;MACrB,+FAA2BA,SAA3B;IACH;;;WACD,mBAAUA,SAAV,EAAqB;MACjB,2FAAuBA,SAAvB;IACH;;;WACD,sBAAaA,SAAb,EAAwB;MACpB,8FAA0BA,SAA1B;IACH;;;;EA7D8BP,QAAQ,CAACa,Y;;AA+D5ChB,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B"},"metadata":{},"sourceType":"script"}