{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _assertThisInitialized = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _inherits = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Producer = void 0;\n\nvar Logger_1 = require(\"./Logger\");\n\nvar EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\n\nvar errors_1 = require(\"./errors\");\n\nvar logger = new Logger_1.Logger('Producer');\n\nvar Producer = /*#__PURE__*/function (_EnhancedEventEmitter) {\n  _inherits(Producer, _EnhancedEventEmitter);\n\n  var _super = _createSuper(Producer);\n\n  function Producer(_ref) {\n    var _this;\n\n    var id = _ref.id,\n        localId = _ref.localId,\n        rtpSender = _ref.rtpSender,\n        track = _ref.track,\n        rtpParameters = _ref.rtpParameters,\n        stopTracks = _ref.stopTracks,\n        disableTrackOnPause = _ref.disableTrackOnPause,\n        zeroRtpOnPause = _ref.zeroRtpOnPause,\n        appData = _ref.appData;\n\n    _classCallCheck(this, Producer);\n\n    _this = _super.call(this); // Closed flag.\n\n    _this._closed = false; // Observer instance.\n\n    _this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n    logger.debug('constructor()');\n    _this._id = id;\n    _this._localId = localId;\n    _this._rtpSender = rtpSender;\n    _this._track = track;\n    _this._kind = track.kind;\n    _this._rtpParameters = rtpParameters;\n    _this._paused = disableTrackOnPause ? !track.enabled : false;\n    _this._maxSpatialLayer = undefined;\n    _this._stopTracks = stopTracks;\n    _this._disableTrackOnPause = disableTrackOnPause;\n    _this._zeroRtpOnPause = zeroRtpOnPause;\n    _this._appData = appData || {};\n    _this.onTrackEnded = _this.onTrackEnded.bind(_assertThisInitialized(_this)); // NOTE: Minor issue. If zeroRtpOnPause is true, we cannot emit the\n    // '@replacetrack' event here, so RTCRtpSender.track won't be null.\n\n    _this.handleTrack();\n\n    return _this;\n  }\n  /**\n   * Producer id.\n   */\n\n\n  _createClass(Producer, [{\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n    /**\n     * Local id.\n     */\n\n  }, {\n    key: \"localId\",\n    get: function get() {\n      return this._localId;\n    }\n    /**\n     * Whether the Producer is closed.\n     */\n\n  }, {\n    key: \"closed\",\n    get: function get() {\n      return this._closed;\n    }\n    /**\n     * Media kind.\n     */\n\n  }, {\n    key: \"kind\",\n    get: function get() {\n      return this._kind;\n    }\n    /**\n     * Associated RTCRtpSender.\n     */\n\n  }, {\n    key: \"rtpSender\",\n    get: function get() {\n      return this._rtpSender;\n    }\n    /**\n     * The associated track.\n     */\n\n  }, {\n    key: \"track\",\n    get: function get() {\n      return this._track;\n    }\n    /**\n     * RTP parameters.\n     */\n\n  }, {\n    key: \"rtpParameters\",\n    get: function get() {\n      return this._rtpParameters;\n    }\n    /**\n     * Whether the Producer is paused.\n     */\n\n  }, {\n    key: \"paused\",\n    get: function get() {\n      return this._paused;\n    }\n    /**\n     * Max spatial layer.\n     *\n     * @type {Number | undefined}\n     */\n\n  }, {\n    key: \"maxSpatialLayer\",\n    get: function get() {\n      return this._maxSpatialLayer;\n    }\n    /**\n     * App custom data.\n     */\n\n  }, {\n    key: \"appData\",\n    get: function get() {\n      return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ,\n    set: function set(appData) {\n      throw new Error('cannot override appData object');\n    }\n  }, {\n    key: \"observer\",\n    get: function get() {\n      return this._observer;\n    }\n    /**\n     * Closes the Producer.\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._closed) {\n        return;\n      }\n\n      logger.debug('close()');\n      this._closed = true;\n      this.destroyTrack();\n      this.emit('@close'); // Emit observer event.\n\n      this._observer.safeEmit('close');\n    }\n    /**\n     * Transport was closed.\n     */\n\n  }, {\n    key: \"transportClosed\",\n    value: function transportClosed() {\n      if (this._closed) {\n        return;\n      }\n\n      logger.debug('transportClosed()');\n      this._closed = true;\n      this.destroyTrack();\n      this.safeEmit('transportclose'); // Emit observer event.\n\n      this._observer.safeEmit('close');\n    }\n    /**\n     * Get associated RTCRtpSender stats.\n     */\n\n  }, {\n    key: \"getStats\",\n    value: function () {\n      var _getStats = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this._closed) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new errors_1.InvalidStateError('closed');\n\n              case 2:\n                return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this2.safeEmit('@getstats', resolve, reject);\n                }));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getStats() {\n        return _getStats.apply(this, arguments);\n      }\n\n      return getStats;\n    }()\n    /**\n     * Pauses sending media.\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      var _this3 = this;\n\n      logger.debug('pause()');\n\n      if (this._closed) {\n        logger.error('pause() | Producer closed');\n        return;\n      }\n\n      this._paused = true;\n\n      if (this._track && this._disableTrackOnPause) {\n        this._track.enabled = false;\n      }\n\n      if (this._zeroRtpOnPause) {\n        new Promise(function (resolve, reject) {\n          _this3.safeEmit('@pause', resolve, reject);\n        }).catch(function () {});\n      } // Emit observer event.\n\n\n      this._observer.safeEmit('pause');\n    }\n    /**\n     * Resumes sending media.\n     */\n\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      var _this4 = this;\n\n      logger.debug('resume()');\n\n      if (this._closed) {\n        logger.error('resume() | Producer closed');\n        return;\n      }\n\n      this._paused = false;\n\n      if (this._track && this._disableTrackOnPause) {\n        this._track.enabled = true;\n      }\n\n      if (this._zeroRtpOnPause) {\n        new Promise(function (resolve, reject) {\n          _this4.safeEmit('@resume', resolve, reject);\n        }).catch(function () {});\n      } // Emit observer event.\n\n\n      this._observer.safeEmit('resume');\n    }\n    /**\n     * Replaces the current track with a new one or null.\n     */\n\n  }, {\n    key: \"replaceTrack\",\n    value: function () {\n      var _replaceTrack = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref2) {\n        var _this5 = this;\n\n        var track;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                track = _ref2.track;\n                logger.debug('replaceTrack() [track:%o]', track);\n\n                if (!this._closed) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                // This must be done here. Otherwise there is no chance to stop the given\n                // track.\n                if (track && this._stopTracks) {\n                  try {\n                    track.stop();\n                  } catch (error) {}\n                }\n\n                throw new errors_1.InvalidStateError('closed');\n\n              case 7:\n                if (!(track && track.readyState === 'ended')) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                throw new errors_1.InvalidStateError('track ended');\n\n              case 9:\n                if (!(track === this._track)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                logger.debug('replaceTrack() | same track, ignored');\n                return _context2.abrupt(\"return\");\n\n              case 12:\n                _context2.next = 14;\n                return new Promise(function (resolve, reject) {\n                  _this5.safeEmit('@replacetrack', track, resolve, reject);\n                });\n\n              case 14:\n                // Destroy the previous track.\n                this.destroyTrack(); // Set the new track.\n\n                this._track = track; // If this Producer was paused/resumed and the state of the new\n                // track does not match, fix it.\n\n                if (this._track && this._disableTrackOnPause) {\n                  if (!this._paused) {\n                    this._track.enabled = true;\n                  } else if (this._paused) {\n                    this._track.enabled = false;\n                  }\n                } // Handle the effective track.\n\n\n                this.handleTrack();\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function replaceTrack(_x) {\n        return _replaceTrack.apply(this, arguments);\n      }\n\n      return replaceTrack;\n    }()\n    /**\n     * Sets the video max spatial layer to be sent.\n     */\n\n  }, {\n    key: \"setMaxSpatialLayer\",\n    value: function () {\n      var _setMaxSpatialLayer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(spatialLayer) {\n        var _this6 = this;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this._closed) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                throw new errors_1.InvalidStateError('closed');\n\n              case 4:\n                if (!(this._kind !== 'video')) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                throw new errors_1.UnsupportedError('not a video Producer');\n\n              case 8:\n                if (!(typeof spatialLayer !== 'number')) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                throw new TypeError('invalid spatialLayer');\n\n              case 10:\n                if (!(spatialLayer === this._maxSpatialLayer)) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 12:\n                _context3.next = 14;\n                return new Promise(function (resolve, reject) {\n                  _this6.safeEmit('@setmaxspatiallayer', spatialLayer, resolve, reject);\n                }).catch(function () {});\n\n              case 14:\n                this._maxSpatialLayer = spatialLayer;\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function setMaxSpatialLayer(_x2) {\n        return _setMaxSpatialLayer.apply(this, arguments);\n      }\n\n      return setMaxSpatialLayer;\n    }()\n  }, {\n    key: \"setRtpEncodingParameters\",\n    value: function () {\n      var _setRtpEncodingParameters = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(params) {\n        var _this7 = this;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this._closed) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                throw new errors_1.InvalidStateError('closed');\n\n              case 4:\n                if (!(typeof params !== 'object')) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new TypeError('invalid params');\n\n              case 6:\n                _context4.next = 8;\n                return new Promise(function (resolve, reject) {\n                  _this7.safeEmit('@setrtpencodingparameters', params, resolve, reject);\n                });\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function setRtpEncodingParameters(_x3) {\n        return _setRtpEncodingParameters.apply(this, arguments);\n      }\n\n      return setRtpEncodingParameters;\n    }()\n  }, {\n    key: \"onTrackEnded\",\n    value: function onTrackEnded() {\n      logger.debug('track \"ended\" event');\n      this.safeEmit('trackended'); // Emit observer event.\n\n      this._observer.safeEmit('trackended');\n    }\n  }, {\n    key: \"handleTrack\",\n    value: function handleTrack() {\n      if (!this._track) {\n        return;\n      }\n\n      this._track.addEventListener('ended', this.onTrackEnded);\n    }\n  }, {\n    key: \"destroyTrack\",\n    value: function destroyTrack() {\n      if (!this._track) {\n        return;\n      }\n\n      try {\n        this._track.removeEventListener('ended', this.onTrackEnded); // Just stop the track unless the app set stopTracks: false.\n\n\n        if (this._stopTracks) {\n          this._track.stop();\n        }\n      } catch (error) {}\n    }\n  }]);\n\n  return Producer;\n}(EnhancedEventEmitter_1.EnhancedEventEmitter);\n\nexports.Producer = Producer;","map":{"version":3,"names":["Object","defineProperty","exports","value","Producer","Logger_1","require","EnhancedEventEmitter_1","errors_1","logger","Logger","id","localId","rtpSender","track","rtpParameters","stopTracks","disableTrackOnPause","zeroRtpOnPause","appData","_closed","_observer","EnhancedEventEmitter","debug","_id","_localId","_rtpSender","_track","_kind","kind","_rtpParameters","_paused","enabled","_maxSpatialLayer","undefined","_stopTracks","_disableTrackOnPause","_zeroRtpOnPause","_appData","onTrackEnded","bind","handleTrack","Error","destroyTrack","emit","safeEmit","InvalidStateError","Promise","resolve","reject","error","catch","stop","readyState","spatialLayer","UnsupportedError","TypeError","params","addEventListener","removeEventListener"],"sources":["/home/runner/work/watchparty/watchparty/node_modules/mediasoup-client/lib/Producer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Producer = void 0;\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst errors_1 = require(\"./errors\");\nconst logger = new Logger_1.Logger('Producer');\nclass Producer extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n    constructor({ id, localId, rtpSender, track, rtpParameters, stopTracks, disableTrackOnPause, zeroRtpOnPause, appData }) {\n        super();\n        // Closed flag.\n        this._closed = false;\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor()');\n        this._id = id;\n        this._localId = localId;\n        this._rtpSender = rtpSender;\n        this._track = track;\n        this._kind = track.kind;\n        this._rtpParameters = rtpParameters;\n        this._paused = disableTrackOnPause ? !track.enabled : false;\n        this._maxSpatialLayer = undefined;\n        this._stopTracks = stopTracks;\n        this._disableTrackOnPause = disableTrackOnPause;\n        this._zeroRtpOnPause = zeroRtpOnPause;\n        this._appData = appData || {};\n        this.onTrackEnded = this.onTrackEnded.bind(this);\n        // NOTE: Minor issue. If zeroRtpOnPause is true, we cannot emit the\n        // '@replacetrack' event here, so RTCRtpSender.track won't be null.\n        this.handleTrack();\n    }\n    /**\n     * Producer id.\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Local id.\n     */\n    get localId() {\n        return this._localId;\n    }\n    /**\n     * Whether the Producer is closed.\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * Media kind.\n     */\n    get kind() {\n        return this._kind;\n    }\n    /**\n     * Associated RTCRtpSender.\n     */\n    get rtpSender() {\n        return this._rtpSender;\n    }\n    /**\n     * The associated track.\n     */\n    get track() {\n        return this._track;\n    }\n    /**\n     * RTP parameters.\n     */\n    get rtpParameters() {\n        return this._rtpParameters;\n    }\n    /**\n     * Whether the Producer is paused.\n     */\n    get paused() {\n        return this._paused;\n    }\n    /**\n     * Max spatial layer.\n     *\n     * @type {Number | undefined}\n     */\n    get maxSpatialLayer() {\n        return this._maxSpatialLayer;\n    }\n    /**\n     * App custom data.\n     */\n    get appData() {\n        return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    set appData(appData) {\n        throw new Error('cannot override appData object');\n    }\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Closes the Producer.\n     */\n    close() {\n        if (this._closed) {\n            return;\n        }\n        logger.debug('close()');\n        this._closed = true;\n        this.destroyTrack();\n        this.emit('@close');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Transport was closed.\n     */\n    transportClosed() {\n        if (this._closed) {\n            return;\n        }\n        logger.debug('transportClosed()');\n        this._closed = true;\n        this.destroyTrack();\n        this.safeEmit('transportclose');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Get associated RTCRtpSender stats.\n     */\n    async getStats() {\n        if (this._closed) {\n            throw new errors_1.InvalidStateError('closed');\n        }\n        return new Promise((resolve, reject) => {\n            this.safeEmit('@getstats', resolve, reject);\n        });\n    }\n    /**\n     * Pauses sending media.\n     */\n    pause() {\n        logger.debug('pause()');\n        if (this._closed) {\n            logger.error('pause() | Producer closed');\n            return;\n        }\n        this._paused = true;\n        if (this._track && this._disableTrackOnPause) {\n            this._track.enabled = false;\n        }\n        if (this._zeroRtpOnPause) {\n            new Promise((resolve, reject) => {\n                this.safeEmit('@pause', resolve, reject);\n            }).catch(() => { });\n        }\n        // Emit observer event.\n        this._observer.safeEmit('pause');\n    }\n    /**\n     * Resumes sending media.\n     */\n    resume() {\n        logger.debug('resume()');\n        if (this._closed) {\n            logger.error('resume() | Producer closed');\n            return;\n        }\n        this._paused = false;\n        if (this._track && this._disableTrackOnPause) {\n            this._track.enabled = true;\n        }\n        if (this._zeroRtpOnPause) {\n            new Promise((resolve, reject) => {\n                this.safeEmit('@resume', resolve, reject);\n            }).catch(() => { });\n        }\n        // Emit observer event.\n        this._observer.safeEmit('resume');\n    }\n    /**\n     * Replaces the current track with a new one or null.\n     */\n    async replaceTrack({ track }) {\n        logger.debug('replaceTrack() [track:%o]', track);\n        if (this._closed) {\n            // This must be done here. Otherwise there is no chance to stop the given\n            // track.\n            if (track && this._stopTracks) {\n                try {\n                    track.stop();\n                }\n                catch (error) { }\n            }\n            throw new errors_1.InvalidStateError('closed');\n        }\n        else if (track && track.readyState === 'ended') {\n            throw new errors_1.InvalidStateError('track ended');\n        }\n        // Do nothing if this is the same track as the current handled one.\n        if (track === this._track) {\n            logger.debug('replaceTrack() | same track, ignored');\n            return;\n        }\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@replacetrack', track, resolve, reject);\n        });\n        // Destroy the previous track.\n        this.destroyTrack();\n        // Set the new track.\n        this._track = track;\n        // If this Producer was paused/resumed and the state of the new\n        // track does not match, fix it.\n        if (this._track && this._disableTrackOnPause) {\n            if (!this._paused) {\n                this._track.enabled = true;\n            }\n            else if (this._paused) {\n                this._track.enabled = false;\n            }\n        }\n        // Handle the effective track.\n        this.handleTrack();\n    }\n    /**\n     * Sets the video max spatial layer to be sent.\n     */\n    async setMaxSpatialLayer(spatialLayer) {\n        if (this._closed) {\n            throw new errors_1.InvalidStateError('closed');\n        }\n        else if (this._kind !== 'video') {\n            throw new errors_1.UnsupportedError('not a video Producer');\n        }\n        else if (typeof spatialLayer !== 'number') {\n            throw new TypeError('invalid spatialLayer');\n        }\n        if (spatialLayer === this._maxSpatialLayer) {\n            return;\n        }\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@setmaxspatiallayer', spatialLayer, resolve, reject);\n        }).catch(() => { });\n        this._maxSpatialLayer = spatialLayer;\n    }\n    async setRtpEncodingParameters(params) {\n        if (this._closed) {\n            throw new errors_1.InvalidStateError('closed');\n        }\n        else if (typeof params !== 'object') {\n            throw new TypeError('invalid params');\n        }\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@setrtpencodingparameters', params, resolve, reject);\n        });\n    }\n    onTrackEnded() {\n        logger.debug('track \"ended\" event');\n        this.safeEmit('trackended');\n        // Emit observer event.\n        this._observer.safeEmit('trackended');\n    }\n    handleTrack() {\n        if (!this._track) {\n            return;\n        }\n        this._track.addEventListener('ended', this.onTrackEnded);\n    }\n    destroyTrack() {\n        if (!this._track) {\n            return;\n        }\n        try {\n            this._track.removeEventListener('ended', this.onTrackEnded);\n            // Just stop the track unless the app set stopTracks: false.\n            if (this._stopTracks) {\n                this._track.stop();\n            }\n        }\n        catch (error) { }\n    }\n}\nexports.Producer = Producer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}