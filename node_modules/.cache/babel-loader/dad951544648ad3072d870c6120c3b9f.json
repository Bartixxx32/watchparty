{"ast":null,"code":"var toIntIfInt = function toIntIfInt(v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function attachProperties(match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  } else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i + 1] != null) {\n        location[names[i]] = toIntIfInt(match[i + 1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function parseReg(obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  } else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n\n  var keyLocation = obj.push ? {} : // blank object that will be pushed\n  needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\n\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {},\n      media = [],\n      location = session; // points at where properties go under (one of the above)\n  // parse lines we understand\n\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n\n    if (type === 'm') {\n      media.push({\n        rtp: [],\n        fmtp: []\n      });\n      location = media[media.length - 1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n  session.media = media; // link it up\n\n  return session;\n};\n\nvar paramReducer = function paramReducer(acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/;\\s?/).reduce(paramReducer, {});\n}; // For backward compatibility - alias will be removed in 3.0.0\n\n\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.toString().split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length - 1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid,\n          paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};","map":{"version":3,"names":["toIntIfInt","v","String","Number","attachProperties","match","location","names","rawName","i","length","parseReg","obj","content","needsBlank","name","push","keyLocation","reg","grammar","require","validLine","RegExp","prototype","test","bind","exports","parse","sdp","session","media","split","filter","forEach","l","type","slice","rtp","fmtp","j","paramReducer","acc","expr","s","undefined","parseParams","str","reduce","parseFmtpConfig","parsePayloads","toString","map","parseRemoteCandidates","candidates","parts","component","ip","port","parseImageAttributes","item","substring","parseSimulcastStreamList","stream","format","scid","paused"],"sources":["/home/runner/work/watchparty/watchparty/node_modules/sdp-transform/lib/parser.js"],"sourcesContent":["var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.toString().split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}