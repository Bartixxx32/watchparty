{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _assertThisInitialized = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _inherits = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Consumer = void 0;\n\nvar Logger_1 = require(\"./Logger\");\n\nvar EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\n\nvar errors_1 = require(\"./errors\");\n\nvar logger = new Logger_1.Logger('Consumer');\n\nvar Consumer = /*#__PURE__*/function (_EnhancedEventEmitter) {\n  _inherits(Consumer, _EnhancedEventEmitter);\n\n  var _super = _createSuper(Consumer);\n\n  function Consumer(_ref) {\n    var _this;\n\n    var id = _ref.id,\n        localId = _ref.localId,\n        producerId = _ref.producerId,\n        rtpReceiver = _ref.rtpReceiver,\n        track = _ref.track,\n        rtpParameters = _ref.rtpParameters,\n        appData = _ref.appData;\n\n    _classCallCheck(this, Consumer);\n\n    _this = _super.call(this); // Closed flag.\n\n    _this._closed = false; // Observer instance.\n\n    _this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n    logger.debug('constructor()');\n    _this._id = id;\n    _this._localId = localId;\n    _this._producerId = producerId;\n    _this._rtpReceiver = rtpReceiver;\n    _this._track = track;\n    _this._rtpParameters = rtpParameters;\n    _this._paused = !track.enabled;\n    _this._appData = appData || {};\n    _this.onTrackEnded = _this.onTrackEnded.bind(_assertThisInitialized(_this));\n\n    _this.handleTrack();\n\n    return _this;\n  }\n  /**\n   * Consumer id.\n   */\n\n\n  _createClass(Consumer, [{\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n    /**\n     * Local id.\n     */\n\n  }, {\n    key: \"localId\",\n    get: function get() {\n      return this._localId;\n    }\n    /**\n     * Associated Producer id.\n     */\n\n  }, {\n    key: \"producerId\",\n    get: function get() {\n      return this._producerId;\n    }\n    /**\n     * Whether the Consumer is closed.\n     */\n\n  }, {\n    key: \"closed\",\n    get: function get() {\n      return this._closed;\n    }\n    /**\n     * Media kind.\n     */\n\n  }, {\n    key: \"kind\",\n    get: function get() {\n      return this._track.kind;\n    }\n    /**\n     * Associated RTCRtpReceiver.\n     */\n\n  }, {\n    key: \"rtpReceiver\",\n    get: function get() {\n      return this._rtpReceiver;\n    }\n    /**\n     * The associated track.\n     */\n\n  }, {\n    key: \"track\",\n    get: function get() {\n      return this._track;\n    }\n    /**\n     * RTP parameters.\n     */\n\n  }, {\n    key: \"rtpParameters\",\n    get: function get() {\n      return this._rtpParameters;\n    }\n    /**\n     * Whether the Consumer is paused.\n     */\n\n  }, {\n    key: \"paused\",\n    get: function get() {\n      return this._paused;\n    }\n    /**\n     * App custom data.\n     */\n\n  }, {\n    key: \"appData\",\n    get: function get() {\n      return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ,\n    set: function set(appData) {\n      throw new Error('cannot override appData object');\n    }\n  }, {\n    key: \"observer\",\n    get: function get() {\n      return this._observer;\n    }\n    /**\n     * Closes the Consumer.\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._closed) {\n        return;\n      }\n\n      logger.debug('close()');\n      this._closed = true;\n      this.destroyTrack();\n      this.emit('@close'); // Emit observer event.\n\n      this._observer.safeEmit('close');\n    }\n    /**\n     * Transport was closed.\n     */\n\n  }, {\n    key: \"transportClosed\",\n    value: function transportClosed() {\n      if (this._closed) {\n        return;\n      }\n\n      logger.debug('transportClosed()');\n      this._closed = true;\n      this.destroyTrack();\n      this.safeEmit('transportclose'); // Emit observer event.\n\n      this._observer.safeEmit('close');\n    }\n    /**\n     * Get associated RTCRtpReceiver stats.\n     */\n\n  }, {\n    key: \"getStats\",\n    value: function () {\n      var _getStats = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this._closed) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new errors_1.InvalidStateError('closed');\n\n              case 2:\n                return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this2.safeEmit('@getstats', resolve, reject);\n                }));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getStats() {\n        return _getStats.apply(this, arguments);\n      }\n\n      return getStats;\n    }()\n    /**\n     * Pauses receiving media.\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      logger.debug('pause()');\n\n      if (this._closed) {\n        logger.error('pause() | Consumer closed');\n        return;\n      }\n\n      if (this._paused) {\n        logger.debug('pause() | Consumer is already paused');\n        return;\n      }\n\n      this._paused = true;\n      this._track.enabled = false;\n      this.emit('@pause'); // Emit observer event.\n\n      this._observer.safeEmit('pause');\n    }\n    /**\n     * Resumes receiving media.\n     */\n\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      logger.debug('resume()');\n\n      if (this._closed) {\n        logger.error('resume() | Consumer closed');\n        return;\n      }\n\n      if (!this._paused) {\n        logger.debug('resume() | Consumer is already resumed');\n        return;\n      }\n\n      this._paused = false;\n      this._track.enabled = true;\n      this.emit('@resume'); // Emit observer event.\n\n      this._observer.safeEmit('resume');\n    }\n  }, {\n    key: \"onTrackEnded\",\n    value: function onTrackEnded() {\n      logger.debug('track \"ended\" event');\n      this.safeEmit('trackended'); // Emit observer event.\n\n      this._observer.safeEmit('trackended');\n    }\n  }, {\n    key: \"handleTrack\",\n    value: function handleTrack() {\n      this._track.addEventListener('ended', this.onTrackEnded);\n    }\n  }, {\n    key: \"destroyTrack\",\n    value: function destroyTrack() {\n      try {\n        this._track.removeEventListener('ended', this.onTrackEnded);\n\n        this._track.stop();\n      } catch (error) {}\n    }\n  }]);\n\n  return Consumer;\n}(EnhancedEventEmitter_1.EnhancedEventEmitter);\n\nexports.Consumer = Consumer;","map":{"version":3,"names":["Object","defineProperty","exports","value","Consumer","Logger_1","require","EnhancedEventEmitter_1","errors_1","logger","Logger","id","localId","producerId","rtpReceiver","track","rtpParameters","appData","_closed","_observer","EnhancedEventEmitter","debug","_id","_localId","_producerId","_rtpReceiver","_track","_rtpParameters","_paused","enabled","_appData","onTrackEnded","bind","handleTrack","kind","Error","destroyTrack","emit","safeEmit","InvalidStateError","Promise","resolve","reject","error","addEventListener","removeEventListener","stop"],"sources":["/home/runner/work/watchparty/watchparty/node_modules/mediasoup-client/lib/Consumer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Consumer = void 0;\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst errors_1 = require(\"./errors\");\nconst logger = new Logger_1.Logger('Consumer');\nclass Consumer extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n    constructor({ id, localId, producerId, rtpReceiver, track, rtpParameters, appData }) {\n        super();\n        // Closed flag.\n        this._closed = false;\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor()');\n        this._id = id;\n        this._localId = localId;\n        this._producerId = producerId;\n        this._rtpReceiver = rtpReceiver;\n        this._track = track;\n        this._rtpParameters = rtpParameters;\n        this._paused = !track.enabled;\n        this._appData = appData || {};\n        this.onTrackEnded = this.onTrackEnded.bind(this);\n        this.handleTrack();\n    }\n    /**\n     * Consumer id.\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Local id.\n     */\n    get localId() {\n        return this._localId;\n    }\n    /**\n     * Associated Producer id.\n     */\n    get producerId() {\n        return this._producerId;\n    }\n    /**\n     * Whether the Consumer is closed.\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * Media kind.\n     */\n    get kind() {\n        return this._track.kind;\n    }\n    /**\n     * Associated RTCRtpReceiver.\n     */\n    get rtpReceiver() {\n        return this._rtpReceiver;\n    }\n    /**\n     * The associated track.\n     */\n    get track() {\n        return this._track;\n    }\n    /**\n     * RTP parameters.\n     */\n    get rtpParameters() {\n        return this._rtpParameters;\n    }\n    /**\n     * Whether the Consumer is paused.\n     */\n    get paused() {\n        return this._paused;\n    }\n    /**\n     * App custom data.\n     */\n    get appData() {\n        return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    set appData(appData) {\n        throw new Error('cannot override appData object');\n    }\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Closes the Consumer.\n     */\n    close() {\n        if (this._closed) {\n            return;\n        }\n        logger.debug('close()');\n        this._closed = true;\n        this.destroyTrack();\n        this.emit('@close');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Transport was closed.\n     */\n    transportClosed() {\n        if (this._closed) {\n            return;\n        }\n        logger.debug('transportClosed()');\n        this._closed = true;\n        this.destroyTrack();\n        this.safeEmit('transportclose');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Get associated RTCRtpReceiver stats.\n     */\n    async getStats() {\n        if (this._closed) {\n            throw new errors_1.InvalidStateError('closed');\n        }\n        return new Promise((resolve, reject) => {\n            this.safeEmit('@getstats', resolve, reject);\n        });\n    }\n    /**\n     * Pauses receiving media.\n     */\n    pause() {\n        logger.debug('pause()');\n        if (this._closed) {\n            logger.error('pause() | Consumer closed');\n            return;\n        }\n        if (this._paused) {\n            logger.debug('pause() | Consumer is already paused');\n            return;\n        }\n        this._paused = true;\n        this._track.enabled = false;\n        this.emit('@pause');\n        // Emit observer event.\n        this._observer.safeEmit('pause');\n    }\n    /**\n     * Resumes receiving media.\n     */\n    resume() {\n        logger.debug('resume()');\n        if (this._closed) {\n            logger.error('resume() | Consumer closed');\n            return;\n        }\n        if (!this._paused) {\n            logger.debug('resume() | Consumer is already resumed');\n            return;\n        }\n        this._paused = false;\n        this._track.enabled = true;\n        this.emit('@resume');\n        // Emit observer event.\n        this._observer.safeEmit('resume');\n    }\n    onTrackEnded() {\n        logger.debug('track \"ended\" event');\n        this.safeEmit('trackended');\n        // Emit observer event.\n        this._observer.safeEmit('trackended');\n    }\n    handleTrack() {\n        this._track.addEventListener('ended', this.onTrackEnded);\n    }\n    destroyTrack() {\n        try {\n            this._track.removeEventListener('ended', this.onTrackEnded);\n            this._track.stop();\n        }\n        catch (error) { }\n    }\n}\nexports.Consumer = Consumer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}