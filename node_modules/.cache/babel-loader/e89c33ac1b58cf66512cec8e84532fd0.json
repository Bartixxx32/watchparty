{"ast":null,"code":"import _regeneratorRuntime from\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend}from'recharts';import{serverPath}from'../../utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var timeSeriesUrl=serverPath+\"/timeSeries\".concat(window.location.search);// const timeSeriesUrl = 'https://www.watchparty.me' + `/timeSeries${window.location.search}`;\nvar Debug=function Debug(){var _data$slice$;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];// eslint-disable-next-line\nuseEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,json;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(timeSeriesUrl);case 2:response=_context.sent;_context.next=5;return response.json();case 5:json=_context.sent;json.reverse();setData(json);case 8:case\"end\":return _context.stop();}}},_callee);})),[setData]);// Get the keys from the last/mostrecent element\nvar keys=Object.keys((_data$slice$=data.slice(-1)[0])!==null&&_data$slice$!==void 0?_data$slice$:{});return/*#__PURE__*/_jsx(_Fragment,{children:keys.filter(function(k){return k!=='time';}).map(function(key){return/*#__PURE__*/_jsxs(LineChart,{width:1400,height:400,data:data,margin:{top:5,left:20,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"time\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:key,stroke:\"#8884d8\"})]});})});};export default Debug;","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","serverPath","timeSeriesUrl","window","location","search","Debug","data","setData","fetch","response","json","reverse","keys","Object","slice","filter","k","map","key","top","left","bottom"],"sources":["/home/runner/work/watchparty/watchparty/src/components/Debug/Debug.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport { serverPath } from '../../utils';\n\nconst timeSeriesUrl = serverPath + `/timeSeries${window.location.search}`;\n// const timeSeriesUrl = 'https://www.watchparty.me' + `/timeSeries${window.location.search}`;\n\nconst Debug = () => {\n  const [data, setData] = useState([]);\n  // eslint-disable-next-line\n  useEffect(\n    (async () => {\n      const response = await fetch(timeSeriesUrl);\n      const json = await response.json();\n      json.reverse();\n      setData(json);\n    }) as any,\n    [setData]\n  );\n  // Get the keys from the last/mostrecent element\n  const keys = Object.keys(data.slice(-1)[0] ?? {});\n  return (\n    <>\n      {keys\n        .filter((k) => k !== 'time')\n        .map((key) => {\n          return (\n            <LineChart\n              width={1400}\n              height={400}\n              data={data}\n              margin={{\n                top: 5,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid />\n              <XAxis dataKey=\"time\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line type=\"monotone\" dataKey={key} stroke=\"#8884d8\" />\n            </LineChart>\n          );\n        })}\n    </>\n  );\n};\n\nexport default Debug;\n"],"mappings":"uYAAA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OACEC,SADF,CAEEC,IAFF,CAGEC,KAHF,CAIEC,KAJF,CAKEC,aALF,CAMEC,OANF,CAOEC,MAPF,KAQO,UARP,CASA,OAASC,UAAT,KAA2B,aAA3B,C,6IAEA,GAAMC,cAAa,CAAGD,UAAU,sBAAiBE,MAAM,CAACC,QAAP,CAAgBC,MAAjC,CAAhC,CACA;AAEA,GAAMC,MAAK,CAAG,QAARA,MAAQ,EAAM,kBAClB,cAAwBd,QAAQ,CAAC,EAAD,CAAhC,wCAAOe,IAAP,eAAaC,OAAb,eACA;AACAf,SAAS,wEACN,6KACwBgB,MAAK,CAACP,aAAD,CAD7B,QACOQ,QADP,qCAEoBA,SAAQ,CAACC,IAAT,EAFpB,QAEOA,IAFP,eAGCA,IAAI,CAACC,OAAL,GACAJ,OAAO,CAACG,IAAD,CAAP,CAJD,sDADM,GAOP,CAACH,OAAD,CAPO,CAAT,CASA;AACA,GAAMK,KAAI,CAAGC,MAAM,CAACD,IAAP,eAAYN,IAAI,CAACQ,KAAL,CAAW,CAAC,CAAZ,EAAe,CAAf,CAAZ,6CAAiC,EAAjC,CAAb,CACA,mBACE,yBACGF,IAAI,CACFG,MADF,CACS,SAACC,CAAD,QAAOA,EAAC,GAAK,MAAb,EADT,EAEEC,GAFF,CAEM,SAACC,GAAD,CAAS,CACZ,mBACE,MAAC,SAAD,EACE,KAAK,CAAE,IADT,CAEE,MAAM,CAAE,GAFV,CAGE,IAAI,CAAEZ,IAHR,CAIE,MAAM,CAAE,CACNa,GAAG,CAAE,CADC,CAENC,IAAI,CAAE,EAFA,CAGNC,MAAM,CAAE,CAHF,CAJV,wBAUE,KAAC,aAAD,IAVF,cAWE,KAAC,KAAD,EAAO,OAAO,CAAC,MAAf,EAXF,cAYE,KAAC,KAAD,IAZF,cAaE,KAAC,OAAD,IAbF,cAcE,KAAC,MAAD,IAdF,cAeE,KAAC,IAAD,EAAM,IAAI,CAAC,UAAX,CAAsB,OAAO,CAAEH,GAA/B,CAAoC,MAAM,CAAC,SAA3C,EAfF,GADF,CAmBD,CAtBF,CADH,EADF,CA2BD,CAzCD,CA2CA,cAAeb,MAAf"},"metadata":{},"sourceType":"module"}