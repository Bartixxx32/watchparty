{"ast":null,"code":"'use strict'; ///@ts-check\n\nvar _defineProperty = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nvar _createClass = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar util = require('../util');\n\nvar xmlNode = require('./xmlNode');\n\nvar readDocType = require(\"./DocTypeReader\");\n\nvar toNumber = require(\"strnum\");\n\nvar regx = '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'.replace(/NAME/g, util.nameRegexp); //const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nvar OrderedObjParser = /*#__PURE__*/_createClass(function OrderedObjParser(options) {\n  _classCallCheck(this, OrderedObjParser);\n\n  this.options = options;\n  this.currentNode = null;\n  this.tagsNodeStack = [];\n  this.docTypeEntities = {};\n  this.lastEntities = {\n    \"apos\": {\n      regex: /&(apos|#39|#x27);/g,\n      val: \"'\"\n    },\n    \"gt\": {\n      regex: /&(gt|#62|#x3E);/g,\n      val: \">\"\n    },\n    \"lt\": {\n      regex: /&(lt|#60|#x3C);/g,\n      val: \"<\"\n    },\n    \"quot\": {\n      regex: /&(quot|#34|#x22);/g,\n      val: \"\\\"\"\n    }\n  };\n  this.ampEntity = {\n    regex: /&(amp|#38|#x26);/g,\n    val: \"&\"\n  };\n  this.htmlEntities = {\n    \"space\": {\n      regex: /&(nbsp|#160);/g,\n      val: \" \"\n    },\n    // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n    // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n    // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n    // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n    // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n    \"cent\": {\n      regex: /&(cent|#162);/g,\n      val: \"¢\"\n    },\n    \"pound\": {\n      regex: /&(pound|#163);/g,\n      val: \"£\"\n    },\n    \"yen\": {\n      regex: /&(yen|#165);/g,\n      val: \"¥\"\n    },\n    \"euro\": {\n      regex: /&(euro|#8364);/g,\n      val: \"€\"\n    },\n    \"copyright\": {\n      regex: /&(copy|#169);/g,\n      val: \"©\"\n    },\n    \"reg\": {\n      regex: /&(reg|#174);/g,\n      val: \"®\"\n    },\n    \"inr\": {\n      regex: /&(inr|#8377);/g,\n      val: \"₹\"\n    }\n  };\n  this.addExternalEntities = addExternalEntities;\n  this.parseXml = parseXml;\n  this.parseTextData = parseTextData;\n  this.resolveNameSpace = resolveNameSpace;\n  this.buildAttributesMap = buildAttributesMap;\n  this.isItStopNode = isItStopNode;\n  this.replaceEntitiesValue = replaceEntitiesValue;\n  this.readStopNodeData = readStopNodeData;\n  this.saveTextToParentTag = saveTextToParentTag;\n});\n\nfunction addExternalEntities(externalEntities) {\n  var entKeys = Object.keys(externalEntities);\n\n  for (var i = 0; i < entKeys.length; i++) {\n    var ent = entKeys[i];\n    this.lastEntities[ent] = {\n      regex: new RegExp(\"&\" + ent + \";\", \"g\"),\n      val: externalEntities[ent]\n    };\n  }\n}\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\n\n\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n\n    if (val.length > 0) {\n      if (!escapeEntities) val = this.replaceEntitiesValue(val);\n      var newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n\n      if (newval === null || newval === undefined) {\n        //don't parse\n        return val;\n      } else if (typeof newval !== typeof val || newval !== val) {\n        //overwrite\n        return newval;\n      } else if (this.options.trimValues) {\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      } else {\n        var trimmedVal = val.trim();\n\n        if (trimmedVal === val) {\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        } else {\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    var tags = tagname.split(':');\n    var prefix = tagname.charAt(0) === '/' ? '/' : '';\n\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n\n  return tagname;\n} //TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\n\n\nvar attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n    var matches = util.getAllMatches(attrStr, attrsRegx);\n    var len = matches.length; //don't make it inline\n\n    var attrs = {};\n\n    for (var i = 0; i < len; i++) {\n      var attrName = this.resolveNameSpace(matches[i][1]);\n      var oldVal = matches[i][4];\n      var aName = this.options.attributeNamePrefix + attrName;\n\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n\n        if (aName === \"__proto__\") aName = \"#__proto__\";\n\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n\n          oldVal = this.replaceEntitiesValue(oldVal);\n          var newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n\n          if (newVal === null || newVal === undefined) {\n            //don't parse\n            attrs[aName] = oldVal;\n          } else if (typeof newVal !== typeof oldVal || newVal !== oldVal) {\n            //overwrite\n            attrs[aName] = newVal;\n          } else {\n            //parse\n            attrs[aName] = parseValue(oldVal, this.options.parseAttributeValue, this.options.numberParseOptions);\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n\n    if (this.options.attributesGroupName) {\n      var attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n\n    return attrs;\n  }\n}\n\nvar parseXml = function parseXml(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n\n  var xmlObj = new xmlNode('!xml');\n  var currentNode = xmlObj;\n  var textData = \"\";\n  var jPath = \"\";\n\n  for (var i = 0; i < xmlData.length; i++) {\n    //for each char in XML data\n    var ch = xmlData[i];\n\n    if (ch === '<') {\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if (xmlData[i + 1] === '/') {\n        //Closing Tag\n        var closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\");\n        var tagName = xmlData.substring(i + 2, closeIndex).trim();\n\n        if (this.options.removeNSPrefix) {\n          var colonIndex = tagName.indexOf(\":\");\n\n          if (colonIndex !== -1) {\n            tagName = tagName.substr(colonIndex + 1);\n          }\n        }\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if (currentNode) {\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n        currentNode = this.tagsNodeStack.pop(); //avoid recurssion, set the parent tag scope\n\n        textData = \"\";\n        i = closeIndex;\n      } else if (xmlData[i + 1] === '?') {\n        var tagData = readTagExp(xmlData, i, false, \"?>\");\n        if (!tagData) throw new Error(\"Pi Tag is not closed.\");\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        if (this.options.ignoreDeclaration && tagData.tagName === \"?xml\" || this.options.ignorePiTags) {} else {\n          var childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n\n          if (tagData.tagName !== tagData.tagExp && tagData.attrExpPresent) {\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath);\n          }\n\n          currentNode.addChild(childNode);\n        }\n\n        i = tagData.closeIndex + 1;\n      } else if (xmlData.substr(i + 1, 3) === '!--') {\n        var endIndex = findClosingIndex(xmlData, \"-->\", i + 4, \"Comment is not closed.\");\n\n        if (this.options.commentPropName) {\n          var comment = xmlData.substring(i + 4, endIndex - 2);\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n          currentNode.add(this.options.commentPropName, [_defineProperty({}, this.options.textNodeName, comment)]);\n        }\n\n        i = endIndex;\n      } else if (xmlData.substr(i + 1, 2) === '!D') {\n        var result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      } else if (xmlData.substr(i + 1, 2) === '![') {\n        var _closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n\n        var tagExp = xmlData.substring(i + 9, _closeIndex);\n        textData = this.saveTextToParentTag(textData, currentNode, jPath); //cdata should be set even if it is 0 length string\n\n        if (this.options.cdataPropName) {\n          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + \".\" + this.options.cdataPropName, true, false, true);\n          // if(!val) val = \"\";\n          currentNode.add(this.options.cdataPropName, [_defineProperty({}, this.options.textNodeName, tagExp)]);\n        } else {\n          var val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);\n          if (val == undefined) val = \"\";\n          currentNode.add(this.options.textNodeName, val);\n        }\n\n        i = _closeIndex + 2;\n      } else {\n        //Opening tag\n        var _result = readTagExp(xmlData, i, this.options.removeNSPrefix);\n\n        var _tagName = _result.tagName;\n        var _tagExp = _result.tagExp;\n        var attrExpPresent = _result.attrExpPresent;\n        var _closeIndex2 = _result.closeIndex;\n\n        if (this.options.transformTagName) {\n          _tagName = this.options.transformTagName(_tagName);\n        } //save text as child node\n\n\n        if (currentNode && textData) {\n          if (currentNode.tagname !== '!xml') {\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        if (_tagName !== xmlObj.tagname) {\n          jPath += jPath ? \".\" + _tagName : _tagName;\n        } //check if last tag was unpaired tag\n\n\n        var lastTag = currentNode;\n\n        if (lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1) {\n          currentNode = this.tagsNodeStack.pop();\n        }\n\n        if (this.isItStopNode(this.options.stopNodes, jPath, _tagName)) {\n          //TODO: namespace\n          var tagContent = \"\"; //self-closing tag\n\n          if (_tagExp.length > 0 && _tagExp.lastIndexOf(\"/\") === _tagExp.length - 1) {\n            i = _result.closeIndex;\n          } //boolean tag\n          else if (this.options.unpairedTags.indexOf(_tagName) !== -1) {\n            i = _result.closeIndex;\n          } //normal tag\n          else {\n            //read until closing tag is found\n            var _result2 = this.readStopNodeData(xmlData, _tagName, _closeIndex2 + 1);\n\n            if (!_result2) throw new Error(\"Unexpected end of \".concat(_tagName));\n            i = _result2.i;\n            tagContent = _result2.tagContent;\n          }\n\n          var _childNode = new xmlNode(_tagName);\n\n          if (_tagName !== _tagExp && attrExpPresent) {\n            _childNode[\":@\"] = this.buildAttributesMap(_tagExp, jPath);\n          }\n\n          if (tagContent) {\n            tagContent = this.parseTextData(tagContent, _tagName, jPath, true, attrExpPresent, true, true);\n          }\n\n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n\n          _childNode.add(this.options.textNodeName, tagContent);\n\n          currentNode.addChild(_childNode);\n        } else {\n          //selfClosing tag\n          if (_tagExp.length > 0 && _tagExp.lastIndexOf(\"/\") === _tagExp.length - 1) {\n            if (_tagName[_tagName.length - 1] === \"/\") {\n              //remove trailing '/'\n              _tagName = _tagName.substr(0, _tagName.length - 1);\n              _tagExp = _tagName;\n            } else {\n              _tagExp = _tagExp.substr(0, _tagExp.length - 1);\n            }\n\n            if (this.options.transformTagName) {\n              _tagName = this.options.transformTagName(_tagName);\n            }\n\n            var _childNode2 = new xmlNode(_tagName);\n\n            if (_tagName !== _tagExp && attrExpPresent) {\n              _childNode2[\":@\"] = this.buildAttributesMap(_tagExp, jPath);\n            }\n\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n            currentNode.addChild(_childNode2);\n          } //opening tag\n          else {\n            var _childNode3 = new xmlNode(_tagName);\n\n            this.tagsNodeStack.push(currentNode);\n\n            if (_tagName !== _tagExp && attrExpPresent) {\n              _childNode3[\":@\"] = this.buildAttributesMap(_tagExp, jPath);\n            }\n\n            currentNode.addChild(_childNode3);\n            currentNode = _childNode3;\n          }\n\n          textData = \"\";\n          i = _closeIndex2;\n        }\n      }\n    } else {\n      textData += xmlData[i];\n    }\n  }\n\n  return xmlObj.child;\n};\n\nvar replaceEntitiesValue = function replaceEntitiesValue(val) {\n  if (this.options.processEntities) {\n    for (var entityName in this.docTypeEntities) {\n      var entity = this.docTypeEntities[entityName];\n      val = val.replace(entity.regx, entity.val);\n    }\n\n    for (var _entityName in this.lastEntities) {\n      var _entity = this.lastEntities[_entityName];\n      val = val.replace(_entity.regex, _entity.val);\n    }\n\n    if (this.options.htmlEntities) {\n      for (var _entityName2 in this.htmlEntities) {\n        var _entity2 = this.htmlEntities[_entityName2];\n        val = val.replace(_entity2.regex, _entity2.val);\n      }\n    }\n\n    val = val.replace(this.ampEntity.regex, this.ampEntity.val);\n  }\n\n  return val;\n};\n\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) {\n    //store previously collected data as textNode\n    if (isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0;\n    textData = this.parseTextData(textData, currentNode.tagname, jPath, false, currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false, isLeafNode);\n    if (textData !== undefined && textData !== \"\") currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n\n  return textData;\n} //TODO: use jPath to simplify the logic\n\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\n\n\nfunction isItStopNode(stopNodes, jPath, currentTagName) {\n  var allNodesExp = \"*.\" + currentTagName;\n\n  for (var stopNodePath in stopNodes) {\n    var stopNodeExp = stopNodes[stopNodePath];\n    if (allNodesExp === stopNodeExp || jPath === stopNodeExp) return true;\n  }\n\n  return false;\n}\n/**\n * Returns the tag Expression and where it is ending handling single-dobule quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\n\n\nfunction tagExpWithClosingIndex(xmlData, i) {\n  var closingChar = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \">\";\n  var attrBoundary;\n  var tagExp = \"\";\n\n  for (var index = i; index < xmlData.length; index++) {\n    var ch = xmlData[index];\n\n    if (attrBoundary) {\n      if (ch === attrBoundary) attrBoundary = \"\"; //reset\n    } else if (ch === '\"' || ch === \"'\") {\n      attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if (closingChar[1]) {\n        if (xmlData[index + 1] === closingChar[1]) {\n          return {\n            data: tagExp,\n            index: index\n          };\n        }\n      } else {\n        return {\n          data: tagExp,\n          index: index\n        };\n      }\n    } else if (ch === '\\t') {\n      ch = \" \";\n    }\n\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg) {\n  var closingIndex = xmlData.indexOf(str, i);\n\n  if (closingIndex === -1) {\n    throw new Error(errMsg);\n  } else {\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData, i, removeNSPrefix) {\n  var closingChar = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \">\";\n  var result = tagExpWithClosingIndex(xmlData, i + 1, closingChar);\n  if (!result) return;\n  var tagExp = result.data;\n  var closeIndex = result.index;\n  var separatorIndex = tagExp.search(/\\s/);\n  var tagName = tagExp;\n  var attrExpPresent = true;\n\n  if (separatorIndex !== -1) {\n    //separate tag name and attributes expression\n    tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n    tagExp = tagExp.substr(separatorIndex + 1);\n  }\n\n  if (removeNSPrefix) {\n    var colonIndex = tagName.indexOf(\":\");\n\n    if (colonIndex !== -1) {\n      tagName = tagName.substr(colonIndex + 1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent\n  };\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\n\n\nfunction readStopNodeData(xmlData, tagName, i) {\n  var startIndex = i; // Starting at 1 since we already have an open tag\n\n  var openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === \"<\") {\n      if (xmlData[i + 1] === \"/\") {\n        //close tag\n        var closeIndex = findClosingIndex(xmlData, \">\", i, \"\".concat(tagName, \" is not closed\"));\n        var closeTagName = xmlData.substring(i + 2, closeIndex).trim();\n\n        if (closeTagName === tagName) {\n          openTagCount--;\n\n          if (openTagCount === 0) {\n            return {\n              tagContent: xmlData.substring(startIndex, i),\n              i: closeIndex\n            };\n          }\n        }\n\n        i = closeIndex;\n      } else if (xmlData[i + 1] === '?') {\n        var _closeIndex3 = findClosingIndex(xmlData, \"?>\", i + 1, \"StopNode is not closed.\");\n\n        i = _closeIndex3;\n      } else if (xmlData.substr(i + 1, 3) === '!--') {\n        var _closeIndex4 = findClosingIndex(xmlData, \"-->\", i + 3, \"StopNode is not closed.\");\n\n        i = _closeIndex4;\n      } else if (xmlData.substr(i + 1, 2) === '![') {\n        var _closeIndex5 = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n\n        i = _closeIndex5;\n      } else {\n        var tagData = readTagExp(xmlData, i, '>');\n\n        if (tagData) {\n          var openTagName = tagData && tagData.tagName;\n\n          if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length - 1] !== \"/\") {\n            openTagCount++;\n          }\n\n          i = tagData.closeIndex;\n        }\n      }\n    }\n  } //end for loop\n\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    var newval = val.trim();\n    if (newval === 'true') return true;else if (newval === 'false') return false;else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\nmodule.exports = OrderedObjParser;","map":{"version":3,"names":["util","require","xmlNode","readDocType","toNumber","regx","replace","nameRegexp","OrderedObjParser","options","currentNode","tagsNodeStack","docTypeEntities","lastEntities","regex","val","ampEntity","htmlEntities","addExternalEntities","parseXml","parseTextData","resolveNameSpace","buildAttributesMap","isItStopNode","replaceEntitiesValue","readStopNodeData","saveTextToParentTag","externalEntities","entKeys","Object","keys","i","length","ent","RegExp","tagName","jPath","dontTrim","hasAttributes","isLeafNode","escapeEntities","undefined","trimValues","trim","newval","tagValueProcessor","parseValue","parseTagValue","numberParseOptions","trimmedVal","tagname","removeNSPrefix","tags","split","prefix","charAt","attrsRegx","attrStr","ignoreAttributes","matches","getAllMatches","len","attrs","attrName","oldVal","aName","attributeNamePrefix","transformAttributeName","newVal","attributeValueProcessor","parseAttributeValue","allowBooleanAttributes","attributesGroupName","attrCollection","xmlData","xmlObj","textData","ch","closeIndex","findClosingIndex","substring","colonIndex","indexOf","substr","transformTagName","lastIndexOf","pop","tagData","readTagExp","Error","ignoreDeclaration","ignorePiTags","childNode","add","textNodeName","tagExp","attrExpPresent","addChild","endIndex","commentPropName","comment","result","entities","cdataPropName","lastTag","unpairedTags","stopNodes","tagContent","push","child","processEntities","entityName","entity","currentTagName","allNodesExp","stopNodePath","stopNodeExp","tagExpWithClosingIndex","closingChar","attrBoundary","index","data","str","errMsg","closingIndex","separatorIndex","search","startIndex","openTagCount","closeTagName","openTagName","shouldParse","isExist","module","exports"],"sources":["/home/runner/work/watchparty/watchparty/node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js"],"sourcesContent":["'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n        \n        currentNode = this.tagsNodeStack.pop();//avoid recurssion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath);\n          }\n          currentNode.addChild(childNode);\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + \".\" + this.options.cdataPropName, true, false, true);\n          // if(!val) val = \"\";\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);\n          if(val == undefined) val = \"\";\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n        }\n\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) { //TODO: namespace\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            i = result.closeIndex;\n          }\n          //boolean tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, tagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${tagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          currentNode.addChild(childNode);\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n            currentNode.addChild(childNode);\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            currentNode.addChild(childNode);\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-dobule quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n    tagExp = tagExp.substr(separatorIndex + 1);\n  }\n\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}