{"ast":null,"code":"var _slicedToArray = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\n//TODO: handle comments\nfunction readDocType(xmlData, i) {\n  var entities = {};\n\n  if (xmlData[i + 3] === 'O' && xmlData[i + 4] === 'C' && xmlData[i + 5] === 'T' && xmlData[i + 6] === 'Y' && xmlData[i + 7] === 'P' && xmlData[i + 8] === 'E') {\n    i = i + 9;\n    var angleBracketsCount = 1;\n    var hasBody = false,\n        comment = false;\n    var exp = \"\";\n\n    for (; i < xmlData.length; i++) {\n      if (xmlData[i] === '<' && !comment) {\n        //Determine the tag type\n        if (hasBody && isEntity(xmlData, i)) {\n          i += 7;\n\n          var _readEntityExp = readEntityExp(xmlData, i + 1);\n\n          var _readEntityExp2 = _slicedToArray(_readEntityExp, 3);\n\n          entityName = _readEntityExp2[0];\n          val = _readEntityExp2[1];\n          i = _readEntityExp2[2];\n          if (val.indexOf(\"&\") === -1) //Parameter entities are not supported\n            entities[entityName] = {\n              regx: RegExp(\"&\".concat(entityName, \";\"), \"g\"),\n              val: val\n            };\n        } else if (hasBody && isElement(xmlData, i)) i += 8; //Not supported\n        else if (hasBody && isAttlist(xmlData, i)) i += 8; //Not supported\n        else if (hasBody && isNotation(xmlData, i)) i += 9; //Not supported\n        else if (isComment) comment = true;else throw new Error(\"Invalid DOCTYPE\");\n\n        angleBracketsCount++;\n        exp = \"\";\n      } else if (xmlData[i] === '>') {\n        //Read tag content\n        if (comment) {\n          if (xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\") {\n            comment = false;\n            angleBracketsCount--;\n          }\n        } else {\n          angleBracketsCount--;\n        }\n\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      } else if (xmlData[i] === '[') {\n        hasBody = true;\n      } else {\n        exp += xmlData[i];\n      }\n    }\n\n    if (angleBracketsCount !== 0) {\n      throw new Error(\"Unclosed DOCTYPE\");\n    }\n  } else {\n    throw new Error(\"Invalid Tag instead of DOCTYPE\");\n  }\n\n  return {\n    entities: entities,\n    i: i\n  };\n}\n\nfunction readEntityExp(xmlData, i) {\n  //External entities are not supported\n  //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n  //Parameter entities are not supported\n  //    <!ENTITY entityname \"&anotherElement;\">\n  //Internal entities are supported\n  //    <!ENTITY entityname \"replacement text\">\n  //read EntityName\n  var entityName = \"\";\n\n  for (; i < xmlData.length && xmlData[i] !== \"'\" && xmlData[i] !== '\"'; i++) {\n    // if(xmlData[i] === \" \") continue;\n    // else \n    entityName += xmlData[i];\n  }\n\n  entityName = entityName.trim();\n  if (entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\"); //read Entity Value\n\n  var startChar = xmlData[i++];\n  var val = \"\";\n\n  for (; i < xmlData.length && xmlData[i] !== startChar; i++) {\n    val += xmlData[i];\n  }\n\n  return [entityName, val, i];\n}\n\nfunction isComment(xmlData, i) {\n  if (xmlData[i + 1] === '!' && xmlData[i + 2] === '-' && xmlData[i + 3] === '-') return true;\n  return false;\n}\n\nfunction isEntity(xmlData, i) {\n  if (xmlData[i + 1] === '!' && xmlData[i + 2] === 'E' && xmlData[i + 3] === 'N' && xmlData[i + 4] === 'T' && xmlData[i + 5] === 'I' && xmlData[i + 6] === 'T' && xmlData[i + 7] === 'Y') return true;\n  return false;\n}\n\nfunction isElement(xmlData, i) {\n  if (xmlData[i + 1] === '!' && xmlData[i + 2] === 'E' && xmlData[i + 3] === 'L' && xmlData[i + 4] === 'E' && xmlData[i + 5] === 'M' && xmlData[i + 6] === 'E' && xmlData[i + 7] === 'N' && xmlData[i + 8] === 'T') return true;\n  return false;\n}\n\nfunction isAttlist(xmlData, i) {\n  if (xmlData[i + 1] === '!' && xmlData[i + 2] === 'A' && xmlData[i + 3] === 'T' && xmlData[i + 4] === 'T' && xmlData[i + 5] === 'L' && xmlData[i + 6] === 'I' && xmlData[i + 7] === 'S' && xmlData[i + 8] === 'T') return true;\n  return false;\n}\n\nfunction isNotation(xmlData, i) {\n  if (xmlData[i + 1] === '!' && xmlData[i + 2] === 'N' && xmlData[i + 3] === 'O' && xmlData[i + 4] === 'T' && xmlData[i + 5] === 'A' && xmlData[i + 6] === 'T' && xmlData[i + 7] === 'I' && xmlData[i + 8] === 'O' && xmlData[i + 9] === 'N') return true;\n  return false;\n}\n\nmodule.exports = readDocType;","map":{"version":3,"names":["readDocType","xmlData","i","entities","angleBracketsCount","hasBody","comment","exp","length","isEntity","readEntityExp","entityName","val","indexOf","regx","RegExp","isElement","isAttlist","isNotation","isComment","Error","trim","startChar","module","exports"],"sources":["/home/runner/work/watchparty/watchparty/node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js"],"sourcesContent":["//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && isEntity(xmlData, i)){\n                    i += 7; \n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ entityName ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && isElement(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isAttlist(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isNotation(xmlData, i)) i += 9;//Not supported\n                else if( isComment)                         comment = true;\n                else                                        throw new Error(\"Invalid DOCTYPE\");\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nfunction readEntityExp(xmlData,i){\n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n    \n    //read EntityName\n    let entityName = \"\";\n    for (; i < xmlData.length && (xmlData[i] !== \"'\" && xmlData[i] !== '\"' ); i++) {\n        // if(xmlData[i] === \" \") continue;\n        // else \n        entityName += xmlData[i];\n    }\n    entityName = entityName.trim();\n    if(entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\");\n\n    //read Entity Value\n    const startChar = xmlData[i++];\n    let val = \"\"\n    for (; i < xmlData.length && xmlData[i] !== startChar ; i++) {\n        val += xmlData[i];\n    }\n    return [entityName, val, i];\n}\n\nfunction isComment(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === '-' &&\n    xmlData[i+3] === '-') return true\n    return false\n}\nfunction isEntity(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'N' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'I' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'Y') return true\n    return false\n}\nfunction isElement(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'L' &&\n    xmlData[i+4] === 'E' &&\n    xmlData[i+5] === 'M' &&\n    xmlData[i+6] === 'E' &&\n    xmlData[i+7] === 'N' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\n\nfunction isAttlist(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'A' &&\n    xmlData[i+3] === 'T' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'L' &&\n    xmlData[i+6] === 'I' &&\n    xmlData[i+7] === 'S' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\nfunction isNotation(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'N' &&\n    xmlData[i+3] === 'O' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'A' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'I' &&\n    xmlData[i+8] === 'O' &&\n    xmlData[i+9] === 'N') return true\n    return false\n}\n\nmodule.exports = readDocType;"],"mappings":"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"},"metadata":{},"sourceType":"script"}