{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _regeneratorRuntime = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Edge11 = void 0;\n\nvar Logger_1 = require(\"../Logger\");\n\nvar errors_1 = require(\"../errors\");\n\nvar utils = __importStar(require(\"../utils\"));\n\nvar ortc = __importStar(require(\"../ortc\"));\n\nvar edgeUtils = __importStar(require(\"./ortc/edgeUtils\"));\n\nvar HandlerInterface_1 = require(\"./HandlerInterface\");\n\nvar logger = new Logger_1.Logger('Edge11');\n\nvar Edge11 = /*#__PURE__*/function (_HandlerInterface_1$H) {\n  _inherits(Edge11, _HandlerInterface_1$H);\n\n  var _super = _createSuper(Edge11);\n\n  function Edge11() {\n    var _this;\n\n    _classCallCheck(this, Edge11);\n\n    _this = _super.call(this); // Map of RTCRtpSenders indexed by id.\n\n    _this._rtpSenders = new Map(); // Map of RTCRtpReceivers indexed by id.\n\n    _this._rtpReceivers = new Map(); // Next localId for sending tracks.\n\n    _this._nextSendLocalId = 0; // Got transport local and remote parameters.\n\n    _this._transportReady = false;\n    return _this;\n  }\n\n  _createClass(Edge11, [{\n    key: \"name\",\n    get: function get() {\n      return 'Edge11';\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      logger.debug('close()'); // Close the ICE gatherer.\n      // NOTE: Not yet implemented by Edge.\n\n      try {\n        this._iceGatherer.close();\n      } catch (error) {} // Close the ICE transport.\n\n\n      try {\n        this._iceTransport.stop();\n      } catch (error) {} // Close the DTLS transport.\n\n\n      try {\n        this._dtlsTransport.stop();\n      } catch (error) {} // Close RTCRtpSenders.\n\n\n      var _iterator = _createForOfIteratorHelper(this._rtpSenders.values()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var rtpSender = _step.value;\n\n          try {\n            rtpSender.stop();\n          } catch (error) {}\n        } // Close RTCRtpReceivers.\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(this._rtpReceivers.values()),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var rtpReceiver = _step2.value;\n\n          try {\n            rtpReceiver.stop();\n          } catch (error) {}\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      this.emit('@close');\n    }\n  }, {\n    key: \"getNativeRtpCapabilities\",\n    value: function () {\n      var _getNativeRtpCapabilities = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                logger.debug('getNativeRtpCapabilities()');\n                return _context.abrupt(\"return\", edgeUtils.getCapabilities());\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getNativeRtpCapabilities() {\n        return _getNativeRtpCapabilities.apply(this, arguments);\n      }\n\n      return getNativeRtpCapabilities;\n    }()\n  }, {\n    key: \"getNativeSctpCapabilities\",\n    value: function () {\n      var _getNativeSctpCapabilities = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                logger.debug('getNativeSctpCapabilities()');\n                return _context2.abrupt(\"return\", {\n                  numStreams: {\n                    OS: 0,\n                    MIS: 0\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getNativeSctpCapabilities() {\n        return _getNativeSctpCapabilities.apply(this, arguments);\n      }\n\n      return getNativeSctpCapabilities;\n    }()\n  }, {\n    key: \"run\",\n    value: function run(_ref) {\n      var direction = _ref.direction,\n          iceParameters = _ref.iceParameters,\n          iceCandidates = _ref.iceCandidates,\n          dtlsParameters = _ref.dtlsParameters,\n          sctpParameters = _ref.sctpParameters,\n          iceServers = _ref.iceServers,\n          iceTransportPolicy = _ref.iceTransportPolicy,\n          additionalSettings = _ref.additionalSettings,\n          proprietaryConstraints = _ref.proprietaryConstraints,\n          extendedRtpCapabilities = _ref.extendedRtpCapabilities;\n      logger.debug('run()');\n      this._sendingRtpParametersByKind = {\n        audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n        video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n      };\n      this._remoteIceParameters = iceParameters;\n      this._remoteIceCandidates = iceCandidates;\n      this._remoteDtlsParameters = dtlsParameters;\n      this._cname = \"CNAME-\".concat(utils.generateRandomNumber());\n      this.setIceGatherer({\n        iceServers: iceServers,\n        iceTransportPolicy: iceTransportPolicy\n      });\n      this.setIceTransport();\n      this.setDtlsTransport();\n    } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  }, {\n    key: \"updateIceServers\",\n    value: function () {\n      var _updateIceServers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(iceServers) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                throw new errors_1.UnsupportedError('not supported');\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function updateIceServers(_x) {\n        return _updateIceServers.apply(this, arguments);\n      }\n\n      return updateIceServers;\n    }()\n  }, {\n    key: \"restartIce\",\n    value: function () {\n      var _restartIce = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(iceParameters) {\n        var _iterator3, _step3, candidate;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                logger.debug('restartIce()');\n                this._remoteIceParameters = iceParameters;\n\n                if (this._transportReady) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 4:\n                logger.debug('restartIce() | calling iceTransport.start()');\n\n                this._iceTransport.start(this._iceGatherer, iceParameters, 'controlling');\n\n                _iterator3 = _createForOfIteratorHelper(this._remoteIceCandidates);\n\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    candidate = _step3.value;\n\n                    this._iceTransport.addRemoteCandidate(candidate);\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n\n                this._iceTransport.addRemoteCandidate({});\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function restartIce(_x2) {\n        return _restartIce.apply(this, arguments);\n      }\n\n      return restartIce;\n    }()\n  }, {\n    key: \"getTransportStats\",\n    value: function () {\n      var _getTransportStats = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", this._iceTransport.getStats());\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getTransportStats() {\n        return _getTransportStats.apply(this, arguments);\n      }\n\n      return getTransportStats;\n    }()\n  }, {\n    key: \"send\",\n    value: function () {\n      var _send = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6( // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      _ref2) {\n        var track, encodings, codecOptions, codec, rtpSender, rtpParameters, useRtx, _iterator4, _step4, encoding, edgeRtpParameters, localId;\n\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                track = _ref2.track, encodings = _ref2.encodings, codecOptions = _ref2.codecOptions, codec = _ref2.codec;\n                logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n\n                if (this._transportReady) {\n                  _context6.next = 5;\n                  break;\n                }\n\n                _context6.next = 5;\n                return this.setupTransport({\n                  localDtlsRole: 'server'\n                });\n\n              case 5:\n                logger.debug('send() | calling new RTCRtpSender()');\n                rtpSender = new RTCRtpSender(track, this._dtlsTransport);\n                rtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n                rtpParameters.codecs = ortc.reduceCodecs(rtpParameters.codecs, codec);\n                useRtx = rtpParameters.codecs.some(function (_codec) {\n                  return /.+\\/rtx$/i.test(_codec.mimeType);\n                });\n\n                if (!encodings) {\n                  encodings = [{}];\n                }\n\n                _iterator4 = _createForOfIteratorHelper(encodings);\n\n                try {\n                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                    encoding = _step4.value;\n                    encoding.ssrc = utils.generateRandomNumber();\n\n                    if (useRtx) {\n                      encoding.rtx = {\n                        ssrc: utils.generateRandomNumber()\n                      };\n                    }\n                  }\n                } catch (err) {\n                  _iterator4.e(err);\n                } finally {\n                  _iterator4.f();\n                }\n\n                rtpParameters.encodings = encodings; // Fill RTCRtpParameters.rtcp.\n\n                rtpParameters.rtcp = {\n                  cname: this._cname,\n                  reducedSize: true,\n                  mux: true\n                }; // NOTE: Convert our standard RTCRtpParameters into those that Edge\n                // expects.\n\n                edgeRtpParameters = edgeUtils.mangleRtpParameters(rtpParameters);\n                logger.debug('send() | calling rtpSender.send() [params:%o]', edgeRtpParameters);\n                _context6.next = 19;\n                return rtpSender.send(edgeRtpParameters);\n\n              case 19:\n                localId = String(this._nextSendLocalId);\n                this._nextSendLocalId++; // Store it.\n\n                this._rtpSenders.set(localId, rtpSender);\n\n                return _context6.abrupt(\"return\", {\n                  localId: localId,\n                  rtpParameters: rtpParameters,\n                  rtpSender: rtpSender\n                });\n\n              case 23:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function send(_x3) {\n        return _send.apply(this, arguments);\n      }\n\n      return send;\n    }()\n  }, {\n    key: \"stopSending\",\n    value: function () {\n      var _stopSending = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(localId) {\n        var rtpSender;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                logger.debug('stopSending() [localId:%s]', localId);\n                rtpSender = this._rtpSenders.get(localId);\n\n                if (rtpSender) {\n                  _context7.next = 4;\n                  break;\n                }\n\n                throw new Error('RTCRtpSender not found');\n\n              case 4:\n                this._rtpSenders.delete(localId);\n\n                _context7.prev = 5;\n                logger.debug('stopSending() | calling rtpSender.stop()');\n                rtpSender.stop();\n                _context7.next = 14;\n                break;\n\n              case 10:\n                _context7.prev = 10;\n                _context7.t0 = _context7[\"catch\"](5);\n                logger.warn('stopSending() | rtpSender.stop() failed:%o', _context7.t0);\n                throw _context7.t0;\n\n              case 14:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[5, 10]]);\n      }));\n\n      function stopSending(_x4) {\n        return _stopSending.apply(this, arguments);\n      }\n\n      return stopSending;\n    }() // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  }, {\n    key: \"pauseSending\",\n    value: function () {\n      var _pauseSending = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(localId) {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function pauseSending(_x5) {\n        return _pauseSending.apply(this, arguments);\n      }\n\n      return pauseSending;\n    }() // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  }, {\n    key: \"resumeSending\",\n    value: function () {\n      var _resumeSending = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(localId) {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function resumeSending(_x6) {\n        return _resumeSending.apply(this, arguments);\n      }\n\n      return resumeSending;\n    }()\n  }, {\n    key: \"replaceTrack\",\n    value: function () {\n      var _replaceTrack = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(localId, track) {\n        var rtpSender;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (track) {\n                  logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n                } else {\n                  logger.debug('replaceTrack() [localId:%s, no track]', localId);\n                }\n\n                rtpSender = this._rtpSenders.get(localId);\n\n                if (rtpSender) {\n                  _context10.next = 4;\n                  break;\n                }\n\n                throw new Error('RTCRtpSender not found');\n\n              case 4:\n                rtpSender.setTrack(track);\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function replaceTrack(_x7, _x8) {\n        return _replaceTrack.apply(this, arguments);\n      }\n\n      return replaceTrack;\n    }()\n  }, {\n    key: \"setMaxSpatialLayer\",\n    value: function () {\n      var _setMaxSpatialLayer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(localId, spatialLayer) {\n        var rtpSender, parameters;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n                rtpSender = this._rtpSenders.get(localId);\n\n                if (rtpSender) {\n                  _context11.next = 4;\n                  break;\n                }\n\n                throw new Error('RTCRtpSender not found');\n\n              case 4:\n                parameters = rtpSender.getParameters();\n                parameters.encodings.forEach(function (encoding, idx) {\n                  if (idx <= spatialLayer) {\n                    encoding.active = true;\n                  } else {\n                    encoding.active = false;\n                  }\n                });\n                _context11.next = 8;\n                return rtpSender.setParameters(parameters);\n\n              case 8:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function setMaxSpatialLayer(_x9, _x10) {\n        return _setMaxSpatialLayer.apply(this, arguments);\n      }\n\n      return setMaxSpatialLayer;\n    }()\n  }, {\n    key: \"setRtpEncodingParameters\",\n    value: function () {\n      var _setRtpEncodingParameters = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(localId, params) {\n        var rtpSender, parameters;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n                rtpSender = this._rtpSenders.get(localId);\n\n                if (rtpSender) {\n                  _context12.next = 4;\n                  break;\n                }\n\n                throw new Error('RTCRtpSender not found');\n\n              case 4:\n                parameters = rtpSender.getParameters();\n                parameters.encodings.forEach(function (encoding, idx) {\n                  parameters.encodings[idx] = _objectSpread(_objectSpread({}, encoding), params);\n                });\n                _context12.next = 8;\n                return rtpSender.setParameters(parameters);\n\n              case 8:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function setRtpEncodingParameters(_x11, _x12) {\n        return _setRtpEncodingParameters.apply(this, arguments);\n      }\n\n      return setRtpEncodingParameters;\n    }()\n  }, {\n    key: \"getSenderStats\",\n    value: function () {\n      var _getSenderStats = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(localId) {\n        var rtpSender;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                rtpSender = this._rtpSenders.get(localId);\n\n                if (rtpSender) {\n                  _context13.next = 3;\n                  break;\n                }\n\n                throw new Error('RTCRtpSender not found');\n\n              case 3:\n                return _context13.abrupt(\"return\", rtpSender.getStats());\n\n              case 4:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function getSenderStats(_x13) {\n        return _getSenderStats.apply(this, arguments);\n      }\n\n      return getSenderStats;\n    }()\n  }, {\n    key: \"sendDataChannel\",\n    value: function () {\n      var _sendDataChannel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14( // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      options) {\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                throw new errors_1.UnsupportedError('not implemented');\n\n              case 1:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14);\n      }));\n\n      function sendDataChannel(_x14) {\n        return _sendDataChannel.apply(this, arguments);\n      }\n\n      return sendDataChannel;\n    }()\n  }, {\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(optionsList) {\n        var results, _iterator5, _step5, options, trackId, kind, _iterator6, _step6, _options, _trackId, _kind, rtpParameters, rtpReceiver, edgeRtpParameters, localId;\n\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                results = [];\n                _iterator5 = _createForOfIteratorHelper(optionsList);\n\n                try {\n                  for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                    options = _step5.value;\n                    trackId = options.trackId, kind = options.kind;\n                    logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n                  }\n                } catch (err) {\n                  _iterator5.e(err);\n                } finally {\n                  _iterator5.f();\n                }\n\n                if (this._transportReady) {\n                  _context15.next = 6;\n                  break;\n                }\n\n                _context15.next = 6;\n                return this.setupTransport({\n                  localDtlsRole: 'server'\n                });\n\n              case 6:\n                _iterator6 = _createForOfIteratorHelper(optionsList);\n                _context15.prev = 7;\n\n                _iterator6.s();\n\n              case 9:\n                if ((_step6 = _iterator6.n()).done) {\n                  _context15.next = 24;\n                  break;\n                }\n\n                _options = _step6.value;\n                _trackId = _options.trackId, _kind = _options.kind, rtpParameters = _options.rtpParameters;\n                logger.debug('receive() | calling new RTCRtpReceiver()');\n                rtpReceiver = new RTCRtpReceiver(this._dtlsTransport, _kind);\n                rtpReceiver.addEventListener('error', function (event) {\n                  logger.error('rtpReceiver \"error\" event [event:%o]', event);\n                }); // NOTE: Convert our standard RTCRtpParameters into those that Edge\n                // expects.\n\n                edgeRtpParameters = edgeUtils.mangleRtpParameters(rtpParameters);\n                logger.debug('receive() | calling rtpReceiver.receive() [params:%o]', edgeRtpParameters);\n                _context15.next = 19;\n                return rtpReceiver.receive(edgeRtpParameters);\n\n              case 19:\n                localId = _trackId; // Store it.\n\n                this._rtpReceivers.set(localId, rtpReceiver);\n\n                results.push({\n                  localId: localId,\n                  track: rtpReceiver.track,\n                  rtpReceiver: rtpReceiver\n                });\n\n              case 22:\n                _context15.next = 9;\n                break;\n\n              case 24:\n                _context15.next = 29;\n                break;\n\n              case 26:\n                _context15.prev = 26;\n                _context15.t0 = _context15[\"catch\"](7);\n\n                _iterator6.e(_context15.t0);\n\n              case 29:\n                _context15.prev = 29;\n\n                _iterator6.f();\n\n                return _context15.finish(29);\n\n              case 32:\n                return _context15.abrupt(\"return\", results);\n\n              case 33:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this, [[7, 26, 29, 32]]);\n      }));\n\n      function receive(_x15) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }()\n  }, {\n    key: \"stopReceiving\",\n    value: function () {\n      var _stopReceiving = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(localIds) {\n        var _iterator7, _step7, localId, rtpReceiver;\n\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _iterator7 = _createForOfIteratorHelper(localIds);\n                _context16.prev = 1;\n\n                _iterator7.s();\n\n              case 3:\n                if ((_step7 = _iterator7.n()).done) {\n                  _context16.next = 13;\n                  break;\n                }\n\n                localId = _step7.value;\n                logger.debug('stopReceiving() [localId:%s]', localId);\n                rtpReceiver = this._rtpReceivers.get(localId);\n\n                if (rtpReceiver) {\n                  _context16.next = 9;\n                  break;\n                }\n\n                throw new Error('RTCRtpReceiver not found');\n\n              case 9:\n                this._rtpReceivers.delete(localId);\n\n                try {\n                  logger.debug('stopReceiving() | calling rtpReceiver.stop()');\n                  rtpReceiver.stop();\n                } catch (error) {\n                  logger.warn('stopReceiving() | rtpReceiver.stop() failed:%o', error);\n                }\n\n              case 11:\n                _context16.next = 3;\n                break;\n\n              case 13:\n                _context16.next = 18;\n                break;\n\n              case 15:\n                _context16.prev = 15;\n                _context16.t0 = _context16[\"catch\"](1);\n\n                _iterator7.e(_context16.t0);\n\n              case 18:\n                _context16.prev = 18;\n\n                _iterator7.f();\n\n                return _context16.finish(18);\n\n              case 21:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this, [[1, 15, 18, 21]]);\n      }));\n\n      function stopReceiving(_x16) {\n        return _stopReceiving.apply(this, arguments);\n      }\n\n      return stopReceiving;\n    }()\n  }, {\n    key: \"pauseReceiving\",\n    value: function () {\n      var _pauseReceiving = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17( // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      localIds) {\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      }));\n\n      function pauseReceiving(_x17) {\n        return _pauseReceiving.apply(this, arguments);\n      }\n\n      return pauseReceiving;\n    }()\n  }, {\n    key: \"resumeReceiving\",\n    value: function () {\n      var _resumeReceiving = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18( // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      localIds) {\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18);\n      }));\n\n      function resumeReceiving(_x18) {\n        return _resumeReceiving.apply(this, arguments);\n      }\n\n      return resumeReceiving;\n    }()\n  }, {\n    key: \"getReceiverStats\",\n    value: function () {\n      var _getReceiverStats = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(localId) {\n        var rtpReceiver;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                rtpReceiver = this._rtpReceivers.get(localId);\n\n                if (rtpReceiver) {\n                  _context19.next = 3;\n                  break;\n                }\n\n                throw new Error('RTCRtpReceiver not found');\n\n              case 3:\n                return _context19.abrupt(\"return\", rtpReceiver.getStats());\n\n              case 4:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function getReceiverStats(_x19) {\n        return _getReceiverStats.apply(this, arguments);\n      }\n\n      return getReceiverStats;\n    }()\n  }, {\n    key: \"receiveDataChannel\",\n    value: function () {\n      var _receiveDataChannel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20( // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      options) {\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                throw new errors_1.UnsupportedError('not implemented');\n\n              case 1:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20);\n      }));\n\n      function receiveDataChannel(_x20) {\n        return _receiveDataChannel.apply(this, arguments);\n      }\n\n      return receiveDataChannel;\n    }()\n  }, {\n    key: \"setIceGatherer\",\n    value: function setIceGatherer(_ref3) {\n      var iceServers = _ref3.iceServers,\n          iceTransportPolicy = _ref3.iceTransportPolicy;\n      // @ts-ignore\n      var iceGatherer = new RTCIceGatherer({\n        iceServers: iceServers || [],\n        gatherPolicy: iceTransportPolicy || 'all'\n      });\n      iceGatherer.addEventListener('error', function (event) {\n        logger.error('iceGatherer \"error\" event [event:%o]', event);\n      }); // NOTE: Not yet implemented by Edge, which starts gathering automatically.\n\n      try {\n        iceGatherer.gather();\n      } catch (error) {\n        logger.debug('setIceGatherer() | iceGatherer.gather() failed: %s', error.toString());\n      }\n\n      this._iceGatherer = iceGatherer;\n    }\n  }, {\n    key: \"setIceTransport\",\n    value: function setIceTransport() {\n      var _this2 = this;\n\n      var iceTransport = new RTCIceTransport(this._iceGatherer); // NOTE: Not yet implemented by Edge.\n\n      iceTransport.addEventListener('statechange', function () {\n        switch (iceTransport.state) {\n          case 'checking':\n            _this2.emit('@connectionstatechange', 'connecting');\n\n            break;\n\n          case 'connected':\n          case 'completed':\n            _this2.emit('@connectionstatechange', 'connected');\n\n            break;\n\n          case 'failed':\n            _this2.emit('@connectionstatechange', 'failed');\n\n            break;\n\n          case 'disconnected':\n            _this2.emit('@connectionstatechange', 'disconnected');\n\n            break;\n\n          case 'closed':\n            _this2.emit('@connectionstatechange', 'closed');\n\n            break;\n        }\n      }); // NOTE: Not standard, but implemented by Edge.\n\n      iceTransport.addEventListener('icestatechange', function () {\n        switch (iceTransport.state) {\n          case 'checking':\n            _this2.emit('@connectionstatechange', 'connecting');\n\n            break;\n\n          case 'connected':\n          case 'completed':\n            _this2.emit('@connectionstatechange', 'connected');\n\n            break;\n\n          case 'failed':\n            _this2.emit('@connectionstatechange', 'failed');\n\n            break;\n\n          case 'disconnected':\n            _this2.emit('@connectionstatechange', 'disconnected');\n\n            break;\n\n          case 'closed':\n            _this2.emit('@connectionstatechange', 'closed');\n\n            break;\n        }\n      });\n      iceTransport.addEventListener('candidatepairchange', function (event) {\n        logger.debug('iceTransport \"candidatepairchange\" event [pair:%o]', event.pair);\n      });\n      this._iceTransport = iceTransport;\n    }\n  }, {\n    key: \"setDtlsTransport\",\n    value: function setDtlsTransport() {\n      var _this3 = this;\n\n      var dtlsTransport = new RTCDtlsTransport(this._iceTransport); // NOTE: Not yet implemented by Edge.\n\n      dtlsTransport.addEventListener('statechange', function () {\n        logger.debug('dtlsTransport \"statechange\" event [state:%s]', dtlsTransport.state);\n      }); // NOTE: Not standard, but implemented by Edge.\n\n      dtlsTransport.addEventListener('dtlsstatechange', function () {\n        logger.debug('dtlsTransport \"dtlsstatechange\" event [state:%s]', dtlsTransport.state);\n\n        if (dtlsTransport.state === 'closed') {\n          _this3.emit('@connectionstatechange', 'closed');\n        }\n      });\n      dtlsTransport.addEventListener('error', function (event) {\n        logger.error('dtlsTransport \"error\" event [event:%o]', event);\n      });\n      this._dtlsTransport = dtlsTransport;\n    }\n  }, {\n    key: \"setupTransport\",\n    value: function () {\n      var _setupTransport = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(_ref4) {\n        var _this4 = this;\n\n        var localDtlsRole, dtlsParameters, _iterator8, _step8, candidate;\n\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                localDtlsRole = _ref4.localDtlsRole;\n                logger.debug('setupTransport()'); // Get our local DTLS parameters.\n\n                dtlsParameters = this._dtlsTransport.getLocalParameters();\n                dtlsParameters.role = localDtlsRole; // Need to tell the remote transport about our parameters.\n\n                _context21.next = 6;\n                return new Promise(function (resolve, reject) {\n                  _this4.safeEmit('@connect', {\n                    dtlsParameters: dtlsParameters\n                  }, resolve, reject);\n                });\n\n              case 6:\n                // Start the RTCIceTransport.\n                this._iceTransport.start(this._iceGatherer, this._remoteIceParameters, 'controlling'); // Add remote ICE candidates.\n\n\n                _iterator8 = _createForOfIteratorHelper(this._remoteIceCandidates);\n\n                try {\n                  for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                    candidate = _step8.value;\n\n                    this._iceTransport.addRemoteCandidate(candidate);\n                  } // Also signal a 'complete' candidate as per spec.\n                  // NOTE: It should be {complete: true} but Edge prefers {}.\n                  // NOTE: If we don't signal end of candidates, the Edge RTCIceTransport\n                  // won't enter the 'completed' state.\n\n                } catch (err) {\n                  _iterator8.e(err);\n                } finally {\n                  _iterator8.f();\n                }\n\n                this._iceTransport.addRemoteCandidate({}); // NOTE: Edge does not like SHA less than 256.\n\n\n                this._remoteDtlsParameters.fingerprints = this._remoteDtlsParameters.fingerprints.filter(function (fingerprint) {\n                  return fingerprint.algorithm === 'sha-256' || fingerprint.algorithm === 'sha-384' || fingerprint.algorithm === 'sha-512';\n                }); // Start the RTCDtlsTransport.\n\n                this._dtlsTransport.start(this._remoteDtlsParameters);\n\n                this._transportReady = true;\n\n              case 13:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function setupTransport(_x21) {\n        return _setupTransport.apply(this, arguments);\n      }\n\n      return setupTransport;\n    }()\n  }], [{\n    key: \"createFactory\",\n    value:\n    /**\n     * Creates a factory function.\n     */\n    function createFactory() {\n      return function () {\n        return new Edge11();\n      };\n    }\n  }]);\n\n  return Edge11;\n}(HandlerInterface_1.HandlerInterface);\n\nexports.Edge11 = Edge11;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","Edge11","Logger_1","require","errors_1","utils","ortc","edgeUtils","HandlerInterface_1","logger","Logger","_rtpSenders","Map","_rtpReceivers","_nextSendLocalId","_transportReady","debug","_iceGatherer","close","error","_iceTransport","stop","_dtlsTransport","values","rtpSender","rtpReceiver","emit","getCapabilities","numStreams","OS","MIS","direction","iceParameters","iceCandidates","dtlsParameters","sctpParameters","iceServers","iceTransportPolicy","additionalSettings","proprietaryConstraints","extendedRtpCapabilities","_sendingRtpParametersByKind","audio","getSendingRtpParameters","video","_remoteIceParameters","_remoteIceCandidates","_remoteDtlsParameters","_cname","generateRandomNumber","setIceGatherer","setIceTransport","setDtlsTransport","UnsupportedError","start","candidate","addRemoteCandidate","getStats","track","encodings","codecOptions","codec","kind","id","setupTransport","localDtlsRole","RTCRtpSender","rtpParameters","clone","codecs","reduceCodecs","useRtx","some","_codec","test","mimeType","encoding","ssrc","rtx","rtcp","cname","reducedSize","mux","edgeRtpParameters","mangleRtpParameters","send","localId","String","set","Error","delete","warn","setTrack","spatialLayer","parameters","getParameters","forEach","idx","active","setParameters","params","options","optionsList","results","trackId","RTCRtpReceiver","addEventListener","event","receive","push","localIds","iceGatherer","RTCIceGatherer","gatherPolicy","gather","toString","iceTransport","RTCIceTransport","state","pair","dtlsTransport","RTCDtlsTransport","getLocalParameters","role","Promise","resolve","reject","safeEmit","fingerprints","filter","fingerprint","algorithm","HandlerInterface"],"sources":["/home/runner/work/watchparty/watchparty/node_modules/mediasoup-client/lib/handlers/Edge11.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Edge11 = void 0;\nconst Logger_1 = require(\"../Logger\");\nconst errors_1 = require(\"../errors\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst edgeUtils = __importStar(require(\"./ortc/edgeUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst logger = new Logger_1.Logger('Edge11');\nclass Edge11 extends HandlerInterface_1.HandlerInterface {\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Edge11();\n    }\n    constructor() {\n        super();\n        // Map of RTCRtpSenders indexed by id.\n        this._rtpSenders = new Map();\n        // Map of RTCRtpReceivers indexed by id.\n        this._rtpReceivers = new Map();\n        // Next localId for sending tracks.\n        this._nextSendLocalId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    get name() {\n        return 'Edge11';\n    }\n    close() {\n        logger.debug('close()');\n        // Close the ICE gatherer.\n        // NOTE: Not yet implemented by Edge.\n        try {\n            this._iceGatherer.close();\n        }\n        catch (error) { }\n        // Close the ICE transport.\n        try {\n            this._iceTransport.stop();\n        }\n        catch (error) { }\n        // Close the DTLS transport.\n        try {\n            this._dtlsTransport.stop();\n        }\n        catch (error) { }\n        // Close RTCRtpSenders.\n        for (const rtpSender of this._rtpSenders.values()) {\n            try {\n                rtpSender.stop();\n            }\n            catch (error) { }\n        }\n        // Close RTCRtpReceivers.\n        for (const rtpReceiver of this._rtpReceivers.values()) {\n            try {\n                rtpReceiver.stop();\n            }\n            catch (error) { }\n        }\n        this.emit('@close');\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        return edgeUtils.getCapabilities();\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: { OS: 0, MIS: 0 }\n        };\n    }\n    run({ direction, // eslint-disable-line @typescript-eslint/no-unused-vars\n    iceParameters, iceCandidates, dtlsParameters, sctpParameters, // eslint-disable-line @typescript-eslint/no-unused-vars\n    iceServers, iceTransportPolicy, additionalSettings, // eslint-disable-line @typescript-eslint/no-unused-vars\n    proprietaryConstraints, // eslint-disable-line @typescript-eslint/no-unused-vars\n    extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._remoteIceParameters = iceParameters;\n        this._remoteIceCandidates = iceCandidates;\n        this._remoteDtlsParameters = dtlsParameters;\n        this._cname = `CNAME-${utils.generateRandomNumber()}`;\n        this.setIceGatherer({ iceServers, iceTransportPolicy });\n        this.setIceTransport();\n        this.setDtlsTransport();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async updateIceServers(iceServers) {\n        // NOTE: Edge 11 does not implement iceGatherer.gater().\n        throw new errors_1.UnsupportedError('not supported');\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        this._remoteIceParameters = iceParameters;\n        if (!this._transportReady) {\n            return;\n        }\n        logger.debug('restartIce() | calling iceTransport.start()');\n        this._iceTransport.start(this._iceGatherer, iceParameters, 'controlling');\n        for (const candidate of this._remoteIceCandidates) {\n            this._iceTransport.addRemoteCandidate(candidate);\n        }\n        this._iceTransport.addRemoteCandidate({});\n    }\n    async getTransportStats() {\n        return this._iceTransport.getStats();\n    }\n    async send(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    { track, encodings, codecOptions, codec }) {\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (!this._transportReady) {\n            await this.setupTransport({ localDtlsRole: 'server' });\n        }\n        logger.debug('send() | calling new RTCRtpSender()');\n        const rtpSender = new RTCRtpSender(track, this._dtlsTransport);\n        const rtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        rtpParameters.codecs = ortc.reduceCodecs(rtpParameters.codecs, codec);\n        const useRtx = rtpParameters.codecs\n            .some((_codec) => /.+\\/rtx$/i.test(_codec.mimeType));\n        if (!encodings) {\n            encodings = [{}];\n        }\n        for (const encoding of encodings) {\n            encoding.ssrc = utils.generateRandomNumber();\n            if (useRtx) {\n                encoding.rtx = { ssrc: utils.generateRandomNumber() };\n            }\n        }\n        rtpParameters.encodings = encodings;\n        // Fill RTCRtpParameters.rtcp.\n        rtpParameters.rtcp =\n            {\n                cname: this._cname,\n                reducedSize: true,\n                mux: true\n            };\n        // NOTE: Convert our standard RTCRtpParameters into those that Edge\n        // expects.\n        const edgeRtpParameters = edgeUtils.mangleRtpParameters(rtpParameters);\n        logger.debug('send() | calling rtpSender.send() [params:%o]', edgeRtpParameters);\n        await rtpSender.send(edgeRtpParameters);\n        const localId = String(this._nextSendLocalId);\n        this._nextSendLocalId++;\n        // Store it.\n        this._rtpSenders.set(localId, rtpSender);\n        return { localId, rtpParameters, rtpSender };\n    }\n    async stopSending(localId) {\n        logger.debug('stopSending() [localId:%s]', localId);\n        const rtpSender = this._rtpSenders.get(localId);\n        if (!rtpSender) {\n            throw new Error('RTCRtpSender not found');\n        }\n        this._rtpSenders.delete(localId);\n        try {\n            logger.debug('stopSending() | calling rtpSender.stop()');\n            rtpSender.stop();\n        }\n        catch (error) {\n            logger.warn('stopSending() | rtpSender.stop() failed:%o', error);\n            throw error;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async pauseSending(localId) {\n        // Unimplemented.\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async resumeSending(localId) {\n        // Unimplemented.\n    }\n    async replaceTrack(localId, track) {\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const rtpSender = this._rtpSenders.get(localId);\n        if (!rtpSender) {\n            throw new Error('RTCRtpSender not found');\n        }\n        rtpSender.setTrack(track);\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const rtpSender = this._rtpSenders.get(localId);\n        if (!rtpSender) {\n            throw new Error('RTCRtpSender not found');\n        }\n        const parameters = rtpSender.getParameters();\n        parameters.encodings\n            .forEach((encoding, idx) => {\n            if (idx <= spatialLayer) {\n                encoding.active = true;\n            }\n            else {\n                encoding.active = false;\n            }\n        });\n        await rtpSender.setParameters(parameters);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const rtpSender = this._rtpSenders.get(localId);\n        if (!rtpSender) {\n            throw new Error('RTCRtpSender not found');\n        }\n        const parameters = rtpSender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await rtpSender.setParameters(parameters);\n    }\n    async getSenderStats(localId) {\n        const rtpSender = this._rtpSenders.get(localId);\n        if (!rtpSender) {\n            throw new Error('RTCRtpSender not found');\n        }\n        return rtpSender.getStats();\n    }\n    async sendDataChannel(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    options) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    async receive(optionsList) {\n        const results = [];\n        for (const options of optionsList) {\n            const { trackId, kind } = options;\n            logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n        }\n        if (!this._transportReady) {\n            await this.setupTransport({ localDtlsRole: 'server' });\n        }\n        for (const options of optionsList) {\n            const { trackId, kind, rtpParameters } = options;\n            logger.debug('receive() | calling new RTCRtpReceiver()');\n            const rtpReceiver = new RTCRtpReceiver(this._dtlsTransport, kind);\n            rtpReceiver.addEventListener('error', (event) => {\n                logger.error('rtpReceiver \"error\" event [event:%o]', event);\n            });\n            // NOTE: Convert our standard RTCRtpParameters into those that Edge\n            // expects.\n            const edgeRtpParameters = edgeUtils.mangleRtpParameters(rtpParameters);\n            logger.debug('receive() | calling rtpReceiver.receive() [params:%o]', edgeRtpParameters);\n            await rtpReceiver.receive(edgeRtpParameters);\n            const localId = trackId;\n            // Store it.\n            this._rtpReceivers.set(localId, rtpReceiver);\n            results.push({\n                localId,\n                track: rtpReceiver.track,\n                rtpReceiver\n            });\n        }\n        return results;\n    }\n    async stopReceiving(localIds) {\n        for (const localId of localIds) {\n            logger.debug('stopReceiving() [localId:%s]', localId);\n            const rtpReceiver = this._rtpReceivers.get(localId);\n            if (!rtpReceiver) {\n                throw new Error('RTCRtpReceiver not found');\n            }\n            this._rtpReceivers.delete(localId);\n            try {\n                logger.debug('stopReceiving() | calling rtpReceiver.stop()');\n                rtpReceiver.stop();\n            }\n            catch (error) {\n                logger.warn('stopReceiving() | rtpReceiver.stop() failed:%o', error);\n            }\n        }\n    }\n    async pauseReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localIds) {\n        // Unimplemented.\n    }\n    async resumeReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localIds) {\n        // Unimplemented.\n    }\n    async getReceiverStats(localId) {\n        const rtpReceiver = this._rtpReceivers.get(localId);\n        if (!rtpReceiver) {\n            throw new Error('RTCRtpReceiver not found');\n        }\n        return rtpReceiver.getStats();\n    }\n    async receiveDataChannel(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    options) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    setIceGatherer({ iceServers, iceTransportPolicy }) {\n        // @ts-ignore\n        const iceGatherer = new RTCIceGatherer({\n            iceServers: iceServers || [],\n            gatherPolicy: iceTransportPolicy || 'all'\n        });\n        iceGatherer.addEventListener('error', (event) => {\n            logger.error('iceGatherer \"error\" event [event:%o]', event);\n        });\n        // NOTE: Not yet implemented by Edge, which starts gathering automatically.\n        try {\n            iceGatherer.gather();\n        }\n        catch (error) {\n            logger.debug('setIceGatherer() | iceGatherer.gather() failed: %s', error.toString());\n        }\n        this._iceGatherer = iceGatherer;\n    }\n    setIceTransport() {\n        const iceTransport = new RTCIceTransport(this._iceGatherer);\n        // NOTE: Not yet implemented by Edge.\n        iceTransport.addEventListener('statechange', () => {\n            switch (iceTransport.state) {\n                case 'checking':\n                    this.emit('@connectionstatechange', 'connecting');\n                    break;\n                case 'connected':\n                case 'completed':\n                    this.emit('@connectionstatechange', 'connected');\n                    break;\n                case 'failed':\n                    this.emit('@connectionstatechange', 'failed');\n                    break;\n                case 'disconnected':\n                    this.emit('@connectionstatechange', 'disconnected');\n                    break;\n                case 'closed':\n                    this.emit('@connectionstatechange', 'closed');\n                    break;\n            }\n        });\n        // NOTE: Not standard, but implemented by Edge.\n        iceTransport.addEventListener('icestatechange', () => {\n            switch (iceTransport.state) {\n                case 'checking':\n                    this.emit('@connectionstatechange', 'connecting');\n                    break;\n                case 'connected':\n                case 'completed':\n                    this.emit('@connectionstatechange', 'connected');\n                    break;\n                case 'failed':\n                    this.emit('@connectionstatechange', 'failed');\n                    break;\n                case 'disconnected':\n                    this.emit('@connectionstatechange', 'disconnected');\n                    break;\n                case 'closed':\n                    this.emit('@connectionstatechange', 'closed');\n                    break;\n            }\n        });\n        iceTransport.addEventListener('candidatepairchange', (event) => {\n            logger.debug('iceTransport \"candidatepairchange\" event [pair:%o]', event.pair);\n        });\n        this._iceTransport = iceTransport;\n    }\n    setDtlsTransport() {\n        const dtlsTransport = new RTCDtlsTransport(this._iceTransport);\n        // NOTE: Not yet implemented by Edge.\n        dtlsTransport.addEventListener('statechange', () => {\n            logger.debug('dtlsTransport \"statechange\" event [state:%s]', dtlsTransport.state);\n        });\n        // NOTE: Not standard, but implemented by Edge.\n        dtlsTransport.addEventListener('dtlsstatechange', () => {\n            logger.debug('dtlsTransport \"dtlsstatechange\" event [state:%s]', dtlsTransport.state);\n            if (dtlsTransport.state === 'closed') {\n                this.emit('@connectionstatechange', 'closed');\n            }\n        });\n        dtlsTransport.addEventListener('error', (event) => {\n            logger.error('dtlsTransport \"error\" event [event:%o]', event);\n        });\n        this._dtlsTransport = dtlsTransport;\n    }\n    async setupTransport({ localDtlsRole }) {\n        logger.debug('setupTransport()');\n        // Get our local DTLS parameters.\n        const dtlsParameters = this._dtlsTransport.getLocalParameters();\n        dtlsParameters.role = localDtlsRole;\n        // Need to tell the remote transport about our parameters.\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@connect', { dtlsParameters }, resolve, reject);\n        });\n        // Start the RTCIceTransport.\n        this._iceTransport.start(this._iceGatherer, this._remoteIceParameters, 'controlling');\n        // Add remote ICE candidates.\n        for (const candidate of this._remoteIceCandidates) {\n            this._iceTransport.addRemoteCandidate(candidate);\n        }\n        // Also signal a 'complete' candidate as per spec.\n        // NOTE: It should be {complete: true} but Edge prefers {}.\n        // NOTE: If we don't signal end of candidates, the Edge RTCIceTransport\n        // won't enter the 'completed' state.\n        this._iceTransport.addRemoteCandidate({});\n        // NOTE: Edge does not like SHA less than 256.\n        this._remoteDtlsParameters.fingerprints = this._remoteDtlsParameters.fingerprints\n            .filter((fingerprint) => {\n            return (fingerprint.algorithm === 'sha-256' ||\n                fingerprint.algorithm === 'sha-384' ||\n                fingerprint.algorithm === 'sha-512');\n        });\n        // Start the RTCDtlsTransport.\n        this._dtlsTransport.start(this._remoteDtlsParameters);\n        this._transportReady = true;\n    }\n}\nexports.Edge11 = Edge11;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,KAAmCC,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;EAC5F,IAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;EACtB,IAAIG,IAAI,GAAGP,MAAM,CAACQ,wBAAP,CAAgCL,CAAhC,EAAmCC,CAAnC,CAAX;;EACA,IAAI,CAACG,IAAD,KAAU,SAASA,IAAT,GAAgB,CAACJ,CAAC,CAACM,UAAnB,GAAgCF,IAAI,CAACG,QAAL,IAAiBH,IAAI,CAACI,YAAhE,CAAJ,EAAmF;IACjFJ,IAAI,GAAG;MAAEK,UAAU,EAAE,IAAd;MAAoBC,GAAG,EAAE,eAAW;QAAE,OAAOV,CAAC,CAACC,CAAD,CAAR;MAAc;IAApD,CAAP;EACD;;EACDJ,MAAM,CAACc,cAAP,CAAsBZ,CAAtB,EAAyBG,EAAzB,EAA6BE,IAA7B;AACH,CAPwD,GAOnD,UAASL,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;EACxB,IAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;EACtBF,CAAC,CAACG,EAAD,CAAD,GAAQF,CAAC,CAACC,CAAD,CAAT;AACH,CAVqB,CAAtB;;AAWA,IAAIW,kBAAkB,GAAI,QAAQ,KAAKA,kBAAd,KAAsCf,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYc,CAAZ,EAAe;EAC3FhB,MAAM,CAACc,cAAP,CAAsBZ,CAAtB,EAAyB,SAAzB,EAAoC;IAAEU,UAAU,EAAE,IAAd;IAAoBK,KAAK,EAAED;EAA3B,CAApC;AACH,CAF8D,GAE1D,UAASd,CAAT,EAAYc,CAAZ,EAAe;EAChBd,CAAC,CAAC,SAAD,CAAD,GAAec,CAAf;AACH,CAJwB,CAAzB;;AAKA,IAAIE,YAAY,GAAI,QAAQ,KAAKA,YAAd,IAA+B,UAAUC,GAAV,EAAe;EAC7D,IAAIA,GAAG,IAAIA,GAAG,CAACV,UAAf,EAA2B,OAAOU,GAAP;EAC3B,IAAIC,MAAM,GAAG,EAAb;EACA,IAAID,GAAG,IAAI,IAAX,EAAiB,KAAK,IAAIf,CAAT,IAAce,GAAd;IAAmB,IAAIf,CAAC,KAAK,SAAN,IAAmBJ,MAAM,CAACqB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,GAArC,EAA0Cf,CAA1C,CAAvB,EAAqEL,eAAe,CAACqB,MAAD,EAASD,GAAT,EAAcf,CAAd,CAAf;EAAxF;;EACjBW,kBAAkB,CAACK,MAAD,EAASD,GAAT,CAAlB;;EACA,OAAOC,MAAP;AACH,CAND;;AAOApB,MAAM,CAACc,cAAP,CAAsBU,OAAtB,EAA+B,YAA/B,EAA6C;EAAEP,KAAK,EAAE;AAAT,CAA7C;AACAO,OAAO,CAACC,MAAR,GAAiB,KAAK,CAAtB;;AACA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AACA,IAAME,KAAK,GAAGX,YAAY,CAACS,OAAO,CAAC,UAAD,CAAR,CAA1B;;AACA,IAAMG,IAAI,GAAGZ,YAAY,CAACS,OAAO,CAAC,SAAD,CAAR,CAAzB;;AACA,IAAMI,SAAS,GAAGb,YAAY,CAACS,OAAO,CAAC,kBAAD,CAAR,CAA9B;;AACA,IAAMK,kBAAkB,GAAGL,OAAO,CAAC,oBAAD,CAAlC;;AACA,IAAMM,MAAM,GAAG,IAAIP,QAAQ,CAACQ,MAAb,CAAoB,QAApB,CAAf;;IACMT,M;;;;;EAOF,kBAAc;IAAA;;IAAA;;IACV,0BADU,CAEV;;IACA,MAAKU,WAAL,GAAmB,IAAIC,GAAJ,EAAnB,CAHU,CAIV;;IACA,MAAKC,aAAL,GAAqB,IAAID,GAAJ,EAArB,CALU,CAMV;;IACA,MAAKE,gBAAL,GAAwB,CAAxB,CAPU,CAQV;;IACA,MAAKC,eAAL,GAAuB,KAAvB;IATU;EAUb;;;;SACD,eAAW;MACP,OAAO,QAAP;IACH;;;WACD,iBAAQ;MACJN,MAAM,CAACO,KAAP,CAAa,SAAb,EADI,CAEJ;MACA;;MACA,IAAI;QACA,KAAKC,YAAL,CAAkBC,KAAlB;MACH,CAFD,CAGA,OAAOC,KAAP,EAAc,CAAG,CAPb,CAQJ;;;MACA,IAAI;QACA,KAAKC,aAAL,CAAmBC,IAAnB;MACH,CAFD,CAGA,OAAOF,KAAP,EAAc,CAAG,CAZb,CAaJ;;;MACA,IAAI;QACA,KAAKG,cAAL,CAAoBD,IAApB;MACH,CAFD,CAGA,OAAOF,KAAP,EAAc,CAAG,CAjBb,CAkBJ;;;MAlBI,2CAmBoB,KAAKR,WAAL,CAAiBY,MAAjB,EAnBpB;MAAA;;MAAA;QAmBJ,oDAAmD;UAAA,IAAxCC,SAAwC;;UAC/C,IAAI;YACAA,SAAS,CAACH,IAAV;UACH,CAFD,CAGA,OAAOF,KAAP,EAAc,CAAG;QACpB,CAxBG,CAyBJ;;MAzBI;QAAA;MAAA;QAAA;MAAA;;MAAA,4CA0BsB,KAAKN,aAAL,CAAmBU,MAAnB,EA1BtB;MAAA;;MAAA;QA0BJ,uDAAuD;UAAA,IAA5CE,WAA4C;;UACnD,IAAI;YACAA,WAAW,CAACJ,IAAZ;UACH,CAFD,CAGA,OAAOF,KAAP,EAAc,CAAG;QACpB;MA/BG;QAAA;MAAA;QAAA;MAAA;;MAgCJ,KAAKO,IAAL,CAAU,QAAV;IACH;;;;iGACD;QAAA;UAAA;YAAA;cAAA;gBACIjB,MAAM,CAACO,KAAP,CAAa,4BAAb;gBADJ,iCAEWT,SAAS,CAACoB,eAAV,EAFX;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;kGAIA;QAAA;UAAA;YAAA;cAAA;gBACIlB,MAAM,CAACO,KAAP,CAAa,6BAAb;gBADJ,kCAEW;kBACHY,UAAU,EAAE;oBAAEC,EAAE,EAAE,CAAN;oBAASC,GAAG,EAAE;kBAAd;gBADT,CAFX;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAMA,mBAI2B;MAAA,IAJrBC,SAIqB,QAJrBA,SAIqB;MAAA,IAH3BC,aAG2B,QAH3BA,aAG2B;MAAA,IAHZC,aAGY,QAHZA,aAGY;MAAA,IAHGC,cAGH,QAHGA,cAGH;MAAA,IAHmBC,cAGnB,QAHmBA,cAGnB;MAAA,IAF3BC,UAE2B,QAF3BA,UAE2B;MAAA,IAFfC,kBAEe,QAFfA,kBAEe;MAAA,IAFKC,kBAEL,QAFKA,kBAEL;MAAA,IAD3BC,sBAC2B,QAD3BA,sBAC2B;MAAA,IAA3BC,uBAA2B,QAA3BA,uBAA2B;MACvB/B,MAAM,CAACO,KAAP,CAAa,OAAb;MACA,KAAKyB,2BAAL,GACI;QACIC,KAAK,EAAEpC,IAAI,CAACqC,uBAAL,CAA6B,OAA7B,EAAsCH,uBAAtC,CADX;QAEII,KAAK,EAAEtC,IAAI,CAACqC,uBAAL,CAA6B,OAA7B,EAAsCH,uBAAtC;MAFX,CADJ;MAKA,KAAKK,oBAAL,GAA4Bb,aAA5B;MACA,KAAKc,oBAAL,GAA4Bb,aAA5B;MACA,KAAKc,qBAAL,GAA6Bb,cAA7B;MACA,KAAKc,MAAL,mBAAuB3C,KAAK,CAAC4C,oBAAN,EAAvB;MACA,KAAKC,cAAL,CAAoB;QAAEd,UAAU,EAAVA,UAAF;QAAcC,kBAAkB,EAAlBA;MAAd,CAApB;MACA,KAAKc,eAAL;MACA,KAAKC,gBAAL;IACH,C,CACD;;;;;yFACA,kBAAuBhB,UAAvB;QAAA;UAAA;YAAA;cAAA;gBAAA,MAEU,IAAIhC,QAAQ,CAACiD,gBAAb,CAA8B,eAA9B,CAFV;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;mFAIA,kBAAiBrB,aAAjB;QAAA;;QAAA;UAAA;YAAA;cAAA;gBACIvB,MAAM,CAACO,KAAP,CAAa,cAAb;gBACA,KAAK6B,oBAAL,GAA4Bb,aAA5B;;gBAFJ,IAGS,KAAKjB,eAHd;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBAMIN,MAAM,CAACO,KAAP,CAAa,6CAAb;;gBACA,KAAKI,aAAL,CAAmBkC,KAAnB,CAAyB,KAAKrC,YAA9B,EAA4Ce,aAA5C,EAA2D,aAA3D;;gBAPJ,wCAQ4B,KAAKc,oBARjC;;gBAAA;kBAQI,uDAAmD;oBAAxCS,SAAwC;;oBAC/C,KAAKnC,aAAL,CAAmBoC,kBAAnB,CAAsCD,SAAtC;kBACH;gBAVL;kBAAA;gBAAA;kBAAA;gBAAA;;gBAWI,KAAKnC,aAAL,CAAmBoC,kBAAnB,CAAsC,EAAtC;;cAXJ;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;0FAaA;QAAA;UAAA;YAAA;cAAA;gBAAA,kCACW,KAAKpC,aAAL,CAAmBqC,QAAnB,EADX;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;6EAGA,mBACA;MADA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAEEC,KAFF,SAEEA,KAFF,EAESC,SAFT,SAESA,SAFT,EAEoBC,YAFpB,SAEoBA,YAFpB,EAEkCC,KAFlC,SAEkCA,KAFlC;gBAGIpD,MAAM,CAACO,KAAP,CAAa,+BAAb,EAA8C0C,KAAK,CAACI,IAApD,EAA0DJ,KAAK,CAACK,EAAhE;;gBAHJ,IAIS,KAAKhD,eAJd;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAKc,KAAKiD,cAAL,CAAoB;kBAAEC,aAAa,EAAE;gBAAjB,CAApB,CALd;;cAAA;gBAOIxD,MAAM,CAACO,KAAP,CAAa,qCAAb;gBACMQ,SARV,GAQsB,IAAI0C,YAAJ,CAAiBR,KAAjB,EAAwB,KAAKpC,cAA7B,CARtB;gBASU6C,aATV,GAS0B9D,KAAK,CAAC+D,KAAN,CAAY,KAAK3B,2BAAL,CAAiCiB,KAAK,CAACI,IAAvC,CAAZ,EAA0D,EAA1D,CAT1B;gBAUIK,aAAa,CAACE,MAAd,GAAuB/D,IAAI,CAACgE,YAAL,CAAkBH,aAAa,CAACE,MAAhC,EAAwCR,KAAxC,CAAvB;gBACMU,MAXV,GAWmBJ,aAAa,CAACE,MAAd,CACVG,IADU,CACL,UAACC,MAAD;kBAAA,OAAY,YAAYC,IAAZ,CAAiBD,MAAM,CAACE,QAAxB,CAAZ;gBAAA,CADK,CAXnB;;gBAaI,IAAI,CAAChB,SAAL,EAAgB;kBACZA,SAAS,GAAG,CAAC,EAAD,CAAZ;gBACH;;gBAfL,wCAgB2BA,SAhB3B;;gBAAA;kBAgBI,uDAAkC;oBAAvBiB,QAAuB;oBAC9BA,QAAQ,CAACC,IAAT,GAAgBxE,KAAK,CAAC4C,oBAAN,EAAhB;;oBACA,IAAIsB,MAAJ,EAAY;sBACRK,QAAQ,CAACE,GAAT,GAAe;wBAAED,IAAI,EAAExE,KAAK,CAAC4C,oBAAN;sBAAR,CAAf;oBACH;kBACJ;gBArBL;kBAAA;gBAAA;kBAAA;gBAAA;;gBAsBIkB,aAAa,CAACR,SAAd,GAA0BA,SAA1B,CAtBJ,CAuBI;;gBACAQ,aAAa,CAACY,IAAd,GACI;kBACIC,KAAK,EAAE,KAAKhC,MADhB;kBAEIiC,WAAW,EAAE,IAFjB;kBAGIC,GAAG,EAAE;gBAHT,CADJ,CAxBJ,CA8BI;gBACA;;gBACMC,iBAhCV,GAgC8B5E,SAAS,CAAC6E,mBAAV,CAA8BjB,aAA9B,CAhC9B;gBAiCI1D,MAAM,CAACO,KAAP,CAAa,+CAAb,EAA8DmE,iBAA9D;gBAjCJ;gBAAA,OAkCU3D,SAAS,CAAC6D,IAAV,CAAeF,iBAAf,CAlCV;;cAAA;gBAmCUG,OAnCV,GAmCoBC,MAAM,CAAC,KAAKzE,gBAAN,CAnC1B;gBAoCI,KAAKA,gBAAL,GApCJ,CAqCI;;gBACA,KAAKH,WAAL,CAAiB6E,GAAjB,CAAqBF,OAArB,EAA8B9D,SAA9B;;gBAtCJ,kCAuCW;kBAAE8D,OAAO,EAAPA,OAAF;kBAAWnB,aAAa,EAAbA,aAAX;kBAA0B3C,SAAS,EAATA;gBAA1B,CAvCX;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;oFAyCA,kBAAkB8D,OAAlB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACI7E,MAAM,CAACO,KAAP,CAAa,4BAAb,EAA2CsE,OAA3C;gBACM9D,SAFV,GAEsB,KAAKb,WAAL,CAAiBtB,GAAjB,CAAqBiG,OAArB,CAFtB;;gBAAA,IAGS9D,SAHT;kBAAA;kBAAA;gBAAA;;gBAAA,MAIc,IAAIiE,KAAJ,CAAU,wBAAV,CAJd;;cAAA;gBAMI,KAAK9E,WAAL,CAAiB+E,MAAjB,CAAwBJ,OAAxB;;gBANJ;gBAQQ7E,MAAM,CAACO,KAAP,CAAa,0CAAb;gBACAQ,SAAS,CAACH,IAAV;gBATR;gBAAA;;cAAA;gBAAA;gBAAA;gBAYQZ,MAAM,CAACkF,IAAP,CAAY,4CAAZ;gBAZR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;QAgBA;;;;;qFACA,kBAAmBL,OAAnB;QAAA;UAAA;YAAA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;QAGA;;;;;sFACA,kBAAoBA,OAApB;QAAA;UAAA;YAAA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;qFAGA,mBAAmBA,OAAnB,EAA4B5B,KAA5B;QAAA;QAAA;UAAA;YAAA;cAAA;gBACI,IAAIA,KAAJ,EAAW;kBACPjD,MAAM,CAACO,KAAP,CAAa,0CAAb,EAAyDsE,OAAzD,EAAkE5B,KAAK,CAACK,EAAxE;gBACH,CAFD,MAGK;kBACDtD,MAAM,CAACO,KAAP,CAAa,uCAAb,EAAsDsE,OAAtD;gBACH;;gBACK9D,SAPV,GAOsB,KAAKb,WAAL,CAAiBtB,GAAjB,CAAqBiG,OAArB,CAPtB;;gBAAA,IAQS9D,SART;kBAAA;kBAAA;gBAAA;;gBAAA,MASc,IAAIiE,KAAJ,CAAU,wBAAV,CATd;;cAAA;gBAWIjE,SAAS,CAACoE,QAAV,CAAmBlC,KAAnB;;cAXJ;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;2FAaA,mBAAyB4B,OAAzB,EAAkCO,YAAlC;QAAA;QAAA;UAAA;YAAA;cAAA;gBACIpF,MAAM,CAACO,KAAP,CAAa,oDAAb,EAAmEsE,OAAnE,EAA4EO,YAA5E;gBACMrE,SAFV,GAEsB,KAAKb,WAAL,CAAiBtB,GAAjB,CAAqBiG,OAArB,CAFtB;;gBAAA,IAGS9D,SAHT;kBAAA;kBAAA;gBAAA;;gBAAA,MAIc,IAAIiE,KAAJ,CAAU,wBAAV,CAJd;;cAAA;gBAMUK,UANV,GAMuBtE,SAAS,CAACuE,aAAV,EANvB;gBAOID,UAAU,CAACnC,SAAX,CACKqC,OADL,CACa,UAACpB,QAAD,EAAWqB,GAAX,EAAmB;kBAC5B,IAAIA,GAAG,IAAIJ,YAAX,EAAyB;oBACrBjB,QAAQ,CAACsB,MAAT,GAAkB,IAAlB;kBACH,CAFD,MAGK;oBACDtB,QAAQ,CAACsB,MAAT,GAAkB,KAAlB;kBACH;gBACJ,CARD;gBAPJ;gBAAA,OAgBU1E,SAAS,CAAC2E,aAAV,CAAwBL,UAAxB,CAhBV;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;iGAkBA,mBAA+BR,OAA/B,EAAwCc,MAAxC;QAAA;QAAA;UAAA;YAAA;cAAA;gBACI3F,MAAM,CAACO,KAAP,CAAa,oDAAb,EAAmEsE,OAAnE,EAA4Ec,MAA5E;gBACM5E,SAFV,GAEsB,KAAKb,WAAL,CAAiBtB,GAAjB,CAAqBiG,OAArB,CAFtB;;gBAAA,IAGS9D,SAHT;kBAAA;kBAAA;gBAAA;;gBAAA,MAIc,IAAIiE,KAAJ,CAAU,wBAAV,CAJd;;cAAA;gBAMUK,UANV,GAMuBtE,SAAS,CAACuE,aAAV,EANvB;gBAOID,UAAU,CAACnC,SAAX,CAAqBqC,OAArB,CAA6B,UAACpB,QAAD,EAAWqB,GAAX,EAAmB;kBAC5CH,UAAU,CAACnC,SAAX,CAAqBsC,GAArB,oCAAiCrB,QAAjC,GAA8CwB,MAA9C;gBACH,CAFD;gBAPJ;gBAAA,OAUU5E,SAAS,CAAC2E,aAAV,CAAwBL,UAAxB,CAVV;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;uFAYA,mBAAqBR,OAArB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACU9D,SADV,GACsB,KAAKb,WAAL,CAAiBtB,GAAjB,CAAqBiG,OAArB,CADtB;;gBAAA,IAES9D,SAFT;kBAAA;kBAAA;gBAAA;;gBAAA,MAGc,IAAIiE,KAAJ,CAAU,wBAAV,CAHd;;cAAA;gBAAA,mCAKWjE,SAAS,CAACiC,QAAV,EALX;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;wFAOA,oBACA;MACA4C,OAFA;QAAA;UAAA;YAAA;cAAA;gBAAA,MAGU,IAAIjG,QAAQ,CAACiD,gBAAb,CAA8B,iBAA9B,CAHV;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;gFAKA,mBAAciD,WAAd;QAAA;;QAAA;UAAA;YAAA;cAAA;gBACUC,OADV,GACoB,EADpB;gBAAA,wCAE0BD,WAF1B;;gBAAA;kBAEI,uDAAmC;oBAAxBD,OAAwB;oBACvBG,OADuB,GACLH,OADK,CACvBG,OADuB,EACd1C,IADc,GACLuC,OADK,CACdvC,IADc;oBAE/BrD,MAAM,CAACO,KAAP,CAAa,iCAAb,EAAgDwF,OAAhD,EAAyD1C,IAAzD;kBACH;gBALL;kBAAA;gBAAA;kBAAA;gBAAA;;gBAAA,IAMS,KAAK/C,eANd;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAOc,KAAKiD,cAAL,CAAoB;kBAAEC,aAAa,EAAE;gBAAjB,CAApB,CAPd;;cAAA;gBAAA,wCAS0BqC,WAT1B;gBAAA;;gBAAA;;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;;gBASeD,QATf;gBAUgBG,QAVhB,GAUiDH,QAVjD,CAUgBG,OAVhB,EAUyB1C,KAVzB,GAUiDuC,QAVjD,CAUyBvC,IAVzB,EAU+BK,aAV/B,GAUiDkC,QAVjD,CAU+BlC,aAV/B;gBAWQ1D,MAAM,CAACO,KAAP,CAAa,0CAAb;gBACMS,WAZd,GAY4B,IAAIgF,cAAJ,CAAmB,KAAKnF,cAAxB,EAAwCwC,KAAxC,CAZ5B;gBAaQrC,WAAW,CAACiF,gBAAZ,CAA6B,OAA7B,EAAsC,UAACC,KAAD,EAAW;kBAC7ClG,MAAM,CAACU,KAAP,CAAa,sCAAb,EAAqDwF,KAArD;gBACH,CAFD,EAbR,CAgBQ;gBACA;;gBACMxB,iBAlBd,GAkBkC5E,SAAS,CAAC6E,mBAAV,CAA8BjB,aAA9B,CAlBlC;gBAmBQ1D,MAAM,CAACO,KAAP,CAAa,uDAAb,EAAsEmE,iBAAtE;gBAnBR;gBAAA,OAoBc1D,WAAW,CAACmF,OAAZ,CAAoBzB,iBAApB,CApBd;;cAAA;gBAqBcG,OArBd,GAqBwBkB,QArBxB,EAsBQ;;gBACA,KAAK3F,aAAL,CAAmB2E,GAAnB,CAAuBF,OAAvB,EAAgC7D,WAAhC;;gBACA8E,OAAO,CAACM,IAAR,CAAa;kBACTvB,OAAO,EAAPA,OADS;kBAET5B,KAAK,EAAEjC,WAAW,CAACiC,KAFV;kBAGTjC,WAAW,EAAXA;gBAHS,CAAb;;cAxBR;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;gBAAA;;cAAA;gBAAA;;gBAAA;;gBAAA;;cAAA;gBAAA,mCA8BW8E,OA9BX;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;sFAgCA,mBAAoBO,QAApB;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA,wCAC0BA,QAD1B;gBAAA;;gBAAA;;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;;gBACexB,OADf;gBAEQ7E,MAAM,CAACO,KAAP,CAAa,8BAAb,EAA6CsE,OAA7C;gBACM7D,WAHd,GAG4B,KAAKZ,aAAL,CAAmBxB,GAAnB,CAAuBiG,OAAvB,CAH5B;;gBAAA,IAIa7D,WAJb;kBAAA;kBAAA;gBAAA;;gBAAA,MAKkB,IAAIgE,KAAJ,CAAU,0BAAV,CALlB;;cAAA;gBAOQ,KAAK5E,aAAL,CAAmB6E,MAAnB,CAA0BJ,OAA1B;;gBACA,IAAI;kBACA7E,MAAM,CAACO,KAAP,CAAa,8CAAb;kBACAS,WAAW,CAACJ,IAAZ;gBACH,CAHD,CAIA,OAAOF,KAAP,EAAc;kBACVV,MAAM,CAACkF,IAAP,CAAY,gDAAZ,EAA8DxE,KAA9D;gBACH;;cAdT;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;gBAAA;;cAAA;gBAAA;;gBAAA;;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;uFAiBA,oBACA;MACA2F,QAFA;QAAA;UAAA;YAAA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;wFAKA,oBACA;MACAA,QAFA;QAAA;UAAA;YAAA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;yFAKA,mBAAuBxB,OAAvB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACU7D,WADV,GACwB,KAAKZ,aAAL,CAAmBxB,GAAnB,CAAuBiG,OAAvB,CADxB;;gBAAA,IAES7D,WAFT;kBAAA;kBAAA;gBAAA;;gBAAA,MAGc,IAAIgE,KAAJ,CAAU,0BAAV,CAHd;;cAAA;gBAAA,mCAKWhE,WAAW,CAACgC,QAAZ,EALX;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;2FAOA,oBACA;MACA4C,OAFA;QAAA;UAAA;YAAA;cAAA;gBAAA,MAGU,IAAIjG,QAAQ,CAACiD,gBAAb,CAA8B,iBAA9B,CAHV;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAKA,+BAAmD;MAAA,IAAlCjB,UAAkC,SAAlCA,UAAkC;MAAA,IAAtBC,kBAAsB,SAAtBA,kBAAsB;MAC/C;MACA,IAAM0E,WAAW,GAAG,IAAIC,cAAJ,CAAmB;QACnC5E,UAAU,EAAEA,UAAU,IAAI,EADS;QAEnC6E,YAAY,EAAE5E,kBAAkB,IAAI;MAFD,CAAnB,CAApB;MAIA0E,WAAW,CAACL,gBAAZ,CAA6B,OAA7B,EAAsC,UAACC,KAAD,EAAW;QAC7ClG,MAAM,CAACU,KAAP,CAAa,sCAAb,EAAqDwF,KAArD;MACH,CAFD,EAN+C,CAS/C;;MACA,IAAI;QACAI,WAAW,CAACG,MAAZ;MACH,CAFD,CAGA,OAAO/F,KAAP,EAAc;QACVV,MAAM,CAACO,KAAP,CAAa,oDAAb,EAAmEG,KAAK,CAACgG,QAAN,EAAnE;MACH;;MACD,KAAKlG,YAAL,GAAoB8F,WAApB;IACH;;;WACD,2BAAkB;MAAA;;MACd,IAAMK,YAAY,GAAG,IAAIC,eAAJ,CAAoB,KAAKpG,YAAzB,CAArB,CADc,CAEd;;MACAmG,YAAY,CAACV,gBAAb,CAA8B,aAA9B,EAA6C,YAAM;QAC/C,QAAQU,YAAY,CAACE,KAArB;UACI,KAAK,UAAL;YACI,MAAI,CAAC5F,IAAL,CAAU,wBAAV,EAAoC,YAApC;;YACA;;UACJ,KAAK,WAAL;UACA,KAAK,WAAL;YACI,MAAI,CAACA,IAAL,CAAU,wBAAV,EAAoC,WAApC;;YACA;;UACJ,KAAK,QAAL;YACI,MAAI,CAACA,IAAL,CAAU,wBAAV,EAAoC,QAApC;;YACA;;UACJ,KAAK,cAAL;YACI,MAAI,CAACA,IAAL,CAAU,wBAAV,EAAoC,cAApC;;YACA;;UACJ,KAAK,QAAL;YACI,MAAI,CAACA,IAAL,CAAU,wBAAV,EAAoC,QAApC;;YACA;QAhBR;MAkBH,CAnBD,EAHc,CAuBd;;MACA0F,YAAY,CAACV,gBAAb,CAA8B,gBAA9B,EAAgD,YAAM;QAClD,QAAQU,YAAY,CAACE,KAArB;UACI,KAAK,UAAL;YACI,MAAI,CAAC5F,IAAL,CAAU,wBAAV,EAAoC,YAApC;;YACA;;UACJ,KAAK,WAAL;UACA,KAAK,WAAL;YACI,MAAI,CAACA,IAAL,CAAU,wBAAV,EAAoC,WAApC;;YACA;;UACJ,KAAK,QAAL;YACI,MAAI,CAACA,IAAL,CAAU,wBAAV,EAAoC,QAApC;;YACA;;UACJ,KAAK,cAAL;YACI,MAAI,CAACA,IAAL,CAAU,wBAAV,EAAoC,cAApC;;YACA;;UACJ,KAAK,QAAL;YACI,MAAI,CAACA,IAAL,CAAU,wBAAV,EAAoC,QAApC;;YACA;QAhBR;MAkBH,CAnBD;MAoBA0F,YAAY,CAACV,gBAAb,CAA8B,qBAA9B,EAAqD,UAACC,KAAD,EAAW;QAC5DlG,MAAM,CAACO,KAAP,CAAa,oDAAb,EAAmE2F,KAAK,CAACY,IAAzE;MACH,CAFD;MAGA,KAAKnG,aAAL,GAAqBgG,YAArB;IACH;;;WACD,4BAAmB;MAAA;;MACf,IAAMI,aAAa,GAAG,IAAIC,gBAAJ,CAAqB,KAAKrG,aAA1B,CAAtB,CADe,CAEf;;MACAoG,aAAa,CAACd,gBAAd,CAA+B,aAA/B,EAA8C,YAAM;QAChDjG,MAAM,CAACO,KAAP,CAAa,8CAAb,EAA6DwG,aAAa,CAACF,KAA3E;MACH,CAFD,EAHe,CAMf;;MACAE,aAAa,CAACd,gBAAd,CAA+B,iBAA/B,EAAkD,YAAM;QACpDjG,MAAM,CAACO,KAAP,CAAa,kDAAb,EAAiEwG,aAAa,CAACF,KAA/E;;QACA,IAAIE,aAAa,CAACF,KAAd,KAAwB,QAA5B,EAAsC;UAClC,MAAI,CAAC5F,IAAL,CAAU,wBAAV,EAAoC,QAApC;QACH;MACJ,CALD;MAMA8F,aAAa,CAACd,gBAAd,CAA+B,OAA/B,EAAwC,UAACC,KAAD,EAAW;QAC/ClG,MAAM,CAACU,KAAP,CAAa,wCAAb,EAAuDwF,KAAvD;MACH,CAFD;MAGA,KAAKrF,cAAL,GAAsBkG,aAAtB;IACH;;;;uFACD;QAAA;;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAuBvD,aAAvB,SAAuBA,aAAvB;gBACIxD,MAAM,CAACO,KAAP,CAAa,kBAAb,EADJ,CAEI;;gBACMkB,cAHV,GAG2B,KAAKZ,cAAL,CAAoBoG,kBAApB,EAH3B;gBAIIxF,cAAc,CAACyF,IAAf,GAAsB1D,aAAtB,CAJJ,CAKI;;gBALJ;gBAAA,OAMU,IAAI2D,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;kBACnC,MAAI,CAACC,QAAL,CAAc,UAAd,EAA0B;oBAAE7F,cAAc,EAAdA;kBAAF,CAA1B,EAA8C2F,OAA9C,EAAuDC,MAAvD;gBACH,CAFK,CANV;;cAAA;gBASI;gBACA,KAAK1G,aAAL,CAAmBkC,KAAnB,CAAyB,KAAKrC,YAA9B,EAA4C,KAAK4B,oBAAjD,EAAuE,aAAvE,EAVJ,CAWI;;;gBAXJ,wCAY4B,KAAKC,oBAZjC;;gBAAA;kBAYI,uDAAmD;oBAAxCS,SAAwC;;oBAC/C,KAAKnC,aAAL,CAAmBoC,kBAAnB,CAAsCD,SAAtC;kBACH,CAdL,CAeI;kBACA;kBACA;kBACA;;gBAlBJ;kBAAA;gBAAA;kBAAA;gBAAA;;gBAmBI,KAAKnC,aAAL,CAAmBoC,kBAAnB,CAAsC,EAAtC,EAnBJ,CAoBI;;;gBACA,KAAKT,qBAAL,CAA2BiF,YAA3B,GAA0C,KAAKjF,qBAAL,CAA2BiF,YAA3B,CACrCC,MADqC,CAC9B,UAACC,WAAD,EAAiB;kBACzB,OAAQA,WAAW,CAACC,SAAZ,KAA0B,SAA1B,IACJD,WAAW,CAACC,SAAZ,KAA0B,SADtB,IAEJD,WAAW,CAACC,SAAZ,KAA0B,SAF9B;gBAGH,CALyC,CAA1C,CArBJ,CA2BI;;gBACA,KAAK7G,cAAL,CAAoBgC,KAApB,CAA0B,KAAKP,qBAA/B;;gBACA,KAAKhC,eAAL,GAAuB,IAAvB;;cA7BJ;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;IA5XA;AACJ;AACA;IACI,yBAAuB;MACnB,OAAO;QAAA,OAAM,IAAId,MAAJ,EAAN;MAAA,CAAP;IACH;;;;EANgBO,kBAAkB,CAAC4H,gB;;AA6ZxCpI,OAAO,CAACC,MAAR,GAAiBA,MAAjB"},"metadata":{},"sourceType":"script"}