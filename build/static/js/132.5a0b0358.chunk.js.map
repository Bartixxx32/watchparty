{"version":3,"file":"static/js/132.5a0b0358.chunk.js","mappings":"wPAYMA,EAAgBC,EAAAA,GAAU,qBAAiBC,OAAOC,SAASC,QA8CjE,UA3Cc,WAAO,IAAD,EAClB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAS,uBACN,2GACwBC,MAAMT,GAD9B,cACOU,EADP,gBAEoBA,EAASC,OAF7B,QAEOA,EAFP,QAGMC,UACLL,EAAQI,GAJT,2CAMD,CAACJ,IAGH,IAAMM,EAAOC,OAAOD,KAAP,UAAYP,EAAKS,OAAO,GAAG,UAA3B,QAAiC,CAAC,GAC/C,OACE,8BACGF,EACEG,QAAO,SAACC,GAAD,MAAa,SAANA,CAAP,IACPC,KAAI,SAACC,GACJ,OACE,UAAC,IAAD,CACEC,MAAO,KACPC,OAAQ,IACRf,KAAMA,EACNgB,OAAQ,CACNC,IAAK,EACLC,KAAM,GACNC,OAAQ,GAPZ,WAUE,SAAC,IAAD,KACA,SAAC,IAAD,CAAOC,QAAQ,UACf,SAAC,IAAD,KACA,SAAC,IAAD,KACA,SAAC,IAAD,KACA,SAAC,IAAD,CAAMC,KAAK,WAAWD,QAASP,EAAKS,OAAO,cAGhD,KAGR,C","sources":["components/Debug/Debug.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport { serverPath } from '../../utils';\n\nconst timeSeriesUrl = serverPath + `/timeSeries${window.location.search}`;\n// const timeSeriesUrl = 'https://www.watchparty.me' + `/timeSeries${window.location.search}`;\n\nconst Debug = () => {\n  const [data, setData] = useState([]);\n  // eslint-disable-next-line\n  useEffect(\n    (async () => {\n      const response = await fetch(timeSeriesUrl);\n      const json = await response.json();\n      json.reverse();\n      setData(json);\n    }) as any,\n    [setData]\n  );\n  // Get the keys from the last/mostrecent element\n  const keys = Object.keys(data.slice(-1)[0] ?? {});\n  return (\n    <>\n      {keys\n        .filter((k) => k !== 'time')\n        .map((key) => {\n          return (\n            <LineChart\n              width={1400}\n              height={400}\n              data={data}\n              margin={{\n                top: 5,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid />\n              <XAxis dataKey=\"time\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line type=\"monotone\" dataKey={key} stroke=\"#8884d8\" />\n            </LineChart>\n          );\n        })}\n    </>\n  );\n};\n\nexport default Debug;\n"],"names":["timeSeriesUrl","serverPath","window","location","search","useState","data","setData","useEffect","fetch","response","json","reverse","keys","Object","slice","filter","k","map","key","width","height","margin","top","left","bottom","dataKey","type","stroke"],"sourceRoot":""}