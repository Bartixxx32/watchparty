{"version":3,"file":"static/js/947.e3ec2ed8.chunk.js","mappings":"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","sources":["../node_modules/awaitqueue/lib/Logger.js","../node_modules/awaitqueue/lib/index.js","../node_modules/awaitqueue/node_modules/debug/src/browser.js","../node_modules/awaitqueue/node_modules/debug/src/common.js","../node_modules/awaitqueue/node_modules/ms/index.js","../node_modules/bowser/es5.js","../node_modules/events/events.js","../node_modules/h264-profile-level-id/index.js","../node_modules/h264-profile-level-id/node_modules/debug/src/browser.js","../node_modules/h264-profile-level-id/node_modules/debug/src/common.js","../node_modules/h264-profile-level-id/node_modules/ms/index.js","../node_modules/mediasoup-client/lib/Consumer.js","../node_modules/mediasoup-client/lib/DataConsumer.js","../node_modules/mediasoup-client/lib/DataProducer.js","../node_modules/mediasoup-client/lib/Device.js","../node_modules/mediasoup-client/lib/EnhancedEventEmitter.js","../node_modules/mediasoup-client/lib/Logger.js","../node_modules/mediasoup-client/lib/Producer.js","../node_modules/mediasoup-client/lib/RtpParameters.js","../node_modules/mediasoup-client/lib/SctpParameters.js","../node_modules/mediasoup-client/lib/Transport.js","../node_modules/mediasoup-client/lib/errors.js","../node_modules/mediasoup-client/lib/handlers/Chrome111.js","../node_modules/mediasoup-client/lib/handlers/Chrome55.js","../node_modules/mediasoup-client/lib/handlers/Chrome67.js","../node_modules/mediasoup-client/lib/handlers/Chrome70.js","../node_modules/mediasoup-client/lib/handlers/Chrome74.js","../node_modules/mediasoup-client/lib/handlers/Edge11.js","../node_modules/mediasoup-client/lib/handlers/Firefox60.js","../node_modules/mediasoup-client/lib/handlers/HandlerInterface.js","../node_modules/mediasoup-client/lib/handlers/ReactNative.js","../node_modules/mediasoup-client/lib/handlers/ReactNativeUnifiedPlan.js","../node_modules/mediasoup-client/lib/handlers/Safari11.js","../node_modules/mediasoup-client/lib/handlers/Safari12.js","../node_modules/mediasoup-client/lib/handlers/ortc/edgeUtils.js","../node_modules/mediasoup-client/lib/handlers/ortc/utils.js","../node_modules/mediasoup-client/lib/handlers/sdp/MediaSection.js","../node_modules/mediasoup-client/lib/handlers/sdp/RemoteSdp.js","../node_modules/mediasoup-client/lib/handlers/sdp/commonUtils.js","../node_modules/mediasoup-client/lib/handlers/sdp/planBUtils.js","../node_modules/mediasoup-client/lib/handlers/sdp/unifiedPlanUtils.js","../node_modules/mediasoup-client/lib/index.js","../node_modules/mediasoup-client/lib/ortc.js","../node_modules/mediasoup-client/lib/scalabilityModes.js","../node_modules/mediasoup-client/lib/types.js","../node_modules/mediasoup-client/lib/utils.js","../node_modules/mediasoup-client/node_modules/debug/src/browser.js","../node_modules/mediasoup-client/node_modules/debug/src/common.js","../node_modules/mediasoup-client/node_modules/ms/index.js","../node_modules/queue-microtask/index.js","../node_modules/sdp-transform/lib/grammar.js","../node_modules/sdp-transform/lib/index.js","../node_modules/sdp-transform/lib/parser.js","../node_modules/sdp-transform/lib/writer.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/construct.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/createSuper.js","../node_modules/@babel/runtime/helpers/get.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/isNativeFunction.js","../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/superPropBase.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/wrapNativeSuper.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst LIB_NAME = 'awaitqueue';\nclass Logger {\n    constructor(prefix) {\n        if (prefix) {\n            this._debug = (0, debug_1.default)(`${LIB_NAME}:${prefix}`);\n            this._warn = (0, debug_1.default)(`${LIB_NAME}:WARN:${prefix}`);\n            this._error = (0, debug_1.default)(`${LIB_NAME}:ERROR:${prefix}`);\n        }\n        else {\n            this._debug = (0, debug_1.default)(LIB_NAME);\n            this._warn = (0, debug_1.default)(`${LIB_NAME}:WARN`);\n            this._error = (0, debug_1.default)(`${LIB_NAME}:ERROR`);\n        }\n        /* eslint-disable no-console */\n        this._debug.log = console.info.bind(console);\n        this._warn.log = console.warn.bind(console);\n        this._error.log = console.error.bind(console);\n        /* eslint-enable no-console */\n    }\n    get debug() {\n        return this._debug;\n    }\n    get warn() {\n        return this._warn;\n    }\n    get error() {\n        return this._error;\n    }\n}\nexports.Logger = Logger;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AwaitQueue = exports.AwaitQueueRemovedTaskError = exports.AwaitQueueStoppedError = void 0;\nconst Logger_1 = require(\"./Logger\");\nconst logger = new Logger_1.Logger();\n/**\n * Custom Error derived class used to reject pending tasks once stop() method\n * has been called.\n */\nclass AwaitQueueStoppedError extends Error {\n    constructor(message) {\n        super(message !== null && message !== void 0 ? message : 'AwaitQueue stopped');\n        this.name = 'AwaitQueueStoppedError';\n        // @ts-ignore\n        if (typeof Error.captureStackTrace === 'function') {\n            // @ts-ignore\n            Error.captureStackTrace(this, AwaitQueueStoppedError);\n        }\n    }\n}\nexports.AwaitQueueStoppedError = AwaitQueueStoppedError;\n/**\n * Custom Error derived class used to reject pending tasks once removeTask()\n * method has been called.\n */\nclass AwaitQueueRemovedTaskError extends Error {\n    constructor(message) {\n        super(message !== null && message !== void 0 ? message : 'AwaitQueue task removed');\n        this.name = 'AwaitQueueRemovedTaskError';\n        // @ts-ignore\n        if (typeof Error.captureStackTrace === 'function') {\n            // @ts-ignore\n            Error.captureStackTrace(this, AwaitQueueRemovedTaskError);\n        }\n    }\n}\nexports.AwaitQueueRemovedTaskError = AwaitQueueRemovedTaskError;\nclass AwaitQueue {\n    constructor() {\n        // Queue of pending tasks (map of PendingTasks indexed by id).\n        this.pendingTasks = new Map();\n        // Incrementing PendingTask id.\n        this.nextTaskId = 0;\n        // Whether stop() method is stopping all pending tasks.\n        this.stopping = false;\n    }\n    get size() {\n        return this.pendingTasks.size;\n    }\n    async push(task, name) {\n        name = name !== null && name !== void 0 ? name : task.name;\n        logger.debug(`push() [name:${name}]`);\n        if (typeof task !== 'function') {\n            throw new TypeError('given task is not a function');\n        }\n        if (name) {\n            try {\n                Object.defineProperty(task, 'name', { value: name });\n            }\n            catch (error) { }\n        }\n        return new Promise((resolve, reject) => {\n            const pendingTask = {\n                id: this.nextTaskId++,\n                task: task,\n                name: name,\n                enqueuedAt: Date.now(),\n                executedAt: undefined,\n                completed: false,\n                resolve: (result) => {\n                    // pendingTask.resolve() can only be called in execute() method. Since\n                    // resolve() was called it means that the task successfully completed.\n                    // However the task may have been stopped before it completed (via\n                    // stop() or remove()) so its completed flag was already set. If this\n                    // is the case, abort here since next task (if any) is already being\n                    // executed.\n                    if (pendingTask.completed) {\n                        return;\n                    }\n                    pendingTask.completed = true;\n                    // Remove the task from the queue.\n                    this.pendingTasks.delete(pendingTask.id);\n                    logger.debug(`resolving task [name:${pendingTask.name}]`);\n                    // Resolve the task with the obtained result.\n                    resolve(result);\n                    // Execute the next pending task (if any).\n                    const [nextPendingTask] = this.pendingTasks.values();\n                    // NOTE: During the resolve() callback the user app may have interacted\n                    // with the queue. For instance, the app may have pushed a task while\n                    // the queue was empty so such a task is already being executed. If so,\n                    // don't execute it twice.\n                    if (nextPendingTask && !nextPendingTask.executedAt) {\n                        void this.execute(nextPendingTask);\n                    }\n                },\n                reject: (error) => {\n                    // pendingTask.reject() can be called within execute() method if the\n                    // task completed with error. However it may have also been called in\n                    // stop() or remove() methods (before or while being executed) so its\n                    // completed flag was already set. If so, abort here since next task\n                    // (if any) is already being executed.\n                    if (pendingTask.completed) {\n                        return;\n                    }\n                    pendingTask.completed = true;\n                    // Remove the task from the queue.\n                    this.pendingTasks.delete(pendingTask.id);\n                    logger.debug(`rejecting task [name:${pendingTask.name}]: %s`, String(error));\n                    // Reject the task with the obtained error.\n                    reject(error);\n                    // Execute the next pending task (if any) unless stop() is running.\n                    if (!this.stopping) {\n                        const [nextPendingTask] = this.pendingTasks.values();\n                        // NOTE: During the reject() callback the user app may have interacted\n                        // with the queue. For instance, the app may have pushed a task while\n                        // the queue was empty so such a task is already being executed. If so,\n                        // don't execute it twice.\n                        if (nextPendingTask && !nextPendingTask.executedAt) {\n                            void this.execute(nextPendingTask);\n                        }\n                    }\n                }\n            };\n            // Append task to the queue.\n            this.pendingTasks.set(pendingTask.id, pendingTask);\n            // And execute it if this is the only task in the queue.\n            if (this.pendingTasks.size === 1) {\n                void this.execute(pendingTask);\n            }\n        });\n    }\n    stop() {\n        logger.debug('stop()');\n        this.stopping = true;\n        for (const pendingTask of this.pendingTasks.values()) {\n            logger.debug(`stop() | stopping task [name:${pendingTask.name}]`);\n            pendingTask.reject(new AwaitQueueStoppedError());\n        }\n        this.stopping = false;\n    }\n    remove(taskIdx) {\n        logger.debug(`remove() [taskIdx:${taskIdx}]`);\n        const pendingTask = Array.from(this.pendingTasks.values())[taskIdx];\n        if (!pendingTask) {\n            logger.debug(`stop() | no task with given idx [taskIdx:${taskIdx}]`);\n            return;\n        }\n        pendingTask.reject(new AwaitQueueRemovedTaskError());\n    }\n    dump() {\n        const now = Date.now();\n        let idx = 0;\n        return Array.from(this.pendingTasks.values()).map((pendingTask) => ({\n            idx: idx++,\n            task: pendingTask.task,\n            name: pendingTask.name,\n            enqueuedTime: pendingTask.executedAt\n                ? pendingTask.executedAt - pendingTask.enqueuedAt\n                : now - pendingTask.enqueuedAt,\n            executionTime: pendingTask.executedAt\n                ? now - pendingTask.executedAt\n                : 0\n        }));\n    }\n    async execute(pendingTask) {\n        logger.debug(`execute() [name:${pendingTask.name}]`);\n        if (pendingTask.executedAt) {\n            throw new Error('task already being executed');\n        }\n        pendingTask.executedAt = Date.now();\n        try {\n            const result = await pendingTask.task();\n            // Resolve the task with its resolved result (if any).\n            pendingTask.resolve(result);\n        }\n        catch (error) {\n            // Reject the task with its rejected error.\n            pendingTask.reject(error);\n        }\n    }\n}\nexports.AwaitQueue = AwaitQueue;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.bowser=t():e.bowser=t()}(this,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=90)}({17:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n=r(18),i=function(){function e(){}return e.getFirstMatch=function(e,t){var r=t.match(e);return r&&r.length>0&&r[1]||\"\"},e.getSecondMatch=function(e,t){var r=t.match(e);return r&&r.length>1&&r[2]||\"\"},e.matchAndReturnConst=function(e,t,r){if(e.test(t))return r},e.getWindowsVersionName=function(e){switch(e){case\"NT\":return\"NT\";case\"XP\":return\"XP\";case\"NT 5.0\":return\"2000\";case\"NT 5.1\":return\"XP\";case\"NT 5.2\":return\"2003\";case\"NT 6.0\":return\"Vista\";case\"NT 6.1\":return\"7\";case\"NT 6.2\":return\"8\";case\"NT 6.3\":return\"8.1\";case\"NT 10.0\":return\"10\";default:return}},e.getMacOSVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),10===t[0])switch(t[1]){case 5:return\"Leopard\";case 6:return\"Snow Leopard\";case 7:return\"Lion\";case 8:return\"Mountain Lion\";case 9:return\"Mavericks\";case 10:return\"Yosemite\";case 11:return\"El Capitan\";case 12:return\"Sierra\";case 13:return\"High Sierra\";case 14:return\"Mojave\";case 15:return\"Catalina\";default:return}},e.getAndroidVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),!(1===t[0]&&t[1]<5))return 1===t[0]&&t[1]<6?\"Cupcake\":1===t[0]&&t[1]>=6?\"Donut\":2===t[0]&&t[1]<2?\"Eclair\":2===t[0]&&2===t[1]?\"Froyo\":2===t[0]&&t[1]>2?\"Gingerbread\":3===t[0]?\"Honeycomb\":4===t[0]&&t[1]<1?\"Ice Cream Sandwich\":4===t[0]&&t[1]<4?\"Jelly Bean\":4===t[0]&&t[1]>=4?\"KitKat\":5===t[0]?\"Lollipop\":6===t[0]?\"Marshmallow\":7===t[0]?\"Nougat\":8===t[0]?\"Oreo\":9===t[0]?\"Pie\":void 0},e.getVersionPrecision=function(e){return e.split(\".\").length},e.compareVersions=function(t,r,n){void 0===n&&(n=!1);var i=e.getVersionPrecision(t),s=e.getVersionPrecision(r),a=Math.max(i,s),o=0,u=e.map([t,r],(function(t){var r=a-e.getVersionPrecision(t),n=t+new Array(r+1).join(\".0\");return e.map(n.split(\".\"),(function(e){return new Array(20-e.length).join(\"0\")+e})).reverse()}));for(n&&(o=a-Math.min(i,s)),a-=1;a>=o;){if(u[0][a]>u[1][a])return 1;if(u[0][a]===u[1][a]){if(a===o)return 0;a-=1}else if(u[0][a]<u[1][a])return-1}},e.map=function(e,t){var r,n=[];if(Array.prototype.map)return Array.prototype.map.call(e,t);for(r=0;r<e.length;r+=1)n.push(t(e[r]));return n},e.find=function(e,t){var r,n;if(Array.prototype.find)return Array.prototype.find.call(e,t);for(r=0,n=e.length;r<n;r+=1){var i=e[r];if(t(i,r))return i}},e.assign=function(e){for(var t,r,n=e,i=arguments.length,s=new Array(i>1?i-1:0),a=1;a<i;a++)s[a-1]=arguments[a];if(Object.assign)return Object.assign.apply(Object,[e].concat(s));var o=function(){var e=s[t];\"object\"==typeof e&&null!==e&&Object.keys(e).forEach((function(t){n[t]=e[t]}))};for(t=0,r=s.length;t<r;t+=1)o();return e},e.getBrowserAlias=function(e){return n.BROWSER_ALIASES_MAP[e]},e.getBrowserTypeByAlias=function(e){return n.BROWSER_MAP[e]||\"\"},e}();t.default=i,e.exports=t.default},18:function(e,t,r){\"use strict\";t.__esModule=!0,t.ENGINE_MAP=t.OS_MAP=t.PLATFORMS_MAP=t.BROWSER_MAP=t.BROWSER_ALIASES_MAP=void 0;t.BROWSER_ALIASES_MAP={\"Amazon Silk\":\"amazon_silk\",\"Android Browser\":\"android\",Bada:\"bada\",BlackBerry:\"blackberry\",Chrome:\"chrome\",Chromium:\"chromium\",Electron:\"electron\",Epiphany:\"epiphany\",Firefox:\"firefox\",Focus:\"focus\",Generic:\"generic\",\"Google Search\":\"google_search\",Googlebot:\"googlebot\",\"Internet Explorer\":\"ie\",\"K-Meleon\":\"k_meleon\",Maxthon:\"maxthon\",\"Microsoft Edge\":\"edge\",\"MZ Browser\":\"mz\",\"NAVER Whale Browser\":\"naver\",Opera:\"opera\",\"Opera Coast\":\"opera_coast\",PhantomJS:\"phantomjs\",Puffin:\"puffin\",QupZilla:\"qupzilla\",QQ:\"qq\",QQLite:\"qqlite\",Safari:\"safari\",Sailfish:\"sailfish\",\"Samsung Internet for Android\":\"samsung_internet\",SeaMonkey:\"seamonkey\",Sleipnir:\"sleipnir\",Swing:\"swing\",Tizen:\"tizen\",\"UC Browser\":\"uc\",Vivaldi:\"vivaldi\",\"WebOS Browser\":\"webos\",WeChat:\"wechat\",\"Yandex Browser\":\"yandex\",Roku:\"roku\"};t.BROWSER_MAP={amazon_silk:\"Amazon Silk\",android:\"Android Browser\",bada:\"Bada\",blackberry:\"BlackBerry\",chrome:\"Chrome\",chromium:\"Chromium\",electron:\"Electron\",epiphany:\"Epiphany\",firefox:\"Firefox\",focus:\"Focus\",generic:\"Generic\",googlebot:\"Googlebot\",google_search:\"Google Search\",ie:\"Internet Explorer\",k_meleon:\"K-Meleon\",maxthon:\"Maxthon\",edge:\"Microsoft Edge\",mz:\"MZ Browser\",naver:\"NAVER Whale Browser\",opera:\"Opera\",opera_coast:\"Opera Coast\",phantomjs:\"PhantomJS\",puffin:\"Puffin\",qupzilla:\"QupZilla\",qq:\"QQ Browser\",qqlite:\"QQ Browser Lite\",safari:\"Safari\",sailfish:\"Sailfish\",samsung_internet:\"Samsung Internet for Android\",seamonkey:\"SeaMonkey\",sleipnir:\"Sleipnir\",swing:\"Swing\",tizen:\"Tizen\",uc:\"UC Browser\",vivaldi:\"Vivaldi\",webos:\"WebOS Browser\",wechat:\"WeChat\",yandex:\"Yandex Browser\"};t.PLATFORMS_MAP={tablet:\"tablet\",mobile:\"mobile\",desktop:\"desktop\",tv:\"tv\"};t.OS_MAP={WindowsPhone:\"Windows Phone\",Windows:\"Windows\",MacOS:\"macOS\",iOS:\"iOS\",Android:\"Android\",WebOS:\"WebOS\",BlackBerry:\"BlackBerry\",Bada:\"Bada\",Tizen:\"Tizen\",Linux:\"Linux\",ChromeOS:\"Chrome OS\",PlayStation4:\"PlayStation 4\",Roku:\"Roku\"};t.ENGINE_MAP={EdgeHTML:\"EdgeHTML\",Blink:\"Blink\",Trident:\"Trident\",Presto:\"Presto\",Gecko:\"Gecko\",WebKit:\"WebKit\"}},90:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(91))&&n.__esModule?n:{default:n},s=r(18);function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var o=function(){function e(){}var t,r,n;return e.getParser=function(e,t){if(void 0===t&&(t=!1),\"string\"!=typeof e)throw new Error(\"UserAgent should be a string\");return new i.default(e,t)},e.parse=function(e){return new i.default(e).getResult()},t=e,n=[{key:\"BROWSER_MAP\",get:function(){return s.BROWSER_MAP}},{key:\"ENGINE_MAP\",get:function(){return s.ENGINE_MAP}},{key:\"OS_MAP\",get:function(){return s.OS_MAP}},{key:\"PLATFORMS_MAP\",get:function(){return s.PLATFORMS_MAP}}],(r=null)&&a(t.prototype,r),n&&a(t,n),e}();t.default=o,e.exports=t.default},91:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n=u(r(92)),i=u(r(93)),s=u(r(94)),a=u(r(95)),o=u(r(17));function u(e){return e&&e.__esModule?e:{default:e}}var d=function(){function e(e,t){if(void 0===t&&(t=!1),null==e||\"\"===e)throw new Error(\"UserAgent parameter can't be empty\");this._ua=e,this.parsedResult={},!0!==t&&this.parse()}var t=e.prototype;return t.getUA=function(){return this._ua},t.test=function(e){return e.test(this._ua)},t.parseBrowser=function(){var e=this;this.parsedResult.browser={};var t=o.default.find(n.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.browser=t.describe(this.getUA())),this.parsedResult.browser},t.getBrowser=function(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()},t.getBrowserName=function(e){return e?String(this.getBrowser().name).toLowerCase()||\"\":this.getBrowser().name||\"\"},t.getBrowserVersion=function(){return this.getBrowser().version},t.getOS=function(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()},t.parseOS=function(){var e=this;this.parsedResult.os={};var t=o.default.find(i.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.os=t.describe(this.getUA())),this.parsedResult.os},t.getOSName=function(e){var t=this.getOS().name;return e?String(t).toLowerCase()||\"\":t||\"\"},t.getOSVersion=function(){return this.getOS().version},t.getPlatform=function(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()},t.getPlatformType=function(e){void 0===e&&(e=!1);var t=this.getPlatform().type;return e?String(t).toLowerCase()||\"\":t||\"\"},t.parsePlatform=function(){var e=this;this.parsedResult.platform={};var t=o.default.find(s.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.platform=t.describe(this.getUA())),this.parsedResult.platform},t.getEngine=function(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()},t.getEngineName=function(e){return e?String(this.getEngine().name).toLowerCase()||\"\":this.getEngine().name||\"\"},t.parseEngine=function(){var e=this;this.parsedResult.engine={};var t=o.default.find(a.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.engine=t.describe(this.getUA())),this.parsedResult.engine},t.parse=function(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this},t.getResult=function(){return o.default.assign({},this.parsedResult)},t.satisfies=function(e){var t=this,r={},n=0,i={},s=0;if(Object.keys(e).forEach((function(t){var a=e[t];\"string\"==typeof a?(i[t]=a,s+=1):\"object\"==typeof a&&(r[t]=a,n+=1)})),n>0){var a=Object.keys(r),u=o.default.find(a,(function(e){return t.isOS(e)}));if(u){var d=this.satisfies(r[u]);if(void 0!==d)return d}var c=o.default.find(a,(function(e){return t.isPlatform(e)}));if(c){var f=this.satisfies(r[c]);if(void 0!==f)return f}}if(s>0){var l=Object.keys(i),h=o.default.find(l,(function(e){return t.isBrowser(e,!0)}));if(void 0!==h)return this.compareVersion(i[h])}},t.isBrowser=function(e,t){void 0===t&&(t=!1);var r=this.getBrowserName().toLowerCase(),n=e.toLowerCase(),i=o.default.getBrowserTypeByAlias(n);return t&&i&&(n=i.toLowerCase()),n===r},t.compareVersion=function(e){var t=[0],r=e,n=!1,i=this.getBrowserVersion();if(\"string\"==typeof i)return\">\"===e[0]||\"<\"===e[0]?(r=e.substr(1),\"=\"===e[1]?(n=!0,r=e.substr(2)):t=[],\">\"===e[0]?t.push(1):t.push(-1)):\"=\"===e[0]?r=e.substr(1):\"~\"===e[0]&&(n=!0,r=e.substr(1)),t.indexOf(o.default.compareVersions(i,r,n))>-1},t.isOS=function(e){return this.getOSName(!0)===String(e).toLowerCase()},t.isPlatform=function(e){return this.getPlatformType(!0)===String(e).toLowerCase()},t.isEngine=function(e){return this.getEngineName(!0)===String(e).toLowerCase()},t.is=function(e,t){return void 0===t&&(t=!1),this.isBrowser(e,t)||this.isOS(e)||this.isPlatform(e)},t.some=function(e){var t=this;return void 0===e&&(e=[]),e.some((function(e){return t.is(e)}))},e}();t.default=d,e.exports=t.default},92:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n};var s=/version\\/(\\d+(\\.?_?\\d+)+)/i,a=[{test:[/googlebot/i],describe:function(e){var t={name:\"Googlebot\"},r=i.default.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/opera/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opr\\/|opios/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/SamsungBrowser/i],describe:function(e){var t={name:\"Samsung Internet for Android\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Whale/i],describe:function(e){var t={name:\"NAVER Whale Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MZBrowser/i],describe:function(e){var t={name:\"MZ Browser\"},r=i.default.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/focus/i],describe:function(e){var t={name:\"Focus\"},r=i.default.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/swing/i],describe:function(e){var t={name:\"Swing\"},r=i.default.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/coast/i],describe:function(e){var t={name:\"Opera Coast\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opt\\/\\d+(?:.?_?\\d+)+/i],describe:function(e){var t={name:\"Opera Touch\"},r=i.default.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/yabrowser/i],describe:function(e){var t={name:\"Yandex Browser\"},r=i.default.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/ucbrowser/i],describe:function(e){var t={name:\"UC Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Maxthon|mxios/i],describe:function(e){var t={name:\"Maxthon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/epiphany/i],describe:function(e){var t={name:\"Epiphany\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/puffin/i],describe:function(e){var t={name:\"Puffin\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sleipnir/i],describe:function(e){var t={name:\"Sleipnir\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/k-meleon/i],describe:function(e){var t={name:\"K-Meleon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/micromessenger/i],describe:function(e){var t={name:\"WeChat\"},r=i.default.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qqbrowser/i],describe:function(e){var t={name:/qqbrowserlite/i.test(e)?\"QQ Browser Lite\":\"QQ Browser\"},r=i.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/msie|trident/i],describe:function(e){var t={name:\"Internet Explorer\"},r=i.default.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/\\sedg\\//i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/edg([ea]|ios)/i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/vivaldi/i],describe:function(e){var t={name:\"Vivaldi\"},r=i.default.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/seamonkey/i],describe:function(e){var t={name:\"SeaMonkey\"},r=i.default.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sailfish/i],describe:function(e){var t={name:\"Sailfish\"},r=i.default.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i,e);return r&&(t.version=r),t}},{test:[/silk/i],describe:function(e){var t={name:\"Amazon Silk\"},r=i.default.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/phantom/i],describe:function(e){var t={name:\"PhantomJS\"},r=i.default.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/slimerjs/i],describe:function(e){var t={name:\"SlimerJS\"},r=i.default.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t={name:\"BlackBerry\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t={name:\"WebOS Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/bada/i],describe:function(e){var t={name:\"Bada\"},r=i.default.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/tizen/i],describe:function(e){var t={name:\"Tizen\"},r=i.default.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qupzilla/i],describe:function(e){var t={name:\"QupZilla\"},r=i.default.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/firefox|iceweasel|fxios/i],describe:function(e){var t={name:\"Firefox\"},r=i.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/electron/i],describe:function(e){var t={name:\"Electron\"},r=i.default.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MiuiBrowser/i],describe:function(e){var t={name:\"Miui\"},r=i.default.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/chromium/i],describe:function(e){var t={name:\"Chromium\"},r=i.default.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/chrome|crios|crmo/i],describe:function(e){var t={name:\"Chrome\"},r=i.default.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/GSA/i],describe:function(e){var t={name:\"Google Search\"},r=i.default.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t={name:\"Android Browser\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/playstation 4/i],describe:function(e){var t={name:\"PlayStation 4\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/safari|applewebkit/i],describe:function(e){var t={name:\"Safari\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/.*/i],describe:function(e){var t=-1!==e.search(\"\\\\(\")?/^(.*)\\/(.*)[ \\t]\\((.*)/:/^(.*)\\/(.*) /;return{name:i.default.getFirstMatch(t,e),version:i.default.getSecondMatch(t,e)}}}];t.default=a,e.exports=t.default},93:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/Roku\\/DVP/],describe:function(e){var t=i.default.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i,e);return{name:s.OS_MAP.Roku,version:t}}},{test:[/windows phone/i],describe:function(e){var t=i.default.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.WindowsPhone,version:t}}},{test:[/windows /i],describe:function(e){var t=i.default.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i,e),r=i.default.getWindowsVersionName(t);return{name:s.OS_MAP.Windows,version:t,versionName:r}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(e){var t={name:s.OS_MAP.iOS},r=i.default.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/,e);return r&&(t.version=r),t}},{test:[/macintosh/i],describe:function(e){var t=i.default.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i,e).replace(/[_\\s]/g,\".\"),r=i.default.getMacOSVersionName(t),n={name:s.OS_MAP.MacOS,version:t};return r&&(n.versionName=r),n}},{test:[/(ipod|iphone|ipad)/i],describe:function(e){var t=i.default.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i,e).replace(/[_\\s]/g,\".\");return{name:s.OS_MAP.iOS,version:t}}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t=i.default.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i,e),r=i.default.getAndroidVersionName(t),n={name:s.OS_MAP.Android,version:t};return r&&(n.versionName=r),n}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t=i.default.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i,e),r={name:s.OS_MAP.WebOS};return t&&t.length&&(r.version=t),r}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t=i.default.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i,e)||i.default.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i,e)||i.default.getFirstMatch(/\\bbb(\\d+)/i,e);return{name:s.OS_MAP.BlackBerry,version:t}}},{test:[/bada/i],describe:function(e){var t=i.default.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Bada,version:t}}},{test:[/tizen/i],describe:function(e){var t=i.default.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Tizen,version:t}}},{test:[/linux/i],describe:function(){return{name:s.OS_MAP.Linux}}},{test:[/CrOS/],describe:function(){return{name:s.OS_MAP.ChromeOS}}},{test:[/PlayStation 4/],describe:function(e){var t=i.default.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.PlayStation4,version:t}}}];t.default=a,e.exports=t.default},94:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/googlebot/i],describe:function(){return{type:\"bot\",vendor:\"Google\"}}},{test:[/huawei/i],describe:function(e){var t=i.default.getFirstMatch(/(can-l01)/i,e)&&\"Nova\",r={type:s.PLATFORMS_MAP.mobile,vendor:\"Huawei\"};return t&&(r.model=t),r}},{test:[/nexus\\s*(?:7|8|9|10).*/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Nexus\"}}},{test:[/ipad/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/kftt build/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\",model:\"Kindle Fire HD 7\"}}},{test:[/silk/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\"}}},{test:[/tablet(?! pc)/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){var t=e.test(/ipod|iphone/i),r=e.test(/like (ipod|iphone)/i);return t&&!r},describe:function(e){var t=i.default.getFirstMatch(/(ipod|iphone)/i,e);return{type:s.PLATFORMS_MAP.mobile,vendor:\"Apple\",model:t}}},{test:[/nexus\\s*[0-6].*/i,/galaxy nexus/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Nexus\"}}},{test:[/[^-]mobi/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"blackberry\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"BlackBerry\"}}},{test:function(e){return\"bada\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"windows phone\"===e.getBrowserName()},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Microsoft\"}}},{test:function(e){var t=Number(String(e.getOSVersion()).split(\".\")[0]);return\"android\"===e.getOSName(!0)&&t>=3},describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){return\"android\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"macos\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop,vendor:\"Apple\"}}},{test:function(e){return\"windows\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"linux\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"playstation 4\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}},{test:function(e){return\"roku\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}}];t.default=a,e.exports=t.default},95:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:function(e){return\"microsoft edge\"===e.getBrowserName(!0)},describe:function(e){if(/\\sedg\\//i.test(e))return{name:s.ENGINE_MAP.Blink};var t=i.default.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i,e);return{name:s.ENGINE_MAP.EdgeHTML,version:t}}},{test:[/trident/i],describe:function(e){var t={name:s.ENGINE_MAP.Trident},r=i.default.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){return e.test(/presto/i)},describe:function(e){var t={name:s.ENGINE_MAP.Presto},r=i.default.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=e.test(/gecko/i),r=e.test(/like gecko/i);return t&&!r},describe:function(e){var t={name:s.ENGINE_MAP.Gecko},r=i.default.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(apple)?webkit\\/537\\.36/i],describe:function(){return{name:s.ENGINE_MAP.Blink}}},{test:[/(apple)?webkit/i],describe:function(e){var t={name:s.ENGINE_MAP.WebKit},r=i.default.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}}];t.default=a,e.exports=t.default}})}));","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","const debug = require('debug')('h264-profile-level-id');\n\n/* eslint-disable no-console */\ndebug.log = console.info.bind(console);\n/* eslint-enable no-console */\n\nconst ProfileConstrainedBaseline = 1;\nconst ProfileBaseline = 2;\nconst ProfileMain = 3;\nconst ProfileConstrainedHigh = 4;\nconst ProfileHigh = 5;\n\nexports.ProfileConstrainedBaseline = ProfileConstrainedBaseline;\nexports.ProfileBaseline = ProfileBaseline;\nexports.ProfileMain = ProfileMain;\nexports.ProfileConstrainedHigh = ProfileConstrainedHigh;\nexports.ProfileHigh = ProfileHigh;\n\n// All values are equal to ten times the level number, except level 1b which is\n// special.\nconst Level1_b = 0;\nconst Level1 = 10;\nconst Level1_1 = 11;\nconst Level1_2 = 12;\nconst Level1_3 = 13;\nconst Level2 = 20;\nconst Level2_1 = 21;\nconst Level2_2 = 22;\nconst Level3 = 30;\nconst Level3_1 = 31;\nconst Level3_2 = 32;\nconst Level4 = 40;\nconst Level4_1 = 41;\nconst Level4_2 = 42;\nconst Level5 = 50;\nconst Level5_1 = 51;\nconst Level5_2 = 52;\n\nexports.Level1_b = Level1_b;\nexports.Level1 = Level1;\nexports.Level1_1 = Level1_1;\nexports.Level1_2 = Level1_2;\nexports.Level1_3 = Level1_3;\nexports.Level2 = Level2;\nexports.Level2_1 = Level2_1;\nexports.Level2_2 = Level2_2;\nexports.Level3 = Level3;\nexports.Level3_1 = Level3_1;\nexports.Level3_2 = Level3_2;\nexports.Level4 = Level4;\nexports.Level4_1 = Level4_1;\nexports.Level4_2 = Level4_2;\nexports.Level5 = Level5;\nexports.Level5_1 = Level5_1;\nexports.Level5_2 = Level5_2;\n\nclass ProfileLevelId\n{\n\tconstructor(profile, level)\n\t{\n\t\tthis.profile = profile;\n\t\tthis.level = level;\n\t}\n}\n\nexports.ProfileLevelId = ProfileLevelId;\n\n// Default ProfileLevelId.\n//\n// TODO: The default should really be profile Baseline and level 1 according to\n// the spec: https://tools.ietf.org/html/rfc6184#section-8.1. In order to not\n// break backwards compatibility with older versions of WebRTC where external\n// codecs don't have any parameters, use profile ConstrainedBaseline level 3_1\n// instead. This workaround will only be done in an interim period to allow\n// external clients to update their code.\n//\n// http://crbug/webrtc/6337.\nconst DefaultProfileLevelId =\n\tnew ProfileLevelId(ProfileConstrainedBaseline, Level3_1);\n\n// For level_idc=11 and profile_idc=0x42, 0x4D, or 0x58, the constraint set3\n// flag specifies if level 1b or level 1.1 is used.\nconst ConstraintSet3Flag = 0x10;\n\n// Class for matching bit patterns such as \"x1xx0000\" where 'x' is allowed to be\n// either 0 or 1.\nclass BitPattern\n{\n\tconstructor(str)\n\t{\n\t\tthis._mask = ~byteMaskString('x', str);\n\t\tthis._maskedValue = byteMaskString('1', str);\n\t}\n\n\tisMatch(value)\n\t{\n\t\treturn this._maskedValue === (value & this._mask);\n\t}\n}\n\n// Class for converting between profile_idc/profile_iop to Profile.\nclass ProfilePattern\n{\n\tconstructor(profile_idc, profile_iop, profile)\n\t{\n\t\tthis.profile_idc = profile_idc;\n\t\tthis.profile_iop = profile_iop;\n\t\tthis.profile = profile;\n\t}\n}\n\n// This is from https://tools.ietf.org/html/rfc6184#section-8.1.\nconst ProfilePatterns =\n[\n\tnew ProfilePattern(0x42, new BitPattern('x1xx0000'), ProfileConstrainedBaseline),\n\tnew ProfilePattern(0x4D, new BitPattern('1xxx0000'), ProfileConstrainedBaseline),\n\tnew ProfilePattern(0x58, new BitPattern('11xx0000'), ProfileConstrainedBaseline),\n\tnew ProfilePattern(0x42, new BitPattern('x0xx0000'), ProfileBaseline),\n\tnew ProfilePattern(0x58, new BitPattern('10xx0000'), ProfileBaseline),\n\tnew ProfilePattern(0x4D, new BitPattern('0x0x0000'), ProfileMain),\n\tnew ProfilePattern(0x64, new BitPattern('00000000'), ProfileHigh),\n\tnew ProfilePattern(0x64, new BitPattern('00001100'), ProfileConstrainedHigh)\n];\n\n/**\n * Parse profile level id that is represented as a string of 3 hex bytes.\n * Nothing will be returned if the string is not a recognized H264 profile\n * level id.\n *\n * @param {String} str - profile-level-id value as a string of 3 hex bytes.\n *\n * @returns {ProfileLevelId}\n */\nexports.parseProfileLevelId = function(str)\n{\n\t// The string should consist of 3 bytes in hexadecimal format.\n\tif (typeof str !== 'string' || str.length !== 6)\n\t\treturn null;\n\n\tconst profile_level_id_numeric = parseInt(str, 16);\n\n\tif (profile_level_id_numeric === 0)\n\t\treturn null;\n\n\t// Separate into three bytes.\n\tconst level_idc = profile_level_id_numeric & 0xFF;\n\tconst profile_iop = (profile_level_id_numeric >> 8) & 0xFF;\n\tconst profile_idc = (profile_level_id_numeric >> 16) & 0xFF;\n\n\t// Parse level based on level_idc and constraint set 3 flag.\n\tlet level;\n\n\tswitch (level_idc)\n\t{\n\t\tcase Level1_1:\n\t\t{\n\t\t\tlevel = (profile_iop & ConstraintSet3Flag) !== 0 ? Level1_b : Level1_1;\n\t\t\tbreak;\n\t\t}\n\t\tcase Level1:\n\t\tcase Level1_2:\n\t\tcase Level1_3:\n\t\tcase Level2:\n\t\tcase Level2_1:\n\t\tcase Level2_2:\n\t\tcase Level3:\n\t\tcase Level3_1:\n\t\tcase Level3_2:\n\t\tcase Level4:\n\t\tcase Level4_1:\n\t\tcase Level4_2:\n\t\tcase Level5:\n\t\tcase Level5_1:\n\t\tcase Level5_2:\n\t\t{\n\t\t\tlevel = level_idc;\n\t\t\tbreak;\n\t\t}\n\t\t// Unrecognized level_idc.\n\t\tdefault:\n\t\t{\n\t\t\tdebug('parseProfileLevelId() | unrecognized level_idc:%s', level_idc);\n\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Parse profile_idc/profile_iop into a Profile enum.\n\tfor (const pattern of ProfilePatterns)\n\t{\n\t\tif (\n\t\t\tprofile_idc === pattern.profile_idc &&\n\t\t\tpattern.profile_iop.isMatch(profile_iop)\n\t\t)\n\t\t{\n\t\t\treturn new ProfileLevelId(pattern.profile, level);\n\t\t}\n\t}\n\n\tdebug('parseProfileLevelId() | unrecognized profile_idc/profile_iop combination');\n\n\treturn null;\n};\n\n/**\n * Returns canonical string representation as three hex bytes of the profile\n * level id, or returns nothing for invalid profile level ids.\n *\n * @param {ProfileLevelId} profile_level_id\n *\n * @returns {String}\n */\nexports.profileLevelIdToString = function(profile_level_id)\n{\n\t// Handle special case level == 1b.\n\tif (profile_level_id.level == Level1_b)\n\t{\n\t\tswitch (profile_level_id.profile)\n\t\t{\n\t\t\tcase ProfileConstrainedBaseline:\n\t\t\t{\n\t\t\t\treturn '42f00b';\n\t\t\t}\n\t\t\tcase ProfileBaseline:\n\t\t\t{\n\t\t\t\treturn '42100b';\n\t\t\t}\n\t\t\tcase ProfileMain:\n\t\t\t{\n\t\t\t\treturn '4d100b';\n\t\t\t}\n\t\t\t// Level 1_b is not allowed for other profiles.\n\t\t\tdefault:\n\t\t\t{\n\t\t\t\tdebug(\n\t\t\t\t\t'profileLevelIdToString() | Level 1_b not is allowed for profile:%s',\n\t\t\t\t\tprofile_level_id.profile);\n\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tlet profile_idc_iop_string;\n\n\tswitch (profile_level_id.profile)\n\t{\n\t\tcase ProfileConstrainedBaseline:\n\t\t{\n\t\t\tprofile_idc_iop_string = '42e0';\n\t\t\tbreak;\n\t\t}\n\t\tcase ProfileBaseline:\n\t\t{\n\t\t\tprofile_idc_iop_string = '4200';\n\t\t\tbreak;\n\t\t}\n\t\tcase ProfileMain:\n\t\t{\n\t\t\tprofile_idc_iop_string = '4d00';\n\t\t\tbreak;\n\t\t}\n\t\tcase ProfileConstrainedHigh:\n\t\t{\n\t\t\tprofile_idc_iop_string = '640c';\n\t\t\tbreak;\n\t\t}\n\t\tcase ProfileHigh:\n\t\t{\n\t\t\tprofile_idc_iop_string = '6400';\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t{\n\t\t\tdebug(\n\t\t\t\t'profileLevelIdToString() | unrecognized profile:%s',\n\t\t\t\tprofile_level_id.profile);\n\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tlet levelStr = (profile_level_id.level).toString(16);\n\n\tif (levelStr.length === 1)\n\t\tlevelStr = `0${levelStr}`;\n\n\treturn `${profile_idc_iop_string}${levelStr}`;\n};\n\n/**\n * Parse profile level id that is represented as a string of 3 hex bytes\n * contained in an SDP key-value map. A default profile level id will be\n * returned if the profile-level-id key is missing. Nothing will be returned if\n * the key is present but the string is invalid.\n *\n * @param {Object} [params={}] - Codec parameters object.\n *\n * @returns {ProfileLevelId}\n */\nexports.parseSdpProfileLevelId = function(params = {})\n{\n\tconst profile_level_id = params['profile-level-id'];\n\n\treturn !profile_level_id\n\t\t? DefaultProfileLevelId\n\t\t: exports.parseProfileLevelId(profile_level_id);\n};\n\n/**\n * Returns true if the parameters have the same H264 profile, i.e. the same\n * H264 profile (Baseline, High, etc).\n *\n * @param {Object} [params1={}] - Codec parameters object.\n * @param {Object} [params2={}] - Codec parameters object.\n *\n * @returns {Boolean}\n */\nexports.isSameProfile = function(params1 = {}, params2 = {})\n{\n\tconst profile_level_id_1 = exports.parseSdpProfileLevelId(params1);\n\tconst profile_level_id_2 = exports.parseSdpProfileLevelId(params2);\n\n\t// Compare H264 profiles, but not levels.\n\treturn Boolean(\n\t\tprofile_level_id_1 &&\n\t\tprofile_level_id_2 &&\n\t\tprofile_level_id_1.profile === profile_level_id_2.profile\n\t);\n};\n\n/**\n * Generate codec parameters that will be used as answer in an SDP negotiation\n * based on local supported parameters and remote offered parameters. Both\n * local_supported_params and remote_offered_params represent sendrecv media\n * descriptions, i.e they are a mix of both encode and decode capabilities. In\n * theory, when the profile in local_supported_params represent a strict superset\n * of the profile in remote_offered_params, we could limit the profile in the\n * answer to the profile in remote_offered_params.\n *\n * However, to simplify the code, each supported H264 profile should be listed\n * explicitly in the list of local supported codecs, even if they are redundant.\n * Then each local codec in the list should be tested one at a time against the\n * remote codec, and only when the profiles are equal should this function be\n * called. Therefore, this function does not need to handle profile intersection,\n * and the profile of local_supported_params and remote_offered_params must be\n * equal before calling this function. The parameters that are used when\n * negotiating are the level part of profile-level-id and level-asymmetry-allowed.\n *\n * @param {Object} [local_supported_params={}]\n * @param {Object} [remote_offered_params={}]\n *\n * @returns {String} Canonical string representation as three hex bytes of the\n *   profile level id, or null if no one of the params have profile-level-id.\n *\n * @throws {TypeError} If Profile mismatch or invalid params.\n */\nexports.generateProfileLevelIdForAnswer = function(\n\tlocal_supported_params = {},\n\tremote_offered_params = {}\n)\n{\n\t// If both local and remote params do not contain profile-level-id, they are\n\t// both using the default profile. In this case, don't return anything.\n\tif (\n\t\t!local_supported_params['profile-level-id'] &&\n\t\t!remote_offered_params['profile-level-id']\n\t)\n\t{\n\t\tdebug(\n\t\t\t'generateProfileLevelIdForAnswer() | no profile-level-id in local and remote params');\n\n\t\treturn null;\n\t}\n\n\t// Parse profile-level-ids.\n\tconst local_profile_level_id =\n\t\texports.parseSdpProfileLevelId(local_supported_params);\n\tconst remote_profile_level_id =\n\t\texports.parseSdpProfileLevelId(remote_offered_params);\n\n\t// The local and remote codec must have valid and equal H264 Profiles.\n\tif (!local_profile_level_id)\n\t\tthrow new TypeError('invalid local_profile_level_id');\n\n\tif (!remote_profile_level_id)\n\t\tthrow new TypeError('invalid remote_profile_level_id');\n\n\tif (local_profile_level_id.profile !== remote_profile_level_id.profile)\n\t\tthrow new TypeError('H264 Profile mismatch');\n\n\t// Parse level information.\n\tconst level_asymmetry_allowed = (\n\t\tisLevelAsymmetryAllowed(local_supported_params) &&\n\t\tisLevelAsymmetryAllowed(remote_offered_params)\n\t);\n\n\tconst local_level = local_profile_level_id.level;\n\tconst remote_level = remote_profile_level_id.level;\n\tconst min_level = minLevel(local_level, remote_level);\n\n\t// Determine answer level. When level asymmetry is not allowed, level upgrade\n\t// is not allowed, i.e., the level in the answer must be equal to or lower\n\t// than the level in the offer.\n\tconst answer_level = level_asymmetry_allowed ? local_level : min_level;\n\n\tdebug(\n\t\t'generateProfileLevelIdForAnswer() | result: [profile:%s, level:%s]',\n\t\tlocal_profile_level_id.profile, answer_level);\n\n\t// Return the resulting profile-level-id for the answer parameters.\n\treturn exports.profileLevelIdToString(\n\t\tnew ProfileLevelId(local_profile_level_id.profile, answer_level));\n};\n\n// Convert a string of 8 characters into a byte where the positions containing\n// character c will have their bit set. For example, c = 'x', str = \"x1xx0000\"\n// will return 0b10110000.\nfunction byteMaskString(c, str)\n{\n\treturn (\n\t\t((str[0] === c) << 7) | ((str[1] === c) << 6) | ((str[2] === c) << 5) |\n\t\t((str[3] === c) << 4)\t| ((str[4] === c) << 3)\t| ((str[5] === c) << 2)\t|\n\t\t((str[6] === c) << 1)\t| ((str[7] === c) << 0)\n\t);\n}\n\n// Compare H264 levels and handle the level 1b case.\nfunction isLessLevel(a, b)\n{\n\tif (a === Level1_b)\n\t\treturn b !== Level1 && b !== Level1_b;\n\n\tif (b === Level1_b)\n\t\treturn a !== Level1;\n\n\treturn a < b;\n}\n\nfunction minLevel(a, b)\n{\n\treturn isLessLevel(a, b) ? a : b;\n}\n\nfunction isLevelAsymmetryAllowed(params = {})\n{\n\tconst level_asymmetry_allowed = params['level-asymmetry-allowed'];\n\n\treturn (\n\t\tlevel_asymmetry_allowed === 1 ||\n\t\tlevel_asymmetry_allowed === '1'\n\t);\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Consumer = void 0;\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst errors_1 = require(\"./errors\");\nconst logger = new Logger_1.Logger('Consumer');\nclass Consumer extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n    constructor({ id, localId, producerId, rtpReceiver, track, rtpParameters, appData }) {\n        super();\n        // Closed flag.\n        this._closed = false;\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor()');\n        this._id = id;\n        this._localId = localId;\n        this._producerId = producerId;\n        this._rtpReceiver = rtpReceiver;\n        this._track = track;\n        this._rtpParameters = rtpParameters;\n        this._paused = !track.enabled;\n        this._appData = appData || {};\n        this.onTrackEnded = this.onTrackEnded.bind(this);\n        this.handleTrack();\n    }\n    /**\n     * Consumer id.\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Local id.\n     */\n    get localId() {\n        return this._localId;\n    }\n    /**\n     * Associated Producer id.\n     */\n    get producerId() {\n        return this._producerId;\n    }\n    /**\n     * Whether the Consumer is closed.\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * Media kind.\n     */\n    get kind() {\n        return this._track.kind;\n    }\n    /**\n     * Associated RTCRtpReceiver.\n     */\n    get rtpReceiver() {\n        return this._rtpReceiver;\n    }\n    /**\n     * The associated track.\n     */\n    get track() {\n        return this._track;\n    }\n    /**\n     * RTP parameters.\n     */\n    get rtpParameters() {\n        return this._rtpParameters;\n    }\n    /**\n     * Whether the Consumer is paused.\n     */\n    get paused() {\n        return this._paused;\n    }\n    /**\n     * App custom data.\n     */\n    get appData() {\n        return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    set appData(appData) {\n        throw new Error('cannot override appData object');\n    }\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Closes the Consumer.\n     */\n    close() {\n        if (this._closed) {\n            return;\n        }\n        logger.debug('close()');\n        this._closed = true;\n        this.destroyTrack();\n        this.emit('@close');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Transport was closed.\n     */\n    transportClosed() {\n        if (this._closed) {\n            return;\n        }\n        logger.debug('transportClosed()');\n        this._closed = true;\n        this.destroyTrack();\n        this.safeEmit('transportclose');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Get associated RTCRtpReceiver stats.\n     */\n    async getStats() {\n        if (this._closed) {\n            throw new errors_1.InvalidStateError('closed');\n        }\n        return new Promise((resolve, reject) => {\n            this.safeEmit('@getstats', resolve, reject);\n        });\n    }\n    /**\n     * Pauses receiving media.\n     */\n    pause() {\n        logger.debug('pause()');\n        if (this._closed) {\n            logger.error('pause() | Consumer closed');\n            return;\n        }\n        if (this._paused) {\n            logger.debug('pause() | Consumer is already paused');\n            return;\n        }\n        this._paused = true;\n        this._track.enabled = false;\n        this.emit('@pause');\n        // Emit observer event.\n        this._observer.safeEmit('pause');\n    }\n    /**\n     * Resumes receiving media.\n     */\n    resume() {\n        logger.debug('resume()');\n        if (this._closed) {\n            logger.error('resume() | Consumer closed');\n            return;\n        }\n        if (!this._paused) {\n            logger.debug('resume() | Consumer is already resumed');\n            return;\n        }\n        this._paused = false;\n        this._track.enabled = true;\n        this.emit('@resume');\n        // Emit observer event.\n        this._observer.safeEmit('resume');\n    }\n    onTrackEnded() {\n        logger.debug('track \"ended\" event');\n        this.safeEmit('trackended');\n        // Emit observer event.\n        this._observer.safeEmit('trackended');\n    }\n    handleTrack() {\n        this._track.addEventListener('ended', this.onTrackEnded);\n    }\n    destroyTrack() {\n        try {\n            this._track.removeEventListener('ended', this.onTrackEnded);\n            this._track.stop();\n        }\n        catch (error) { }\n    }\n}\nexports.Consumer = Consumer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataConsumer = void 0;\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst logger = new Logger_1.Logger('DataConsumer');\nclass DataConsumer extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n    constructor({ id, dataProducerId, dataChannel, sctpStreamParameters, appData }) {\n        super();\n        // Closed flag.\n        this._closed = false;\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor()');\n        this._id = id;\n        this._dataProducerId = dataProducerId;\n        this._dataChannel = dataChannel;\n        this._sctpStreamParameters = sctpStreamParameters;\n        this._appData = appData || {};\n        this.handleDataChannel();\n    }\n    /**\n     * DataConsumer id.\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Associated DataProducer id.\n     */\n    get dataProducerId() {\n        return this._dataProducerId;\n    }\n    /**\n     * Whether the DataConsumer is closed.\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * SCTP stream parameters.\n     */\n    get sctpStreamParameters() {\n        return this._sctpStreamParameters;\n    }\n    /**\n     * DataChannel readyState.\n     */\n    get readyState() {\n        return this._dataChannel.readyState;\n    }\n    /**\n     * DataChannel label.\n     */\n    get label() {\n        return this._dataChannel.label;\n    }\n    /**\n     * DataChannel protocol.\n     */\n    get protocol() {\n        return this._dataChannel.protocol;\n    }\n    /**\n     * DataChannel binaryType.\n     */\n    get binaryType() {\n        return this._dataChannel.binaryType;\n    }\n    /**\n     * Set DataChannel binaryType.\n     */\n    set binaryType(binaryType) {\n        this._dataChannel.binaryType = binaryType;\n    }\n    /**\n     * App custom data.\n     */\n    get appData() {\n        return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    set appData(appData) {\n        throw new Error('cannot override appData object');\n    }\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Closes the DataConsumer.\n     */\n    close() {\n        if (this._closed) {\n            return;\n        }\n        logger.debug('close()');\n        this._closed = true;\n        this._dataChannel.close();\n        this.emit('@close');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Transport was closed.\n     */\n    transportClosed() {\n        if (this._closed) {\n            return;\n        }\n        logger.debug('transportClosed()');\n        this._closed = true;\n        this._dataChannel.close();\n        this.safeEmit('transportclose');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    handleDataChannel() {\n        this._dataChannel.addEventListener('open', () => {\n            if (this._closed) {\n                return;\n            }\n            logger.debug('DataChannel \"open\" event');\n            this.safeEmit('open');\n        });\n        this._dataChannel.addEventListener('error', (event) => {\n            if (this._closed) {\n                return;\n            }\n            let { error } = event;\n            if (!error) {\n                error = new Error('unknown DataChannel error');\n            }\n            if (error.errorDetail === 'sctp-failure') {\n                logger.error('DataChannel SCTP error [sctpCauseCode:%s]: %s', error.sctpCauseCode, error.message);\n            }\n            else {\n                logger.error('DataChannel \"error\" event: %o', error);\n            }\n            this.safeEmit('error', error);\n        });\n        this._dataChannel.addEventListener('close', () => {\n            if (this._closed) {\n                return;\n            }\n            logger.warn('DataChannel \"close\" event');\n            this._closed = true;\n            this.emit('@close');\n            this.safeEmit('close');\n            // Emit observer event.\n            this._observer.safeEmit('close');\n        });\n        this._dataChannel.addEventListener('message', (event) => {\n            if (this._closed) {\n                return;\n            }\n            this.safeEmit('message', event.data);\n        });\n    }\n}\nexports.DataConsumer = DataConsumer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataProducer = void 0;\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst errors_1 = require(\"./errors\");\nconst logger = new Logger_1.Logger('DataProducer');\nclass DataProducer extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n    constructor({ id, dataChannel, sctpStreamParameters, appData }) {\n        super();\n        // Closed flag.\n        this._closed = false;\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor()');\n        this._id = id;\n        this._dataChannel = dataChannel;\n        this._sctpStreamParameters = sctpStreamParameters;\n        this._appData = appData || {};\n        this.handleDataChannel();\n    }\n    /**\n     * DataProducer id.\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Whether the DataProducer is closed.\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * SCTP stream parameters.\n     */\n    get sctpStreamParameters() {\n        return this._sctpStreamParameters;\n    }\n    /**\n     * DataChannel readyState.\n     */\n    get readyState() {\n        return this._dataChannel.readyState;\n    }\n    /**\n     * DataChannel label.\n     */\n    get label() {\n        return this._dataChannel.label;\n    }\n    /**\n     * DataChannel protocol.\n     */\n    get protocol() {\n        return this._dataChannel.protocol;\n    }\n    /**\n     * DataChannel bufferedAmount.\n     */\n    get bufferedAmount() {\n        return this._dataChannel.bufferedAmount;\n    }\n    /**\n     * DataChannel bufferedAmountLowThreshold.\n     */\n    get bufferedAmountLowThreshold() {\n        return this._dataChannel.bufferedAmountLowThreshold;\n    }\n    /**\n     * Set DataChannel bufferedAmountLowThreshold.\n     */\n    set bufferedAmountLowThreshold(bufferedAmountLowThreshold) {\n        this._dataChannel.bufferedAmountLowThreshold = bufferedAmountLowThreshold;\n    }\n    /**\n     * App custom data.\n     */\n    get appData() {\n        return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    set appData(appData) {\n        throw new Error('cannot override appData object');\n    }\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Closes the DataProducer.\n     */\n    close() {\n        if (this._closed) {\n            return;\n        }\n        logger.debug('close()');\n        this._closed = true;\n        this._dataChannel.close();\n        this.emit('@close');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Transport was closed.\n     */\n    transportClosed() {\n        if (this._closed) {\n            return;\n        }\n        logger.debug('transportClosed()');\n        this._closed = true;\n        this._dataChannel.close();\n        this.safeEmit('transportclose');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Send a message.\n     *\n     * @param {String|Blob|ArrayBuffer|ArrayBufferView} data.\n     */\n    send(data) {\n        logger.debug('send()');\n        if (this._closed) {\n            throw new errors_1.InvalidStateError('closed');\n        }\n        this._dataChannel.send(data);\n    }\n    handleDataChannel() {\n        this._dataChannel.addEventListener('open', () => {\n            if (this._closed) {\n                return;\n            }\n            logger.debug('DataChannel \"open\" event');\n            this.safeEmit('open');\n        });\n        this._dataChannel.addEventListener('error', (event) => {\n            if (this._closed) {\n                return;\n            }\n            let { error } = event;\n            if (!error) {\n                error = new Error('unknown DataChannel error');\n            }\n            if (error.errorDetail === 'sctp-failure') {\n                logger.error('DataChannel SCTP error [sctpCauseCode:%s]: %s', error.sctpCauseCode, error.message);\n            }\n            else {\n                logger.error('DataChannel \"error\" event: %o', error);\n            }\n            this.safeEmit('error', error);\n        });\n        this._dataChannel.addEventListener('close', () => {\n            if (this._closed) {\n                return;\n            }\n            logger.warn('DataChannel \"close\" event');\n            this._closed = true;\n            this.emit('@close');\n            this.safeEmit('close');\n            // Emit observer event.\n            this._observer.safeEmit('close');\n        });\n        this._dataChannel.addEventListener('message', () => {\n            if (this._closed) {\n                return;\n            }\n            logger.warn('DataChannel \"message\" event in a DataProducer, message discarded');\n        });\n        this._dataChannel.addEventListener('bufferedamountlow', () => {\n            if (this._closed) {\n                return;\n            }\n            this.safeEmit('bufferedamountlow');\n        });\n    }\n}\nexports.DataProducer = DataProducer;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Device = exports.detectDevice = void 0;\nconst bowser_1 = __importDefault(require(\"bowser\"));\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst errors_1 = require(\"./errors\");\nconst utils = __importStar(require(\"./utils\"));\nconst ortc = __importStar(require(\"./ortc\"));\nconst Transport_1 = require(\"./Transport\");\nconst Chrome111_1 = require(\"./handlers/Chrome111\");\nconst Chrome74_1 = require(\"./handlers/Chrome74\");\nconst Chrome70_1 = require(\"./handlers/Chrome70\");\nconst Chrome67_1 = require(\"./handlers/Chrome67\");\nconst Chrome55_1 = require(\"./handlers/Chrome55\");\nconst Firefox60_1 = require(\"./handlers/Firefox60\");\nconst Safari12_1 = require(\"./handlers/Safari12\");\nconst Safari11_1 = require(\"./handlers/Safari11\");\nconst Edge11_1 = require(\"./handlers/Edge11\");\nconst ReactNativeUnifiedPlan_1 = require(\"./handlers/ReactNativeUnifiedPlan\");\nconst ReactNative_1 = require(\"./handlers/ReactNative\");\nconst logger = new Logger_1.Logger('Device');\nfunction detectDevice() {\n    // React-Native.\n    // NOTE: react-native-webrtc >= 1.75.0 is required.\n    // NOTE: react-native-webrtc with Unified Plan requires version >= 106.0.0.\n    if (typeof navigator === 'object' && navigator.product === 'ReactNative') {\n        if (typeof RTCPeerConnection === 'undefined') {\n            logger.warn('this._detectDevice() | unsupported react-native-webrtc without RTCPeerConnection, forgot to call registerGlobals()?');\n            return undefined;\n        }\n        if (typeof RTCRtpTransceiver !== 'undefined') {\n            logger.debug('this._detectDevice() | ReactNative UnifiedPlan handler chosen');\n            return 'ReactNativeUnifiedPlan';\n        }\n        else {\n            logger.debug('this._detectDevice() | ReactNative PlanB handler chosen');\n            return 'ReactNative';\n        }\n    }\n    // Browser.\n    else if (typeof navigator === 'object' && typeof navigator.userAgent === 'string') {\n        const ua = navigator.userAgent;\n        const browser = bowser_1.default.getParser(ua);\n        const engine = browser.getEngine();\n        // Chrome, Chromium, and Edge.\n        if (browser.satisfies({ chrome: '>=111', chromium: '>=111', 'microsoft edge': '>=111' })) {\n            return 'Chrome111';\n        }\n        else if (browser.satisfies({ chrome: '>=74', chromium: '>=74', 'microsoft edge': '>=88' })) {\n            return 'Chrome74';\n        }\n        else if (browser.satisfies({ chrome: '>=70', chromium: '>=70' })) {\n            return 'Chrome70';\n        }\n        else if (browser.satisfies({ chrome: '>=67', chromium: '>=67' })) {\n            return 'Chrome67';\n        }\n        else if (browser.satisfies({ chrome: '>=55', chromium: '>=55' })) {\n            return 'Chrome55';\n        }\n        // Firefox.\n        else if (browser.satisfies({ firefox: '>=60' })) {\n            return 'Firefox60';\n        }\n        // Firefox on iOS.\n        else if (browser.satisfies({ ios: { OS: '>=14.3', firefox: '>=30.0' } })) {\n            return 'Safari12';\n        }\n        // Safari with Unified-Plan support enabled.\n        else if (browser.satisfies({ safari: '>=12.0' }) &&\n            typeof RTCRtpTransceiver !== 'undefined' &&\n            RTCRtpTransceiver.prototype.hasOwnProperty('currentDirection')) {\n            return 'Safari12';\n        }\n        // Safari with Plab-B support.\n        else if (browser.satisfies({ safari: '>=11' })) {\n            return 'Safari11';\n        }\n        // Old Edge with ORTC support.\n        else if (browser.satisfies({ 'microsoft edge': '>=11' }) &&\n            browser.satisfies({ 'microsoft edge': '<=18' })) {\n            return 'Edge11';\n        }\n        // Best effort for Chromium based browsers.\n        else if (engine.name && engine.name.toLowerCase() === 'blink') {\n            const match = ua.match(/(?:(?:Chrome|Chromium))[ /](\\w+)/i);\n            if (match) {\n                const version = Number(match[1]);\n                if (version >= 111) {\n                    return 'Chrome111';\n                }\n                else if (version >= 74) {\n                    return 'Chrome74';\n                }\n                else if (version >= 70) {\n                    return 'Chrome70';\n                }\n                else if (version >= 67) {\n                    return 'Chrome67';\n                }\n                else {\n                    return 'Chrome55';\n                }\n            }\n            else {\n                return 'Chrome111';\n            }\n        }\n        // Unsupported browser.\n        else {\n            logger.warn('this._detectDevice() | browser not supported [name:%s, version:%s]', browser.getBrowserName(), browser.getBrowserVersion());\n            return undefined;\n        }\n    }\n    // Unknown device.\n    else {\n        logger.warn('this._detectDevice() | unknown device');\n        return undefined;\n    }\n}\nexports.detectDevice = detectDevice;\nclass Device {\n    /**\n     * Create a new Device to connect to mediasoup server.\n     *\n     * @throws {UnsupportedError} if device is not supported.\n     */\n    constructor({ handlerName, handlerFactory, Handler } = {}) {\n        // Loaded flag.\n        this._loaded = false;\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor()');\n        // Handle deprecated option.\n        if (Handler) {\n            logger.warn('constructor() | Handler option is DEPRECATED, use handlerName or handlerFactory instead');\n            if (typeof Handler === 'string') {\n                handlerName = Handler;\n            }\n            else {\n                throw new TypeError('non string Handler option no longer supported, use handlerFactory instead');\n            }\n        }\n        if (handlerName && handlerFactory) {\n            throw new TypeError('just one of handlerName or handlerInterface can be given');\n        }\n        if (handlerFactory) {\n            this._handlerFactory = handlerFactory;\n        }\n        else {\n            if (handlerName) {\n                logger.debug('constructor() | handler given: %s', handlerName);\n            }\n            else {\n                handlerName = detectDevice();\n                if (handlerName) {\n                    logger.debug('constructor() | detected handler: %s', handlerName);\n                }\n                else {\n                    throw new errors_1.UnsupportedError('device not supported');\n                }\n            }\n            switch (handlerName) {\n                case 'Chrome111':\n                    this._handlerFactory = Chrome111_1.Chrome111.createFactory();\n                    break;\n                case 'Chrome74':\n                    this._handlerFactory = Chrome74_1.Chrome74.createFactory();\n                    break;\n                case 'Chrome70':\n                    this._handlerFactory = Chrome70_1.Chrome70.createFactory();\n                    break;\n                case 'Chrome67':\n                    this._handlerFactory = Chrome67_1.Chrome67.createFactory();\n                    break;\n                case 'Chrome55':\n                    this._handlerFactory = Chrome55_1.Chrome55.createFactory();\n                    break;\n                case 'Firefox60':\n                    this._handlerFactory = Firefox60_1.Firefox60.createFactory();\n                    break;\n                case 'Safari12':\n                    this._handlerFactory = Safari12_1.Safari12.createFactory();\n                    break;\n                case 'Safari11':\n                    this._handlerFactory = Safari11_1.Safari11.createFactory();\n                    break;\n                case 'Edge11':\n                    this._handlerFactory = Edge11_1.Edge11.createFactory();\n                    break;\n                case 'ReactNativeUnifiedPlan':\n                    this._handlerFactory = ReactNativeUnifiedPlan_1.ReactNativeUnifiedPlan.createFactory();\n                    break;\n                case 'ReactNative':\n                    this._handlerFactory = ReactNative_1.ReactNative.createFactory();\n                    break;\n                default:\n                    throw new TypeError(`unknown handlerName \"${handlerName}\"`);\n            }\n        }\n        // Create a temporal handler to get its name.\n        const handler = this._handlerFactory();\n        this._handlerName = handler.name;\n        handler.close();\n        this._extendedRtpCapabilities = undefined;\n        this._recvRtpCapabilities = undefined;\n        this._canProduceByKind =\n            {\n                audio: false,\n                video: false\n            };\n        this._sctpCapabilities = undefined;\n    }\n    /**\n     * The RTC handler name.\n     */\n    get handlerName() {\n        return this._handlerName;\n    }\n    /**\n     * Whether the Device is loaded.\n     */\n    get loaded() {\n        return this._loaded;\n    }\n    /**\n     * RTP capabilities of the Device for receiving media.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     */\n    get rtpCapabilities() {\n        if (!this._loaded) {\n            throw new errors_1.InvalidStateError('not loaded');\n        }\n        return this._recvRtpCapabilities;\n    }\n    /**\n     * SCTP capabilities of the Device.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     */\n    get sctpCapabilities() {\n        if (!this._loaded) {\n            throw new errors_1.InvalidStateError('not loaded');\n        }\n        return this._sctpCapabilities;\n    }\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Initialize the Device.\n     */\n    async load({ routerRtpCapabilities }) {\n        logger.debug('load() [routerRtpCapabilities:%o]', routerRtpCapabilities);\n        routerRtpCapabilities = utils.clone(routerRtpCapabilities, undefined);\n        // Temporal handler to get its capabilities.\n        let handler;\n        try {\n            if (this._loaded) {\n                throw new errors_1.InvalidStateError('already loaded');\n            }\n            // This may throw.\n            ortc.validateRtpCapabilities(routerRtpCapabilities);\n            handler = this._handlerFactory();\n            const nativeRtpCapabilities = await handler.getNativeRtpCapabilities();\n            logger.debug('load() | got native RTP capabilities:%o', nativeRtpCapabilities);\n            // This may throw.\n            ortc.validateRtpCapabilities(nativeRtpCapabilities);\n            // Get extended RTP capabilities.\n            this._extendedRtpCapabilities = ortc.getExtendedRtpCapabilities(nativeRtpCapabilities, routerRtpCapabilities);\n            logger.debug('load() | got extended RTP capabilities:%o', this._extendedRtpCapabilities);\n            // Check whether we can produce audio/video.\n            this._canProduceByKind.audio =\n                ortc.canSend('audio', this._extendedRtpCapabilities);\n            this._canProduceByKind.video =\n                ortc.canSend('video', this._extendedRtpCapabilities);\n            // Generate our receiving RTP capabilities for receiving media.\n            this._recvRtpCapabilities =\n                ortc.getRecvRtpCapabilities(this._extendedRtpCapabilities);\n            // This may throw.\n            ortc.validateRtpCapabilities(this._recvRtpCapabilities);\n            logger.debug('load() | got receiving RTP capabilities:%o', this._recvRtpCapabilities);\n            // Generate our SCTP capabilities.\n            this._sctpCapabilities = await handler.getNativeSctpCapabilities();\n            logger.debug('load() | got native SCTP capabilities:%o', this._sctpCapabilities);\n            // This may throw.\n            ortc.validateSctpCapabilities(this._sctpCapabilities);\n            logger.debug('load() succeeded');\n            this._loaded = true;\n            handler.close();\n        }\n        catch (error) {\n            if (handler) {\n                handler.close();\n            }\n            throw error;\n        }\n    }\n    /**\n     * Whether we can produce audio/video.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     * @throws {TypeError} if wrong arguments.\n     */\n    canProduce(kind) {\n        if (!this._loaded) {\n            throw new errors_1.InvalidStateError('not loaded');\n        }\n        else if (kind !== 'audio' && kind !== 'video') {\n            throw new TypeError(`invalid kind \"${kind}\"`);\n        }\n        return this._canProduceByKind[kind];\n    }\n    /**\n     * Creates a Transport for sending media.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     * @throws {TypeError} if wrong arguments.\n     */\n    createSendTransport({ id, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, appData }) {\n        logger.debug('createSendTransport()');\n        return this.createTransport({\n            direction: 'send',\n            id: id,\n            iceParameters: iceParameters,\n            iceCandidates: iceCandidates,\n            dtlsParameters: dtlsParameters,\n            sctpParameters: sctpParameters,\n            iceServers: iceServers,\n            iceTransportPolicy: iceTransportPolicy,\n            additionalSettings: additionalSettings,\n            proprietaryConstraints: proprietaryConstraints,\n            appData: appData\n        });\n    }\n    /**\n     * Creates a Transport for receiving media.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     * @throws {TypeError} if wrong arguments.\n     */\n    createRecvTransport({ id, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, appData }) {\n        logger.debug('createRecvTransport()');\n        return this.createTransport({\n            direction: 'recv',\n            id: id,\n            iceParameters: iceParameters,\n            iceCandidates: iceCandidates,\n            dtlsParameters: dtlsParameters,\n            sctpParameters: sctpParameters,\n            iceServers: iceServers,\n            iceTransportPolicy: iceTransportPolicy,\n            additionalSettings: additionalSettings,\n            proprietaryConstraints: proprietaryConstraints,\n            appData: appData\n        });\n    }\n    createTransport({ direction, id, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, appData }) {\n        if (!this._loaded) {\n            throw new errors_1.InvalidStateError('not loaded');\n        }\n        else if (typeof id !== 'string') {\n            throw new TypeError('missing id');\n        }\n        else if (typeof iceParameters !== 'object') {\n            throw new TypeError('missing iceParameters');\n        }\n        else if (!Array.isArray(iceCandidates)) {\n            throw new TypeError('missing iceCandidates');\n        }\n        else if (typeof dtlsParameters !== 'object') {\n            throw new TypeError('missing dtlsParameters');\n        }\n        else if (sctpParameters && typeof sctpParameters !== 'object') {\n            throw new TypeError('wrong sctpParameters');\n        }\n        else if (appData && typeof appData !== 'object') {\n            throw new TypeError('if given, appData must be an object');\n        }\n        // Create a new Transport.\n        const transport = new Transport_1.Transport({\n            direction,\n            id,\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters,\n            iceServers,\n            iceTransportPolicy,\n            additionalSettings,\n            proprietaryConstraints,\n            appData,\n            handlerFactory: this._handlerFactory,\n            extendedRtpCapabilities: this._extendedRtpCapabilities,\n            canProduceByKind: this._canProduceByKind\n        });\n        // Emit observer event.\n        this._observer.safeEmit('newtransport', transport);\n        return transport;\n    }\n}\nexports.Device = Device;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnhancedEventEmitter = void 0;\nconst events_1 = require(\"events\");\nconst Logger_1 = require(\"./Logger\");\nconst logger = new Logger_1.Logger('EnhancedEventEmitter');\nclass EnhancedEventEmitter extends events_1.EventEmitter {\n    constructor() {\n        super();\n        this.setMaxListeners(Infinity);\n    }\n    emit(eventName, ...args) {\n        return super.emit(eventName, ...args);\n    }\n    /**\n     * Special addition to the EventEmitter API.\n     */\n    safeEmit(eventName, ...args) {\n        const numListeners = super.listenerCount(eventName);\n        try {\n            return super.emit(eventName, ...args);\n        }\n        catch (error) {\n            logger.error('safeEmit() | event listener threw an error [eventName:%s]:%o', eventName, error);\n            return Boolean(numListeners);\n        }\n    }\n    on(eventName, listener) {\n        super.on(eventName, listener);\n        return this;\n    }\n    off(eventName, listener) {\n        super.off(eventName, listener);\n        return this;\n    }\n    addListener(eventName, listener) {\n        super.on(eventName, listener);\n        return this;\n    }\n    prependListener(eventName, listener) {\n        super.prependListener(eventName, listener);\n        return this;\n    }\n    once(eventName, listener) {\n        super.once(eventName, listener);\n        return this;\n    }\n    prependOnceListener(eventName, listener) {\n        super.prependOnceListener(eventName, listener);\n        return this;\n    }\n    removeListener(eventName, listener) {\n        super.off(eventName, listener);\n        return this;\n    }\n    removeAllListeners(eventName) {\n        super.removeAllListeners(eventName);\n        return this;\n    }\n    listenerCount(eventName) {\n        return super.listenerCount(eventName);\n    }\n    listeners(eventName) {\n        return super.listeners(eventName);\n    }\n    rawListeners(eventName) {\n        return super.rawListeners(eventName);\n    }\n}\nexports.EnhancedEventEmitter = EnhancedEventEmitter;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst APP_NAME = 'mediasoup-client';\nclass Logger {\n    constructor(prefix) {\n        if (prefix) {\n            this._debug = (0, debug_1.default)(`${APP_NAME}:${prefix}`);\n            this._warn = (0, debug_1.default)(`${APP_NAME}:WARN:${prefix}`);\n            this._error = (0, debug_1.default)(`${APP_NAME}:ERROR:${prefix}`);\n        }\n        else {\n            this._debug = (0, debug_1.default)(APP_NAME);\n            this._warn = (0, debug_1.default)(`${APP_NAME}:WARN`);\n            this._error = (0, debug_1.default)(`${APP_NAME}:ERROR`);\n        }\n        /* eslint-disable no-console */\n        this._debug.log = console.info.bind(console);\n        this._warn.log = console.warn.bind(console);\n        this._error.log = console.error.bind(console);\n        /* eslint-enable no-console */\n    }\n    get debug() {\n        return this._debug;\n    }\n    get warn() {\n        return this._warn;\n    }\n    get error() {\n        return this._error;\n    }\n}\nexports.Logger = Logger;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Producer = void 0;\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst errors_1 = require(\"./errors\");\nconst logger = new Logger_1.Logger('Producer');\nclass Producer extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n    constructor({ id, localId, rtpSender, track, rtpParameters, stopTracks, disableTrackOnPause, zeroRtpOnPause, appData }) {\n        super();\n        // Closed flag.\n        this._closed = false;\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor()');\n        this._id = id;\n        this._localId = localId;\n        this._rtpSender = rtpSender;\n        this._track = track;\n        this._kind = track.kind;\n        this._rtpParameters = rtpParameters;\n        this._paused = disableTrackOnPause ? !track.enabled : false;\n        this._maxSpatialLayer = undefined;\n        this._stopTracks = stopTracks;\n        this._disableTrackOnPause = disableTrackOnPause;\n        this._zeroRtpOnPause = zeroRtpOnPause;\n        this._appData = appData || {};\n        this.onTrackEnded = this.onTrackEnded.bind(this);\n        // NOTE: Minor issue. If zeroRtpOnPause is true, we cannot emit the\n        // '@replacetrack' event here, so RTCRtpSender.track won't be null.\n        this.handleTrack();\n    }\n    /**\n     * Producer id.\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Local id.\n     */\n    get localId() {\n        return this._localId;\n    }\n    /**\n     * Whether the Producer is closed.\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * Media kind.\n     */\n    get kind() {\n        return this._kind;\n    }\n    /**\n     * Associated RTCRtpSender.\n     */\n    get rtpSender() {\n        return this._rtpSender;\n    }\n    /**\n     * The associated track.\n     */\n    get track() {\n        return this._track;\n    }\n    /**\n     * RTP parameters.\n     */\n    get rtpParameters() {\n        return this._rtpParameters;\n    }\n    /**\n     * Whether the Producer is paused.\n     */\n    get paused() {\n        return this._paused;\n    }\n    /**\n     * Max spatial layer.\n     *\n     * @type {Number | undefined}\n     */\n    get maxSpatialLayer() {\n        return this._maxSpatialLayer;\n    }\n    /**\n     * App custom data.\n     */\n    get appData() {\n        return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    set appData(appData) {\n        throw new Error('cannot override appData object');\n    }\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Closes the Producer.\n     */\n    close() {\n        if (this._closed) {\n            return;\n        }\n        logger.debug('close()');\n        this._closed = true;\n        this.destroyTrack();\n        this.emit('@close');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Transport was closed.\n     */\n    transportClosed() {\n        if (this._closed) {\n            return;\n        }\n        logger.debug('transportClosed()');\n        this._closed = true;\n        this.destroyTrack();\n        this.safeEmit('transportclose');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Get associated RTCRtpSender stats.\n     */\n    async getStats() {\n        if (this._closed) {\n            throw new errors_1.InvalidStateError('closed');\n        }\n        return new Promise((resolve, reject) => {\n            this.safeEmit('@getstats', resolve, reject);\n        });\n    }\n    /**\n     * Pauses sending media.\n     */\n    pause() {\n        logger.debug('pause()');\n        if (this._closed) {\n            logger.error('pause() | Producer closed');\n            return;\n        }\n        this._paused = true;\n        if (this._track && this._disableTrackOnPause) {\n            this._track.enabled = false;\n        }\n        if (this._zeroRtpOnPause) {\n            new Promise((resolve, reject) => {\n                this.safeEmit('@pause', resolve, reject);\n            }).catch(() => { });\n        }\n        // Emit observer event.\n        this._observer.safeEmit('pause');\n    }\n    /**\n     * Resumes sending media.\n     */\n    resume() {\n        logger.debug('resume()');\n        if (this._closed) {\n            logger.error('resume() | Producer closed');\n            return;\n        }\n        this._paused = false;\n        if (this._track && this._disableTrackOnPause) {\n            this._track.enabled = true;\n        }\n        if (this._zeroRtpOnPause) {\n            new Promise((resolve, reject) => {\n                this.safeEmit('@resume', resolve, reject);\n            }).catch(() => { });\n        }\n        // Emit observer event.\n        this._observer.safeEmit('resume');\n    }\n    /**\n     * Replaces the current track with a new one or null.\n     */\n    async replaceTrack({ track }) {\n        logger.debug('replaceTrack() [track:%o]', track);\n        if (this._closed) {\n            // This must be done here. Otherwise there is no chance to stop the given\n            // track.\n            if (track && this._stopTracks) {\n                try {\n                    track.stop();\n                }\n                catch (error) { }\n            }\n            throw new errors_1.InvalidStateError('closed');\n        }\n        else if (track && track.readyState === 'ended') {\n            throw new errors_1.InvalidStateError('track ended');\n        }\n        // Do nothing if this is the same track as the current handled one.\n        if (track === this._track) {\n            logger.debug('replaceTrack() | same track, ignored');\n            return;\n        }\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@replacetrack', track, resolve, reject);\n        });\n        // Destroy the previous track.\n        this.destroyTrack();\n        // Set the new track.\n        this._track = track;\n        // If this Producer was paused/resumed and the state of the new\n        // track does not match, fix it.\n        if (this._track && this._disableTrackOnPause) {\n            if (!this._paused) {\n                this._track.enabled = true;\n            }\n            else if (this._paused) {\n                this._track.enabled = false;\n            }\n        }\n        // Handle the effective track.\n        this.handleTrack();\n    }\n    /**\n     * Sets the video max spatial layer to be sent.\n     */\n    async setMaxSpatialLayer(spatialLayer) {\n        if (this._closed) {\n            throw new errors_1.InvalidStateError('closed');\n        }\n        else if (this._kind !== 'video') {\n            throw new errors_1.UnsupportedError('not a video Producer');\n        }\n        else if (typeof spatialLayer !== 'number') {\n            throw new TypeError('invalid spatialLayer');\n        }\n        if (spatialLayer === this._maxSpatialLayer) {\n            return;\n        }\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@setmaxspatiallayer', spatialLayer, resolve, reject);\n        }).catch(() => { });\n        this._maxSpatialLayer = spatialLayer;\n    }\n    async setRtpEncodingParameters(params) {\n        if (this._closed) {\n            throw new errors_1.InvalidStateError('closed');\n        }\n        else if (typeof params !== 'object') {\n            throw new TypeError('invalid params');\n        }\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@setrtpencodingparameters', params, resolve, reject);\n        });\n    }\n    onTrackEnded() {\n        logger.debug('track \"ended\" event');\n        this.safeEmit('trackended');\n        // Emit observer event.\n        this._observer.safeEmit('trackended');\n    }\n    handleTrack() {\n        if (!this._track) {\n            return;\n        }\n        this._track.addEventListener('ended', this.onTrackEnded);\n    }\n    destroyTrack() {\n        if (!this._track) {\n            return;\n        }\n        try {\n            this._track.removeEventListener('ended', this.onTrackEnded);\n            // Just stop the track unless the app set stopTracks: false.\n            if (this._stopTracks) {\n                this._track.stop();\n            }\n        }\n        catch (error) { }\n    }\n}\nexports.Producer = Producer;\n","\"use strict\";\n/**\n * The RTP capabilities define what mediasoup or an endpoint can receive at\n * media level.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transport = void 0;\nconst awaitqueue_1 = require(\"awaitqueue\");\nconst queue_microtask_1 = __importDefault(require(\"queue-microtask\"));\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst errors_1 = require(\"./errors\");\nconst utils = __importStar(require(\"./utils\"));\nconst ortc = __importStar(require(\"./ortc\"));\nconst Producer_1 = require(\"./Producer\");\nconst Consumer_1 = require(\"./Consumer\");\nconst DataProducer_1 = require(\"./DataProducer\");\nconst DataConsumer_1 = require(\"./DataConsumer\");\nconst logger = new Logger_1.Logger('Transport');\nclass ConsumerCreationTask {\n    constructor(consumerOptions) {\n        this.consumerOptions = consumerOptions;\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nclass Transport extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n    constructor({ direction, id, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, appData, handlerFactory, extendedRtpCapabilities, canProduceByKind }) {\n        super();\n        // Closed flag.\n        this._closed = false;\n        // Transport connection state.\n        this._connectionState = 'new';\n        // Map of Producers indexed by id.\n        this._producers = new Map();\n        // Map of Consumers indexed by id.\n        this._consumers = new Map();\n        // Map of DataProducers indexed by id.\n        this._dataProducers = new Map();\n        // Map of DataConsumers indexed by id.\n        this._dataConsumers = new Map();\n        // Whether the Consumer for RTP probation has been created.\n        this._probatorConsumerCreated = false;\n        // AwaitQueue instance to make async tasks happen sequentially.\n        this._awaitQueue = new awaitqueue_1.AwaitQueue();\n        // Consumer creation tasks awaiting to be processed.\n        this._pendingConsumerTasks = [];\n        // Consumer creation in progress flag.\n        this._consumerCreationInProgress = false;\n        // Consumers pending to be paused.\n        this._pendingPauseConsumers = new Map();\n        // Consumer pause in progress flag.\n        this._consumerPauseInProgress = false;\n        // Consumers pending to be resumed.\n        this._pendingResumeConsumers = new Map();\n        // Consumer resume in progress flag.\n        this._consumerResumeInProgress = false;\n        // Consumers pending to be closed.\n        this._pendingCloseConsumers = new Map();\n        // Consumer close in progress flag.\n        this._consumerCloseInProgress = false;\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor() [id:%s, direction:%s]', id, direction);\n        this._id = id;\n        this._direction = direction;\n        this._extendedRtpCapabilities = extendedRtpCapabilities;\n        this._canProduceByKind = canProduceByKind;\n        this._maxSctpMessageSize =\n            sctpParameters ? sctpParameters.maxMessageSize : null;\n        // Clone and sanitize additionalSettings.\n        additionalSettings = utils.clone(additionalSettings, {});\n        delete additionalSettings.iceServers;\n        delete additionalSettings.iceTransportPolicy;\n        delete additionalSettings.bundlePolicy;\n        delete additionalSettings.rtcpMuxPolicy;\n        delete additionalSettings.sdpSemantics;\n        this._handler = handlerFactory();\n        this._handler.run({\n            direction,\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters,\n            iceServers,\n            iceTransportPolicy,\n            additionalSettings,\n            proprietaryConstraints,\n            extendedRtpCapabilities\n        });\n        this._appData = appData || {};\n        this.handleHandler();\n    }\n    /**\n     * Transport id.\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Whether the Transport is closed.\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * Transport direction.\n     */\n    get direction() {\n        return this._direction;\n    }\n    /**\n     * RTC handler instance.\n     */\n    get handler() {\n        return this._handler;\n    }\n    /**\n     * Connection state.\n     */\n    get connectionState() {\n        return this._connectionState;\n    }\n    /**\n     * App custom data.\n     */\n    get appData() {\n        return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    set appData(appData) {\n        throw new Error('cannot override appData object');\n    }\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Close the Transport.\n     */\n    close() {\n        if (this._closed) {\n            return;\n        }\n        logger.debug('close()');\n        this._closed = true;\n        // Stop the AwaitQueue.\n        this._awaitQueue.stop();\n        // Close the handler.\n        this._handler.close();\n        // Close all Producers.\n        for (const producer of this._producers.values()) {\n            producer.transportClosed();\n        }\n        this._producers.clear();\n        // Close all Consumers.\n        for (const consumer of this._consumers.values()) {\n            consumer.transportClosed();\n        }\n        this._consumers.clear();\n        // Close all DataProducers.\n        for (const dataProducer of this._dataProducers.values()) {\n            dataProducer.transportClosed();\n        }\n        this._dataProducers.clear();\n        // Close all DataConsumers.\n        for (const dataConsumer of this._dataConsumers.values()) {\n            dataConsumer.transportClosed();\n        }\n        this._dataConsumers.clear();\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Get associated Transport (RTCPeerConnection) stats.\n     *\n     * @returns {RTCStatsReport}\n     */\n    async getStats() {\n        if (this._closed) {\n            throw new errors_1.InvalidStateError('closed');\n        }\n        return this._handler.getTransportStats();\n    }\n    /**\n     * Restart ICE connection.\n     */\n    async restartIce({ iceParameters }) {\n        logger.debug('restartIce()');\n        if (this._closed) {\n            throw new errors_1.InvalidStateError('closed');\n        }\n        else if (!iceParameters) {\n            throw new TypeError('missing iceParameters');\n        }\n        // Enqueue command.\n        return this._awaitQueue.push(async () => this._handler.restartIce(iceParameters), 'transport.restartIce()');\n    }\n    /**\n     * Update ICE servers.\n     */\n    async updateIceServers({ iceServers } = {}) {\n        logger.debug('updateIceServers()');\n        if (this._closed) {\n            throw new errors_1.InvalidStateError('closed');\n        }\n        else if (!Array.isArray(iceServers)) {\n            throw new TypeError('missing iceServers');\n        }\n        // Enqueue command.\n        return this._awaitQueue.push(async () => this._handler.updateIceServers(iceServers), 'transport.updateIceServers()');\n    }\n    /**\n     * Create a Producer.\n     */\n    async produce({ track, encodings, codecOptions, codec, stopTracks = true, disableTrackOnPause = true, zeroRtpOnPause = false, appData = {} } = {}) {\n        logger.debug('produce() [track:%o]', track);\n        if (this._closed) {\n            throw new errors_1.InvalidStateError('closed');\n        }\n        else if (!track) {\n            throw new TypeError('missing track');\n        }\n        else if (this._direction !== 'send') {\n            throw new errors_1.UnsupportedError('not a sending Transport');\n        }\n        else if (!this._canProduceByKind[track.kind]) {\n            throw new errors_1.UnsupportedError(`cannot produce ${track.kind}`);\n        }\n        else if (track.readyState === 'ended') {\n            throw new errors_1.InvalidStateError('track ended');\n        }\n        else if (this.listenerCount('connect') === 0 && this._connectionState === 'new') {\n            throw new TypeError('no \"connect\" listener set into this transport');\n        }\n        else if (this.listenerCount('produce') === 0) {\n            throw new TypeError('no \"produce\" listener set into this transport');\n        }\n        else if (appData && typeof appData !== 'object') {\n            throw new TypeError('if given, appData must be an object');\n        }\n        // Enqueue command.\n        return this._awaitQueue.push(async () => {\n            let normalizedEncodings;\n            if (encodings && !Array.isArray(encodings)) {\n                throw TypeError('encodings must be an array');\n            }\n            else if (encodings && encodings.length === 0) {\n                normalizedEncodings = undefined;\n            }\n            else if (encodings) {\n                normalizedEncodings = encodings\n                    .map((encoding) => {\n                    const normalizedEncoding = { active: true };\n                    if (encoding.active === false) {\n                        normalizedEncoding.active = false;\n                    }\n                    if (typeof encoding.dtx === 'boolean') {\n                        normalizedEncoding.dtx = encoding.dtx;\n                    }\n                    if (typeof encoding.scalabilityMode === 'string') {\n                        normalizedEncoding.scalabilityMode = encoding.scalabilityMode;\n                    }\n                    if (typeof encoding.scaleResolutionDownBy === 'number') {\n                        normalizedEncoding.scaleResolutionDownBy = encoding.scaleResolutionDownBy;\n                    }\n                    if (typeof encoding.maxBitrate === 'number') {\n                        normalizedEncoding.maxBitrate = encoding.maxBitrate;\n                    }\n                    if (typeof encoding.maxFramerate === 'number') {\n                        normalizedEncoding.maxFramerate = encoding.maxFramerate;\n                    }\n                    if (typeof encoding.adaptivePtime === 'boolean') {\n                        normalizedEncoding.adaptivePtime = encoding.adaptivePtime;\n                    }\n                    if (typeof encoding.priority === 'string') {\n                        normalizedEncoding.priority = encoding.priority;\n                    }\n                    if (typeof encoding.networkPriority === 'string') {\n                        normalizedEncoding.networkPriority = encoding.networkPriority;\n                    }\n                    return normalizedEncoding;\n                });\n            }\n            const { localId, rtpParameters, rtpSender } = await this._handler.send({\n                track,\n                encodings: normalizedEncodings,\n                codecOptions,\n                codec\n            });\n            try {\n                // This will fill rtpParameters's missing fields with default values.\n                ortc.validateRtpParameters(rtpParameters);\n                const { id } = await new Promise((resolve, reject) => {\n                    this.safeEmit('produce', {\n                        kind: track.kind,\n                        rtpParameters,\n                        appData\n                    }, resolve, reject);\n                });\n                const producer = new Producer_1.Producer({\n                    id,\n                    localId,\n                    rtpSender,\n                    track,\n                    rtpParameters,\n                    stopTracks,\n                    disableTrackOnPause,\n                    zeroRtpOnPause,\n                    appData\n                });\n                this._producers.set(producer.id, producer);\n                this.handleProducer(producer);\n                // Emit observer event.\n                this._observer.safeEmit('newproducer', producer);\n                return producer;\n            }\n            catch (error) {\n                this._handler.stopSending(localId)\n                    .catch(() => { });\n                throw error;\n            }\n        }, 'transport.produce()')\n            // This catch is needed to stop the given track if the command above\n            // failed due to closed Transport.\n            .catch((error) => {\n            if (stopTracks) {\n                try {\n                    track.stop();\n                }\n                catch (error2) { }\n            }\n            throw error;\n        });\n    }\n    /**\n     * Create a Consumer to consume a remote Producer.\n     */\n    async consume({ id, producerId, kind, rtpParameters, streamId, appData = {} }) {\n        logger.debug('consume()');\n        rtpParameters = utils.clone(rtpParameters, undefined);\n        if (this._closed) {\n            throw new errors_1.InvalidStateError('closed');\n        }\n        else if (this._direction !== 'recv') {\n            throw new errors_1.UnsupportedError('not a receiving Transport');\n        }\n        else if (typeof id !== 'string') {\n            throw new TypeError('missing id');\n        }\n        else if (typeof producerId !== 'string') {\n            throw new TypeError('missing producerId');\n        }\n        else if (kind !== 'audio' && kind !== 'video') {\n            throw new TypeError(`invalid kind '${kind}'`);\n        }\n        else if (this.listenerCount('connect') === 0 && this._connectionState === 'new') {\n            throw new TypeError('no \"connect\" listener set into this transport');\n        }\n        else if (appData && typeof appData !== 'object') {\n            throw new TypeError('if given, appData must be an object');\n        }\n        // Ensure the device can consume it.\n        const canConsume = ortc.canReceive(rtpParameters, this._extendedRtpCapabilities);\n        if (!canConsume) {\n            throw new errors_1.UnsupportedError('cannot consume this Producer');\n        }\n        const consumerCreationTask = new ConsumerCreationTask({\n            id,\n            producerId,\n            kind,\n            rtpParameters,\n            streamId,\n            appData\n        });\n        // Store the Consumer creation task.\n        this._pendingConsumerTasks.push(consumerCreationTask);\n        // There is no Consumer creation in progress, create it now.\n        (0, queue_microtask_1.default)(() => {\n            if (this._closed) {\n                throw new errors_1.InvalidStateError('closed');\n            }\n            if (this._consumerCreationInProgress === false) {\n                this.createPendingConsumers();\n            }\n        });\n        return consumerCreationTask.promise;\n    }\n    /**\n     * Create a DataProducer\n     */\n    async produceData({ ordered = true, maxPacketLifeTime, maxRetransmits, label = '', protocol = '', appData = {} } = {}) {\n        logger.debug('produceData()');\n        if (this._closed) {\n            throw new errors_1.InvalidStateError('closed');\n        }\n        else if (this._direction !== 'send') {\n            throw new errors_1.UnsupportedError('not a sending Transport');\n        }\n        else if (!this._maxSctpMessageSize) {\n            throw new errors_1.UnsupportedError('SCTP not enabled by remote Transport');\n        }\n        else if (this.listenerCount('connect') === 0 && this._connectionState === 'new') {\n            throw new TypeError('no \"connect\" listener set into this transport');\n        }\n        else if (this.listenerCount('producedata') === 0) {\n            throw new TypeError('no \"producedata\" listener set into this transport');\n        }\n        else if (appData && typeof appData !== 'object') {\n            throw new TypeError('if given, appData must be an object');\n        }\n        if (maxPacketLifeTime || maxRetransmits) {\n            ordered = false;\n        }\n        // Enqueue command.\n        return this._awaitQueue.push(async () => {\n            const { dataChannel, sctpStreamParameters } = await this._handler.sendDataChannel({\n                ordered,\n                maxPacketLifeTime,\n                maxRetransmits,\n                label,\n                protocol\n            });\n            // This will fill sctpStreamParameters's missing fields with default values.\n            ortc.validateSctpStreamParameters(sctpStreamParameters);\n            const { id } = await new Promise((resolve, reject) => {\n                this.safeEmit('producedata', {\n                    sctpStreamParameters,\n                    label,\n                    protocol,\n                    appData\n                }, resolve, reject);\n            });\n            const dataProducer = new DataProducer_1.DataProducer({ id, dataChannel, sctpStreamParameters, appData });\n            this._dataProducers.set(dataProducer.id, dataProducer);\n            this.handleDataProducer(dataProducer);\n            // Emit observer event.\n            this._observer.safeEmit('newdataproducer', dataProducer);\n            return dataProducer;\n        }, 'transport.produceData()');\n    }\n    /**\n     * Create a DataConsumer\n     */\n    async consumeData({ id, dataProducerId, sctpStreamParameters, label = '', protocol = '', appData = {} }) {\n        logger.debug('consumeData()');\n        sctpStreamParameters = utils.clone(sctpStreamParameters, undefined);\n        if (this._closed) {\n            throw new errors_1.InvalidStateError('closed');\n        }\n        else if (this._direction !== 'recv') {\n            throw new errors_1.UnsupportedError('not a receiving Transport');\n        }\n        else if (!this._maxSctpMessageSize) {\n            throw new errors_1.UnsupportedError('SCTP not enabled by remote Transport');\n        }\n        else if (typeof id !== 'string') {\n            throw new TypeError('missing id');\n        }\n        else if (typeof dataProducerId !== 'string') {\n            throw new TypeError('missing dataProducerId');\n        }\n        else if (this.listenerCount('connect') === 0 && this._connectionState === 'new') {\n            throw new TypeError('no \"connect\" listener set into this transport');\n        }\n        else if (appData && typeof appData !== 'object') {\n            throw new TypeError('if given, appData must be an object');\n        }\n        // This may throw.\n        ortc.validateSctpStreamParameters(sctpStreamParameters);\n        // Enqueue command.\n        return this._awaitQueue.push(async () => {\n            const { dataChannel } = await this._handler.receiveDataChannel({\n                sctpStreamParameters,\n                label,\n                protocol\n            });\n            const dataConsumer = new DataConsumer_1.DataConsumer({\n                id,\n                dataProducerId,\n                dataChannel,\n                sctpStreamParameters,\n                appData\n            });\n            this._dataConsumers.set(dataConsumer.id, dataConsumer);\n            this.handleDataConsumer(dataConsumer);\n            // Emit observer event.\n            this._observer.safeEmit('newdataconsumer', dataConsumer);\n            return dataConsumer;\n        }, 'transport.consumeData()');\n    }\n    // This method is guaranteed to never throw.\n    async createPendingConsumers() {\n        this._consumerCreationInProgress = true;\n        this._awaitQueue.push(async () => {\n            if (this._pendingConsumerTasks.length === 0) {\n                logger.debug('createPendingConsumers() | there is no Consumer to be created');\n                return;\n            }\n            const pendingConsumerTasks = [...this._pendingConsumerTasks];\n            // Clear pending Consumer tasks.\n            this._pendingConsumerTasks = [];\n            // Video Consumer in order to create the probator.\n            let videoConsumerForProbator = undefined;\n            // Fill options list.\n            const optionsList = [];\n            for (const task of pendingConsumerTasks) {\n                const { id, kind, rtpParameters, streamId } = task.consumerOptions;\n                optionsList.push({\n                    trackId: id,\n                    kind: kind,\n                    rtpParameters,\n                    streamId\n                });\n            }\n            try {\n                const results = await this._handler.receive(optionsList);\n                for (let idx = 0; idx < results.length; idx++) {\n                    const task = pendingConsumerTasks[idx];\n                    const result = results[idx];\n                    const { id, producerId, kind, rtpParameters, appData } = task.consumerOptions;\n                    const { localId, rtpReceiver, track } = result;\n                    const consumer = new Consumer_1.Consumer({\n                        id: id,\n                        localId,\n                        producerId: producerId,\n                        rtpReceiver,\n                        track,\n                        rtpParameters,\n                        appData\n                    });\n                    this._consumers.set(consumer.id, consumer);\n                    this.handleConsumer(consumer);\n                    // If this is the first video Consumer and the Consumer for RTP probation\n                    // has not yet been created, it's time to create it.\n                    if (!this._probatorConsumerCreated &&\n                        !videoConsumerForProbator && kind === 'video') {\n                        videoConsumerForProbator = consumer;\n                    }\n                    // Emit observer event.\n                    this._observer.safeEmit('newconsumer', consumer);\n                    task.resolve(consumer);\n                }\n            }\n            catch (error) {\n                for (const task of pendingConsumerTasks) {\n                    task.reject(error);\n                }\n            }\n            // If RTP probation must be handled, do it now.\n            if (videoConsumerForProbator) {\n                try {\n                    const probatorRtpParameters = ortc.generateProbatorRtpParameters(videoConsumerForProbator.rtpParameters);\n                    await this._handler.receive([{\n                            trackId: 'probator',\n                            kind: 'video',\n                            rtpParameters: probatorRtpParameters\n                        }]);\n                    logger.debug('createPendingConsumers() | Consumer for RTP probation created');\n                    this._probatorConsumerCreated = true;\n                }\n                catch (error) {\n                    logger.error('createPendingConsumers() | failed to create Consumer for RTP probation:%o', error);\n                }\n            }\n        }, 'transport.createPendingConsumers()')\n            .then(() => {\n            this._consumerCreationInProgress = false;\n            // There are pending Consumer tasks, enqueue their creation.\n            if (this._pendingConsumerTasks.length > 0) {\n                this.createPendingConsumers();\n            }\n        })\n            // NOTE: We only get here when the await queue is closed.\n            .catch(() => { });\n    }\n    pausePendingConsumers() {\n        this._consumerPauseInProgress = true;\n        this._awaitQueue.push(async () => {\n            if (this._pendingPauseConsumers.size === 0) {\n                logger.debug('pausePendingConsumers() | there is no Consumer to be paused');\n                return;\n            }\n            const pendingPauseConsumers = Array.from(this._pendingPauseConsumers.values());\n            // Clear pending pause Consumer map.\n            this._pendingPauseConsumers.clear();\n            try {\n                const localIds = pendingPauseConsumers\n                    .map((consumer) => consumer.localId);\n                await this._handler.pauseReceiving(localIds);\n            }\n            catch (error) {\n                logger.error('pausePendingConsumers() | failed to pause Consumers:', error);\n            }\n        }, 'transport.pausePendingConsumers')\n            .then(() => {\n            this._consumerPauseInProgress = false;\n            // There are pending Consumers to be paused, do it.\n            if (this._pendingPauseConsumers.size > 0) {\n                this.pausePendingConsumers();\n            }\n        })\n            // NOTE: We only get here when the await queue is closed.\n            .catch(() => { });\n    }\n    resumePendingConsumers() {\n        this._consumerResumeInProgress = true;\n        this._awaitQueue.push(async () => {\n            if (this._pendingResumeConsumers.size === 0) {\n                logger.debug('resumePendingConsumers() | there is no Consumer to be resumed');\n                return;\n            }\n            const pendingResumeConsumers = Array.from(this._pendingResumeConsumers.values());\n            // Clear pending resume Consumer map.\n            this._pendingResumeConsumers.clear();\n            try {\n                const localIds = pendingResumeConsumers\n                    .map((consumer) => consumer.localId);\n                await this._handler.resumeReceiving(localIds);\n            }\n            catch (error) {\n                logger.error('resumePendingConsumers() | failed to resume Consumers:', error);\n            }\n        }, 'transport.resumePendingConsumers')\n            .then(() => {\n            this._consumerResumeInProgress = false;\n            // There are pending Consumer to be resumed, do it.\n            if (this._pendingResumeConsumers.size > 0) {\n                this.resumePendingConsumers();\n            }\n        })\n            // NOTE: We only get here when the await queue is closed.\n            .catch(() => { });\n    }\n    closePendingConsumers() {\n        this._consumerCloseInProgress = true;\n        this._awaitQueue.push(async () => {\n            if (this._pendingCloseConsumers.size === 0) {\n                logger.debug('closePendingConsumers() | there is no Consumer to be closed');\n                return;\n            }\n            const pendingCloseConsumers = Array.from(this._pendingCloseConsumers.values());\n            // Clear pending close Consumer map.\n            this._pendingCloseConsumers.clear();\n            try {\n                await this._handler.stopReceiving(pendingCloseConsumers.map((consumer) => consumer.localId));\n            }\n            catch (error) {\n                logger.error('closePendingConsumers() | failed to close Consumers:', error);\n            }\n        }, 'transport.closePendingConsumers')\n            .then(() => {\n            this._consumerCloseInProgress = false;\n            // There are pending Consumer to be resumed, do it.\n            if (this._pendingCloseConsumers.size > 0) {\n                this.closePendingConsumers();\n            }\n        })\n            // NOTE: We only get here when the await queue is closed.\n            .catch(() => { });\n    }\n    handleHandler() {\n        const handler = this._handler;\n        handler.on('@connect', ({ dtlsParameters }, callback, errback) => {\n            if (this._closed) {\n                errback(new errors_1.InvalidStateError('closed'));\n                return;\n            }\n            this.safeEmit('connect', { dtlsParameters }, callback, errback);\n        });\n        handler.on('@connectionstatechange', (connectionState) => {\n            if (connectionState === this._connectionState) {\n                return;\n            }\n            logger.debug('connection state changed to %s', connectionState);\n            this._connectionState = connectionState;\n            if (!this._closed) {\n                this.safeEmit('connectionstatechange', connectionState);\n            }\n        });\n    }\n    handleProducer(producer) {\n        producer.on('@close', () => {\n            this._producers.delete(producer.id);\n            if (this._closed) {\n                return;\n            }\n            this._awaitQueue.push(async () => this._handler.stopSending(producer.localId), 'producer @close event')\n                .catch((error) => logger.warn('producer.close() failed:%o', error));\n        });\n        producer.on('@pause', (callback, errback) => {\n            this._awaitQueue.push(async () => this._handler.pauseSending(producer.localId), 'producer @pause event')\n                .then(callback)\n                .catch(errback);\n        });\n        producer.on('@resume', (callback, errback) => {\n            this._awaitQueue.push(async () => this._handler.resumeSending(producer.localId), 'producer @resume event')\n                .then(callback)\n                .catch(errback);\n        });\n        producer.on('@replacetrack', (track, callback, errback) => {\n            this._awaitQueue.push(async () => this._handler.replaceTrack(producer.localId, track), 'producer @replacetrack event')\n                .then(callback)\n                .catch(errback);\n        });\n        producer.on('@setmaxspatiallayer', (spatialLayer, callback, errback) => {\n            this._awaitQueue.push(async () => (this._handler.setMaxSpatialLayer(producer.localId, spatialLayer)), 'producer @setmaxspatiallayer event')\n                .then(callback)\n                .catch(errback);\n        });\n        producer.on('@setrtpencodingparameters', (params, callback, errback) => {\n            this._awaitQueue.push(async () => (this._handler.setRtpEncodingParameters(producer.localId, params)), 'producer @setrtpencodingparameters event')\n                .then(callback)\n                .catch(errback);\n        });\n        producer.on('@getstats', (callback, errback) => {\n            if (this._closed) {\n                return errback(new errors_1.InvalidStateError('closed'));\n            }\n            this._handler.getSenderStats(producer.localId)\n                .then(callback)\n                .catch(errback);\n        });\n    }\n    handleConsumer(consumer) {\n        consumer.on('@close', () => {\n            this._consumers.delete(consumer.id);\n            this._pendingPauseConsumers.delete(consumer.id);\n            this._pendingResumeConsumers.delete(consumer.id);\n            if (this._closed) {\n                return;\n            }\n            // Store the Consumer into the close list.\n            this._pendingCloseConsumers.set(consumer.id, consumer);\n            // There is no Consumer close in progress, do it now.\n            if (this._consumerCloseInProgress === false) {\n                this.closePendingConsumers();\n            }\n        });\n        consumer.on('@pause', () => {\n            // If Consumer is pending to be resumed, remove from pending resume list.\n            if (this._pendingResumeConsumers.has(consumer.id)) {\n                this._pendingResumeConsumers.delete(consumer.id);\n            }\n            // Store the Consumer into the pending list.\n            this._pendingPauseConsumers.set(consumer.id, consumer);\n            // There is no Consumer pause in progress, do it now.\n            (0, queue_microtask_1.default)(() => {\n                if (this._closed) {\n                    return;\n                }\n                if (this._consumerPauseInProgress === false) {\n                    this.pausePendingConsumers();\n                }\n            });\n        });\n        consumer.on('@resume', () => {\n            // If Consumer is pending to be paused, remove from pending pause list.\n            if (this._pendingPauseConsumers.has(consumer.id)) {\n                this._pendingPauseConsumers.delete(consumer.id);\n            }\n            // Store the Consumer into the pending list.\n            this._pendingResumeConsumers.set(consumer.id, consumer);\n            // There is no Consumer resume in progress, do it now.\n            (0, queue_microtask_1.default)(() => {\n                if (this._closed) {\n                    return;\n                }\n                if (this._consumerResumeInProgress === false) {\n                    this.resumePendingConsumers();\n                }\n            });\n        });\n        consumer.on('@getstats', (callback, errback) => {\n            if (this._closed) {\n                return errback(new errors_1.InvalidStateError('closed'));\n            }\n            this._handler.getReceiverStats(consumer.localId)\n                .then(callback)\n                .catch(errback);\n        });\n    }\n    handleDataProducer(dataProducer) {\n        dataProducer.on('@close', () => {\n            this._dataProducers.delete(dataProducer.id);\n        });\n    }\n    handleDataConsumer(dataConsumer) {\n        dataConsumer.on('@close', () => {\n            this._dataConsumers.delete(dataConsumer.id);\n        });\n    }\n}\nexports.Transport = Transport;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidStateError = exports.UnsupportedError = void 0;\n/**\n * Error indicating not support for something.\n */\nclass UnsupportedError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'UnsupportedError';\n        if (Error.hasOwnProperty('captureStackTrace')) // Just in V8.\n         {\n            // @ts-ignore\n            Error.captureStackTrace(this, UnsupportedError);\n        }\n        else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\nexports.UnsupportedError = UnsupportedError;\n/**\n * Error produced when calling a method in an invalid state.\n */\nclass InvalidStateError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'InvalidStateError';\n        if (Error.hasOwnProperty('captureStackTrace')) // Just in V8.\n         {\n            // @ts-ignore\n            Error.captureStackTrace(this, InvalidStateError);\n        }\n        else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\nexports.InvalidStateError = InvalidStateError;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Chrome111 = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpUnifiedPlanUtils = __importStar(require(\"./sdp/unifiedPlanUtils\"));\nconst ortcUtils = __importStar(require(\"./ortc/utils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst scalabilityModes_1 = require(\"../scalabilityModes\");\nconst logger = new Logger_1.Logger('Chrome111');\nconst SCTP_NUM_STREAMS = { OS: 1024, MIS: 1024 };\nclass Chrome111 extends HandlerInterface_1.HandlerInterface {\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Chrome111();\n    }\n    constructor() {\n        super();\n        // Map of RTCTransceivers indexed by MID.\n        this._mapMidTransceiver = new Map();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    get name() {\n        return 'Chrome111';\n    }\n    close() {\n        logger.debug('close()');\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n        this.emit('@close');\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'unified-plan'\n        });\n        try {\n            pc.addTransceiver('audio');\n            pc.addTransceiver('video');\n            const offer = await pc.createOffer();\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            // libwebrtc supports NACK for OPUS but doesn't announce it.\n            ortcUtils.addNackSuppportForOpus(nativeRtpCapabilities);\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        if (dtlsParameters.role && dtlsParameters.role !== 'auto') {\n            this._forcedLocalDtlsRole = dtlsParameters.role === 'server'\n                ? 'client'\n                : 'server';\n        }\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'unified-plan',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        if (this._pc.connectionState) {\n            this._pc.addEventListener('connectionstatechange', () => {\n                this.emit('@connectionstatechange', this._pc.connectionState);\n            });\n        }\n        else {\n            logger.warn('run() | pc.connectionState not supported, using pc.iceConnectionState');\n            this._pc.addEventListener('iceconnectionstatechange', () => {\n                switch (this._pc.iceConnectionState) {\n                    case 'checking':\n                        this.emit('@connectionstatechange', 'connecting');\n                        break;\n                    case 'connected':\n                    case 'completed':\n                        this.emit('@connectionstatechange', 'connected');\n                        break;\n                    case 'failed':\n                        this.emit('@connectionstatechange', 'failed');\n                        break;\n                    case 'disconnected':\n                        this.emit('@connectionstatechange', 'disconnected');\n                        break;\n                    case 'closed':\n                        this.emit('@connectionstatechange', 'closed');\n                        break;\n                }\n            });\n        }\n    }\n    async updateIceServers(iceServers) {\n        logger.debug('updateIceServers()');\n        const configuration = this._pc.getConfiguration();\n        configuration.iceServers = iceServers;\n        this._pc.setConfiguration(configuration);\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady) {\n            return;\n        }\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        var _a;\n        this.assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (encodings && encodings.length > 1) {\n            encodings.forEach((encoding, idx) => {\n                encoding.rid = `r${idx}`;\n            });\n            // Set rid and verify scalabilityMode in each encoding.\n            // NOTE: Even if WebRTC allows different scalabilityMode (different number\n            // of temporal layers) per simulcast stream, we need that those are the\n            // same in all them, so let's pick up the highest value.\n            // NOTE: If scalabilityMode is not given, Chrome will use L1T3.\n            let nextRid = 1;\n            let maxTemporalLayers = 1;\n            for (const encoding of encodings) {\n                const temporalLayers = encoding.scalabilityMode\n                    ? (0, scalabilityModes_1.parse)(encoding.scalabilityMode).temporalLayers\n                    : 3;\n                if (temporalLayers > maxTemporalLayers) {\n                    maxTemporalLayers = temporalLayers;\n                }\n            }\n            for (const encoding of encodings) {\n                encoding.rid = `r${nextRid++}`;\n                encoding.scalabilityMode = `L1T${maxTemporalLayers}`;\n            }\n        }\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs, codec);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs, codec);\n        const mediaSectionIdx = this._remoteSdp.getNextMediaSectionIdx();\n        const transceiver = this._pc.addTransceiver(track, {\n            direction: 'sendonly',\n            streams: [this._sendStream],\n            sendEncodings: encodings\n        });\n        const offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        // We can now get the transceiver.mid.\n        const localId = transceiver.mid;\n        // Set MID.\n        sendingRtpParameters.mid = localId;\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        const offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings by parsing the SDP offer if no encodings are given.\n        if (!encodings) {\n            sendingRtpParameters.encodings =\n                sdpUnifiedPlanUtils.getRtpEncodings({ offerMediaObject });\n        }\n        // Set RTP encodings by parsing the SDP offer and complete them with given\n        // one if just a single encoding has been given.\n        else if (encodings.length === 1) {\n            const newEncodings = sdpUnifiedPlanUtils.getRtpEncodings({ offerMediaObject });\n            Object.assign(newEncodings[0], encodings[0]);\n            sendingRtpParameters.encodings = newEncodings;\n        }\n        // Otherwise if more than 1 encoding are given use them verbatim.\n        else {\n            sendingRtpParameters.encodings = encodings;\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            reuseMid: mediaSectionIdx.reuseMid,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions,\n            extmapAllowMixed: true\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        // Store in the map.\n        this._mapMidTransceiver.set(localId, transceiver);\n        return {\n            localId,\n            rtpParameters: sendingRtpParameters,\n            rtpSender: transceiver.sender\n        };\n    }\n    async stopSending(localId) {\n        this.assertSendDirection();\n        logger.debug('stopSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        transceiver.sender.replaceTrack(null);\n        this._pc.removeTrack(transceiver.sender);\n        const mediaSectionClosed = this._remoteSdp.closeMediaSection(transceiver.mid);\n        if (mediaSectionClosed) {\n            try {\n                transceiver.stop();\n            }\n            catch (error) { }\n        }\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        this._mapMidTransceiver.delete(localId);\n    }\n    async pauseSending(localId) {\n        this.assertSendDirection();\n        logger.debug('pauseSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        transceiver.direction = 'inactive';\n        this._remoteSdp.pauseMediaSection(localId);\n        const offer = await this._pc.createOffer();\n        logger.debug('pauseSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('pauseSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async resumeSending(localId) {\n        this.assertSendDirection();\n        logger.debug('resumeSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        this._remoteSdp.resumeSendingMediaSection(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        transceiver.direction = 'sendonly';\n        const offer = await this._pc.createOffer();\n        logger.debug('resumeSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('resumeSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async replaceTrack(localId, track) {\n        this.assertSendDirection();\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        await transceiver.sender.replaceTrack(track);\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        this.assertSendDirection();\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            if (idx <= spatialLayer) {\n                encoding.active = true;\n            }\n            else {\n                encoding.active = false;\n            }\n        });\n        await transceiver.sender.setParameters(parameters);\n        this._remoteSdp.muxMediaSectionSimulcast(localId, parameters.encodings);\n        const offer = await this._pc.createOffer();\n        logger.debug('setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        this.assertSendDirection();\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await transceiver.sender.setParameters(parameters);\n        this._remoteSdp.muxMediaSectionSimulcast(localId, parameters.encodings);\n        const offer = await this._pc.createOffer();\n        logger.debug('setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async getSenderStats(localId) {\n        this.assertSendDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        return transceiver.sender.getStats();\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        var _a;\n        this.assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive(optionsList) {\n        var _a;\n        this.assertRecvDirection();\n        const results = [];\n        const mapLocalId = new Map();\n        for (const options of optionsList) {\n            const { trackId, kind, rtpParameters, streamId } = options;\n            logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n            const localId = rtpParameters.mid || String(this._mapMidTransceiver.size);\n            mapLocalId.set(trackId, localId);\n            this._remoteSdp.receive({\n                mid: localId,\n                kind,\n                offerRtpParameters: rtpParameters,\n                streamId: streamId || rtpParameters.rtcp.cname,\n                trackId\n            });\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        for (const options of optionsList) {\n            const { trackId, rtpParameters } = options;\n            const localId = mapLocalId.get(trackId);\n            const answerMediaObject = localSdpObject.media\n                .find((m) => String(m.mid) === localId);\n            // May need to modify codec parameters in the answer based on codec\n            // parameters in the offer.\n            sdpCommonUtils.applyCodecParameters({\n                offerRtpParameters: rtpParameters,\n                answerMediaObject\n            });\n        }\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        for (const options of optionsList) {\n            const { trackId } = options;\n            const localId = mapLocalId.get(trackId);\n            const transceiver = this._pc.getTransceivers()\n                .find((t) => t.mid === localId);\n            if (!transceiver) {\n                throw new Error('new RTCRtpTransceiver not found');\n            }\n            else {\n                // Store in the map.\n                this._mapMidTransceiver.set(localId, transceiver);\n                results.push({\n                    localId,\n                    track: transceiver.receiver.track,\n                    rtpReceiver: transceiver.receiver\n                });\n            }\n        }\n        return results;\n    }\n    async stopReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('stopReceiving() [localId:%s]', localId);\n            const transceiver = this._mapMidTransceiver.get(localId);\n            if (!transceiver) {\n                throw new Error('associated RTCRtpTransceiver not found');\n            }\n            this._remoteSdp.closeMediaSection(transceiver.mid);\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        for (const localId of localIds) {\n            this._mapMidTransceiver.delete(localId);\n        }\n    }\n    async pauseReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('pauseReceiving() [localId:%s]', localId);\n            const transceiver = this._mapMidTransceiver.get(localId);\n            if (!transceiver) {\n                throw new Error('associated RTCRtpTransceiver not found');\n            }\n            transceiver.direction = 'inactive';\n            this._remoteSdp.pauseMediaSection(localId);\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('pauseReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async resumeReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('resumeReceiving() [localId:%s]', localId);\n            const transceiver = this._mapMidTransceiver.get(localId);\n            if (!transceiver) {\n                throw new Error('associated RTCRtpTransceiver not found');\n            }\n            transceiver.direction = 'recvonly';\n            this._remoteSdp.resumeReceivingMediaSection(localId);\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('resumeReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async getReceiverStats(localId) {\n        this.assertRecvDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        return transceiver.receiver.getStats();\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        var _a;\n        this.assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation();\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject) {\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        }\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@connect', { dtlsParameters }, resolve, reject);\n        });\n        this._transportReady = true;\n    }\n    assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.Chrome111 = Chrome111;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Chrome55 = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst errors_1 = require(\"../errors\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpPlanBUtils = __importStar(require(\"./sdp/planBUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst logger = new Logger_1.Logger('Chrome55');\nconst SCTP_NUM_STREAMS = { OS: 1024, MIS: 1024 };\nclass Chrome55 extends HandlerInterface_1.HandlerInterface {\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Chrome55();\n    }\n    constructor() {\n        super();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Map of sending MediaStreamTracks indexed by localId.\n        this._mapSendLocalIdTrack = new Map();\n        // Next sending localId.\n        this._nextSendLocalId = 0;\n        // Map of MID, RTP parameters and RTCRtpReceiver indexed by local id.\n        // Value is an Object with mid, rtpParameters and rtpReceiver.\n        this._mapRecvLocalIdInfo = new Map();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    get name() {\n        return 'Chrome55';\n    }\n    close() {\n        logger.debug('close()');\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n        this.emit('@close');\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'plan-b'\n        });\n        try {\n            const offer = await pc.createOffer({\n                offerToReceiveAudio: true,\n                offerToReceiveVideo: true\n            });\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters,\n            planB: true\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        if (dtlsParameters.role && dtlsParameters.role !== 'auto') {\n            this._forcedLocalDtlsRole = dtlsParameters.role === 'server'\n                ? 'client'\n                : 'server';\n        }\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'plan-b',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        if (this._pc.connectionState) {\n            this._pc.addEventListener('connectionstatechange', () => {\n                this.emit('@connectionstatechange', this._pc.connectionState);\n            });\n        }\n        else {\n            this._pc.addEventListener('iceconnectionstatechange', () => {\n                logger.warn('run() | pc.connectionState not supported, using pc.iceConnectionState');\n                switch (this._pc.iceConnectionState) {\n                    case 'checking':\n                        this.emit('@connectionstatechange', 'connecting');\n                        break;\n                    case 'connected':\n                    case 'completed':\n                        this.emit('@connectionstatechange', 'connected');\n                        break;\n                    case 'failed':\n                        this.emit('@connectionstatechange', 'failed');\n                        break;\n                    case 'disconnected':\n                        this.emit('@connectionstatechange', 'disconnected');\n                        break;\n                    case 'closed':\n                        this.emit('@connectionstatechange', 'closed');\n                        break;\n                }\n            });\n        }\n    }\n    async updateIceServers(iceServers) {\n        logger.debug('updateIceServers()');\n        const configuration = this._pc.getConfiguration();\n        configuration.iceServers = iceServers;\n        this._pc.setConfiguration(configuration);\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady) {\n            return;\n        }\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        var _a;\n        this.assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (codec) {\n            logger.warn('send() | codec selection is not available in %s handler', this.name);\n        }\n        this._sendStream.addTrack(track);\n        this._pc.addStream(this._sendStream);\n        let offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        let offerMediaObject;\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs);\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        if (track.kind === 'video' && encodings && encodings.length > 1) {\n            logger.debug('send() | enabling simulcast');\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media.find((m) => m.type === 'video');\n            sdpPlanBUtils.addLegacySimulcast({\n                offerMediaObject,\n                track,\n                numStreams: encodings.length\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        offerMediaObject = localSdpObject.media\n            .find((m) => m.type === track.kind);\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings.\n        sendingRtpParameters.encodings =\n            sdpPlanBUtils.getRtpEncodings({ offerMediaObject, track });\n        // Complete encodings with given values.\n        if (encodings) {\n            for (let idx = 0; idx < sendingRtpParameters.encodings.length; ++idx) {\n                if (encodings[idx]) {\n                    Object.assign(sendingRtpParameters.encodings[idx], encodings[idx]);\n                }\n            }\n        }\n        // If VP8 and there is effective simulcast, add scalabilityMode to each\n        // encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8') {\n            for (const encoding of sendingRtpParameters.encodings) {\n                encoding.scalabilityMode = 'L1T3';\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        const localId = String(this._nextSendLocalId);\n        this._nextSendLocalId++;\n        // Insert into the map.\n        this._mapSendLocalIdTrack.set(localId, track);\n        return {\n            localId: localId,\n            rtpParameters: sendingRtpParameters\n        };\n    }\n    async stopSending(localId) {\n        this.assertSendDirection();\n        logger.debug('stopSending() [localId:%s]', localId);\n        const track = this._mapSendLocalIdTrack.get(localId);\n        if (!track) {\n            throw new Error('track not found');\n        }\n        this._mapSendLocalIdTrack.delete(localId);\n        this._sendStream.removeTrack(track);\n        this._pc.addStream(this._sendStream);\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        try {\n            await this._pc.setLocalDescription(offer);\n        }\n        catch (error) {\n            // NOTE: If there are no sending tracks, setLocalDescription() will fail with\n            // \"Failed to create channels\". If so, ignore it.\n            if (this._sendStream.getTracks().length === 0) {\n                logger.warn('stopSending() | ignoring expected error due no sending tracks: %s', error.toString());\n                return;\n            }\n            throw error;\n        }\n        if (this._pc.signalingState === 'stable') {\n            return;\n        }\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async pauseSending(localId) {\n        // Unimplemented.\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async resumeSending(localId) {\n        // Unimplemented.\n    }\n    async replaceTrack(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localId, track) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        throw new errors_1.UnsupportedError(' not implemented');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async setRtpEncodingParameters(localId, params) {\n        throw new errors_1.UnsupportedError('not supported');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async getSenderStats(localId) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        var _a;\n        this.assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmitTime: maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive(optionsList) {\n        var _a;\n        this.assertRecvDirection();\n        const results = [];\n        for (const options of optionsList) {\n            const { trackId, kind, rtpParameters, streamId } = options;\n            logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n            const mid = kind;\n            this._remoteSdp.receive({\n                mid,\n                kind,\n                offerRtpParameters: rtpParameters,\n                streamId: streamId || rtpParameters.rtcp.cname,\n                trackId\n            });\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        for (const options of optionsList) {\n            const { kind, rtpParameters } = options;\n            const mid = kind;\n            const answerMediaObject = localSdpObject.media\n                .find((m) => String(m.mid) === mid);\n            // May need to modify codec parameters in the answer based on codec\n            // parameters in the offer.\n            sdpCommonUtils.applyCodecParameters({\n                offerRtpParameters: rtpParameters,\n                answerMediaObject\n            });\n        }\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        for (const options of optionsList) {\n            const { kind, trackId, rtpParameters } = options;\n            const mid = kind;\n            const localId = trackId;\n            const streamId = options.streamId || rtpParameters.rtcp.cname;\n            const stream = this._pc.getRemoteStreams()\n                .find((s) => s.id === streamId);\n            const track = stream.getTrackById(localId);\n            if (!track) {\n                throw new Error('remote track not found');\n            }\n            // Insert into the map.\n            this._mapRecvLocalIdInfo.set(localId, { mid, rtpParameters });\n            results.push({ localId, track });\n        }\n        return results;\n    }\n    async stopReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('stopReceiving() [localId:%s]', localId);\n            const { mid, rtpParameters } = this._mapRecvLocalIdInfo.get(localId) || {};\n            // Remove from the map.\n            this._mapRecvLocalIdInfo.delete(localId);\n            this._remoteSdp.planBStopReceiving({ mid: mid, offerRtpParameters: rtpParameters });\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async pauseReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localIds) {\n        // Unimplemented.\n    }\n    async resumeReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localIds) {\n        // Unimplemented.\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async getReceiverStats(localId) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        var _a;\n        this.assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmitTime: maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation({ oldDataChannelSpec: true });\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject) {\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        }\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@connect', { dtlsParameters }, resolve, reject);\n        });\n        this._transportReady = true;\n    }\n    assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.Chrome55 = Chrome55;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Chrome67 = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpPlanBUtils = __importStar(require(\"./sdp/planBUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst logger = new Logger_1.Logger('Chrome67');\nconst SCTP_NUM_STREAMS = { OS: 1024, MIS: 1024 };\nclass Chrome67 extends HandlerInterface_1.HandlerInterface {\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Chrome67();\n    }\n    constructor() {\n        super();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Map of RTCRtpSender indexed by localId.\n        this._mapSendLocalIdRtpSender = new Map();\n        // Next sending localId.\n        this._nextSendLocalId = 0;\n        // Map of MID, RTP parameters and RTCRtpReceiver indexed by local id.\n        // Value is an Object with mid, rtpParameters and rtpReceiver.\n        this._mapRecvLocalIdInfo = new Map();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    get name() {\n        return 'Chrome67';\n    }\n    close() {\n        logger.debug('close()');\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n        this.emit('@close');\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'plan-b'\n        });\n        try {\n            const offer = await pc.createOffer({\n                offerToReceiveAudio: true,\n                offerToReceiveVideo: true\n            });\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters,\n            planB: true\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        if (dtlsParameters.role && dtlsParameters.role !== 'auto') {\n            this._forcedLocalDtlsRole = dtlsParameters.role === 'server'\n                ? 'client'\n                : 'server';\n        }\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'plan-b',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        if (this._pc.connectionState) {\n            this._pc.addEventListener('connectionstatechange', () => {\n                this.emit('@connectionstatechange', this._pc.connectionState);\n            });\n        }\n        else {\n            this._pc.addEventListener('iceconnectionstatechange', () => {\n                logger.warn('run() | pc.connectionState not supported, using pc.iceConnectionState');\n                switch (this._pc.iceConnectionState) {\n                    case 'checking':\n                        this.emit('@connectionstatechange', 'connecting');\n                        break;\n                    case 'connected':\n                    case 'completed':\n                        this.emit('@connectionstatechange', 'connected');\n                        break;\n                    case 'failed':\n                        this.emit('@connectionstatechange', 'failed');\n                        break;\n                    case 'disconnected':\n                        this.emit('@connectionstatechange', 'disconnected');\n                        break;\n                    case 'closed':\n                        this.emit('@connectionstatechange', 'closed');\n                        break;\n                }\n            });\n        }\n    }\n    async updateIceServers(iceServers) {\n        logger.debug('updateIceServers()');\n        const configuration = this._pc.getConfiguration();\n        configuration.iceServers = iceServers;\n        this._pc.setConfiguration(configuration);\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady) {\n            return;\n        }\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        var _a;\n        this.assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (codec) {\n            logger.warn('send() | codec selection is not available in %s handler', this.name);\n        }\n        this._sendStream.addTrack(track);\n        this._pc.addTrack(track, this._sendStream);\n        let offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        let offerMediaObject;\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs);\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        if (track.kind === 'video' && encodings && encodings.length > 1) {\n            logger.debug('send() | enabling simulcast');\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'video');\n            sdpPlanBUtils.addLegacySimulcast({\n                offerMediaObject,\n                track,\n                numStreams: encodings.length\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        offerMediaObject = localSdpObject.media\n            .find((m) => m.type === track.kind);\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings.\n        sendingRtpParameters.encodings =\n            sdpPlanBUtils.getRtpEncodings({ offerMediaObject, track });\n        // Complete encodings with given values.\n        if (encodings) {\n            for (let idx = 0; idx < sendingRtpParameters.encodings.length; ++idx) {\n                if (encodings[idx]) {\n                    Object.assign(sendingRtpParameters.encodings[idx], encodings[idx]);\n                }\n            }\n        }\n        // If VP8 and there is effective simulcast, add scalabilityMode to each\n        // encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8') {\n            for (const encoding of sendingRtpParameters.encodings) {\n                encoding.scalabilityMode = 'L1T3';\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        const localId = String(this._nextSendLocalId);\n        this._nextSendLocalId++;\n        const rtpSender = this._pc.getSenders()\n            .find((s) => s.track === track);\n        // Insert into the map.\n        this._mapSendLocalIdRtpSender.set(localId, rtpSender);\n        return {\n            localId: localId,\n            rtpParameters: sendingRtpParameters,\n            rtpSender\n        };\n    }\n    async stopSending(localId) {\n        this.assertSendDirection();\n        logger.debug('stopSending() [localId:%s]', localId);\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender) {\n            throw new Error('associated RTCRtpSender not found');\n        }\n        this._pc.removeTrack(rtpSender);\n        if (rtpSender.track) {\n            this._sendStream.removeTrack(rtpSender.track);\n        }\n        this._mapSendLocalIdRtpSender.delete(localId);\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        try {\n            await this._pc.setLocalDescription(offer);\n        }\n        catch (error) {\n            // NOTE: If there are no sending tracks, setLocalDescription() will fail with\n            // \"Failed to create channels\". If so, ignore it.\n            if (this._sendStream.getTracks().length === 0) {\n                logger.warn('stopSending() | ignoring expected error due no sending tracks: %s', error.toString());\n                return;\n            }\n            throw error;\n        }\n        if (this._pc.signalingState === 'stable') {\n            return;\n        }\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async pauseSending(localId) {\n        // Unimplemented.\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async resumeSending(localId) {\n        // Unimplemented.\n    }\n    async replaceTrack(localId, track) {\n        this.assertSendDirection();\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender) {\n            throw new Error('associated RTCRtpSender not found');\n        }\n        const oldTrack = rtpSender.track;\n        await rtpSender.replaceTrack(track);\n        // Remove the old track from the local stream.\n        if (oldTrack) {\n            this._sendStream.removeTrack(oldTrack);\n        }\n        // Add the new track to the local stream.\n        if (track) {\n            this._sendStream.addTrack(track);\n        }\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        this.assertSendDirection();\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender) {\n            throw new Error('associated RTCRtpSender not found');\n        }\n        const parameters = rtpSender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            if (idx <= spatialLayer) {\n                encoding.active = true;\n            }\n            else {\n                encoding.active = false;\n            }\n        });\n        await rtpSender.setParameters(parameters);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        this.assertSendDirection();\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender) {\n            throw new Error('associated RTCRtpSender not found');\n        }\n        const parameters = rtpSender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await rtpSender.setParameters(parameters);\n    }\n    async getSenderStats(localId) {\n        this.assertSendDirection();\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender) {\n            throw new Error('associated RTCRtpSender not found');\n        }\n        return rtpSender.getStats();\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        var _a;\n        this.assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmitTime: maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive(optionsList) {\n        var _a;\n        this.assertRecvDirection();\n        const results = [];\n        for (const options of optionsList) {\n            const { trackId, kind, rtpParameters, streamId } = options;\n            logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n            const mid = kind;\n            this._remoteSdp.receive({\n                mid,\n                kind,\n                offerRtpParameters: rtpParameters,\n                streamId: streamId || rtpParameters.rtcp.cname,\n                trackId\n            });\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        for (const options of optionsList) {\n            const { kind, rtpParameters } = options;\n            const mid = kind;\n            const answerMediaObject = localSdpObject.media\n                .find((m) => String(m.mid) === mid);\n            // May need to modify codec parameters in the answer based on codec\n            // parameters in the offer.\n            sdpCommonUtils.applyCodecParameters({\n                offerRtpParameters: rtpParameters,\n                answerMediaObject\n            });\n        }\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        for (const options of optionsList) {\n            const { kind, trackId, rtpParameters } = options;\n            const localId = trackId;\n            const mid = kind;\n            const rtpReceiver = this._pc.getReceivers()\n                .find((r) => r.track && r.track.id === localId);\n            if (!rtpReceiver) {\n                throw new Error('new RTCRtpReceiver not');\n            }\n            // Insert into the map.\n            this._mapRecvLocalIdInfo.set(localId, { mid, rtpParameters, rtpReceiver });\n            results.push({\n                localId,\n                track: rtpReceiver.track,\n                rtpReceiver\n            });\n        }\n        return results;\n    }\n    async stopReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('stopReceiving() [localId:%s]', localId);\n            const { mid, rtpParameters } = this._mapRecvLocalIdInfo.get(localId) || {};\n            // Remove from the map.\n            this._mapRecvLocalIdInfo.delete(localId);\n            this._remoteSdp.planBStopReceiving({ mid: mid, offerRtpParameters: rtpParameters });\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async pauseReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localIds) {\n        // Unimplemented.\n    }\n    async resumeReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localIds) {\n        // Unimplemented.\n    }\n    async getReceiverStats(localId) {\n        this.assertRecvDirection();\n        const { rtpReceiver } = this._mapRecvLocalIdInfo.get(localId) || {};\n        if (!rtpReceiver) {\n            throw new Error('associated RTCRtpReceiver not found');\n        }\n        return rtpReceiver.getStats();\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        var _a;\n        this.assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmitTime: maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation({ oldDataChannelSpec: true });\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject) {\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        }\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@connect', { dtlsParameters }, resolve, reject);\n        });\n        this._transportReady = true;\n    }\n    assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.Chrome67 = Chrome67;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Chrome70 = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpUnifiedPlanUtils = __importStar(require(\"./sdp/unifiedPlanUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst scalabilityModes_1 = require(\"../scalabilityModes\");\nconst logger = new Logger_1.Logger('Chrome70');\nconst SCTP_NUM_STREAMS = { OS: 1024, MIS: 1024 };\nclass Chrome70 extends HandlerInterface_1.HandlerInterface {\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Chrome70();\n    }\n    constructor() {\n        super();\n        // Map of RTCTransceivers indexed by MID.\n        this._mapMidTransceiver = new Map();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    get name() {\n        return 'Chrome70';\n    }\n    close() {\n        logger.debug('close()');\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n        this.emit('@close');\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'unified-plan'\n        });\n        try {\n            pc.addTransceiver('audio');\n            pc.addTransceiver('video');\n            const offer = await pc.createOffer();\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        if (dtlsParameters.role && dtlsParameters.role !== 'auto') {\n            this._forcedLocalDtlsRole = dtlsParameters.role === 'server'\n                ? 'client'\n                : 'server';\n        }\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'unified-plan',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        if (this._pc.connectionState) {\n            this._pc.addEventListener('connectionstatechange', () => {\n                this.emit('@connectionstatechange', this._pc.connectionState);\n            });\n        }\n        else {\n            this._pc.addEventListener('iceconnectionstatechange', () => {\n                logger.warn('run() | pc.connectionState not supported, using pc.iceConnectionState');\n                switch (this._pc.iceConnectionState) {\n                    case 'checking':\n                        this.emit('@connectionstatechange', 'connecting');\n                        break;\n                    case 'connected':\n                    case 'completed':\n                        this.emit('@connectionstatechange', 'connected');\n                        break;\n                    case 'failed':\n                        this.emit('@connectionstatechange', 'failed');\n                        break;\n                    case 'disconnected':\n                        this.emit('@connectionstatechange', 'disconnected');\n                        break;\n                    case 'closed':\n                        this.emit('@connectionstatechange', 'closed');\n                        break;\n                }\n            });\n        }\n    }\n    async updateIceServers(iceServers) {\n        logger.debug('updateIceServers()');\n        const configuration = this._pc.getConfiguration();\n        configuration.iceServers = iceServers;\n        this._pc.setConfiguration(configuration);\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady) {\n            return;\n        }\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        var _a;\n        this.assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs, codec);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs, codec);\n        const mediaSectionIdx = this._remoteSdp.getNextMediaSectionIdx();\n        const transceiver = this._pc.addTransceiver(track, { direction: 'sendonly', streams: [this._sendStream] });\n        let offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        let offerMediaObject;\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        if (encodings && encodings.length > 1) {\n            logger.debug('send() | enabling legacy simulcast');\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n            sdpUnifiedPlanUtils.addLegacySimulcast({\n                offerMediaObject,\n                numStreams: encodings.length\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        // Special case for VP9 with SVC.\n        let hackVp9Svc = false;\n        const layers = (0, scalabilityModes_1.parse)((encodings || [{}])[0].scalabilityMode);\n        if (encodings &&\n            encodings.length === 1 &&\n            layers.spatialLayers > 1 &&\n            sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp9') {\n            logger.debug('send() | enabling legacy simulcast for VP9 SVC');\n            hackVp9Svc = true;\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n            sdpUnifiedPlanUtils.addLegacySimulcast({\n                offerMediaObject,\n                numStreams: layers.spatialLayers\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        // If encodings are given, apply them now.\n        if (encodings) {\n            logger.debug('send() | applying given encodings');\n            const parameters = transceiver.sender.getParameters();\n            for (let idx = 0; idx < (parameters.encodings || []).length; ++idx) {\n                const encoding = parameters.encodings[idx];\n                const desiredEncoding = encodings[idx];\n                // Should not happen but just in case.\n                if (!desiredEncoding) {\n                    break;\n                }\n                parameters.encodings[idx] = Object.assign(encoding, desiredEncoding);\n            }\n            await transceiver.sender.setParameters(parameters);\n        }\n        // We can now get the transceiver.mid.\n        const localId = transceiver.mid;\n        // Set MID.\n        sendingRtpParameters.mid = localId;\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings.\n        sendingRtpParameters.encodings =\n            sdpUnifiedPlanUtils.getRtpEncodings({ offerMediaObject });\n        // Complete encodings with given values.\n        if (encodings) {\n            for (let idx = 0; idx < sendingRtpParameters.encodings.length; ++idx) {\n                if (encodings[idx]) {\n                    Object.assign(sendingRtpParameters.encodings[idx], encodings[idx]);\n                }\n            }\n        }\n        // Hack for VP9 SVC.\n        if (hackVp9Svc) {\n            sendingRtpParameters.encodings = [sendingRtpParameters.encodings[0]];\n        }\n        // If VP8 or H264 and there is effective simulcast, add scalabilityMode to\n        // each encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            (sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8' ||\n                sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/h264')) {\n            for (const encoding of sendingRtpParameters.encodings) {\n                encoding.scalabilityMode = 'L1T3';\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            reuseMid: mediaSectionIdx.reuseMid,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        // Store in the map.\n        this._mapMidTransceiver.set(localId, transceiver);\n        return {\n            localId,\n            rtpParameters: sendingRtpParameters,\n            rtpSender: transceiver.sender\n        };\n    }\n    async stopSending(localId) {\n        this.assertSendDirection();\n        logger.debug('stopSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        transceiver.sender.replaceTrack(null);\n        this._pc.removeTrack(transceiver.sender);\n        const mediaSectionClosed = this._remoteSdp.closeMediaSection(transceiver.mid);\n        if (mediaSectionClosed) {\n            try {\n                transceiver.stop();\n            }\n            catch (error) { }\n        }\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        this._mapMidTransceiver.delete(localId);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async pauseSending(localId) {\n        // Unimplemented.\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async resumeSending(localId) {\n        // Unimplemented.\n    }\n    async replaceTrack(localId, track) {\n        this.assertSendDirection();\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        await transceiver.sender.replaceTrack(track);\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        this.assertSendDirection();\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            if (idx <= spatialLayer) {\n                encoding.active = true;\n            }\n            else {\n                encoding.active = false;\n            }\n        });\n        await transceiver.sender.setParameters(parameters);\n        this._remoteSdp.muxMediaSectionSimulcast(localId, parameters.encodings);\n        const offer = await this._pc.createOffer();\n        logger.debug('setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        this.assertSendDirection();\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await transceiver.sender.setParameters(parameters);\n        this._remoteSdp.muxMediaSectionSimulcast(localId, parameters.encodings);\n        const offer = await this._pc.createOffer();\n        logger.debug('setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async getSenderStats(localId) {\n        this.assertSendDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        return transceiver.sender.getStats();\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        var _a;\n        this.assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmitTime: maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive(optionsList) {\n        var _a;\n        this.assertRecvDirection();\n        const results = [];\n        const mapLocalId = new Map();\n        for (const options of optionsList) {\n            const { trackId, kind, rtpParameters, streamId } = options;\n            logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n            const localId = rtpParameters.mid || String(this._mapMidTransceiver.size);\n            mapLocalId.set(trackId, localId);\n            this._remoteSdp.receive({\n                mid: localId,\n                kind,\n                offerRtpParameters: rtpParameters,\n                streamId: streamId || rtpParameters.rtcp.cname,\n                trackId\n            });\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        for (const options of optionsList) {\n            const { trackId, rtpParameters } = options;\n            const localId = mapLocalId.get(trackId);\n            const answerMediaObject = localSdpObject.media\n                .find((m) => String(m.mid) === localId);\n            // May need to modify codec parameters in the answer based on codec\n            // parameters in the offer.\n            sdpCommonUtils.applyCodecParameters({\n                offerRtpParameters: rtpParameters,\n                answerMediaObject\n            });\n        }\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        for (const options of optionsList) {\n            const { trackId } = options;\n            const localId = mapLocalId.get(trackId);\n            const transceiver = this._pc.getTransceivers()\n                .find((t) => t.mid === localId);\n            if (!transceiver) {\n                throw new Error('new RTCRtpTransceiver not found');\n            }\n            // Store in the map.\n            this._mapMidTransceiver.set(localId, transceiver);\n            results.push({\n                localId,\n                track: transceiver.receiver.track,\n                rtpReceiver: transceiver.receiver\n            });\n        }\n        return results;\n    }\n    async stopReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('stopReceiving() [localId:%s]', localId);\n            const transceiver = this._mapMidTransceiver.get(localId);\n            if (!transceiver) {\n                throw new Error('associated RTCRtpTransceiver not found');\n            }\n            this._remoteSdp.closeMediaSection(transceiver.mid);\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        for (const localId of localIds) {\n            this._mapMidTransceiver.delete(localId);\n        }\n    }\n    async pauseReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localIds) {\n        // Unimplemented.\n    }\n    async resumeReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localIds) {\n        // Unimplemented.\n    }\n    async getReceiverStats(localId) {\n        this.assertRecvDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        return transceiver.receiver.getStats();\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        var _a;\n        this.assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmitTime: maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation();\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject) {\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        }\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@connect', { dtlsParameters }, resolve, reject);\n        });\n        this._transportReady = true;\n    }\n    assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.Chrome70 = Chrome70;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Chrome74 = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpUnifiedPlanUtils = __importStar(require(\"./sdp/unifiedPlanUtils\"));\nconst ortcUtils = __importStar(require(\"./ortc/utils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst scalabilityModes_1 = require(\"../scalabilityModes\");\nconst logger = new Logger_1.Logger('Chrome74');\nconst SCTP_NUM_STREAMS = { OS: 1024, MIS: 1024 };\nclass Chrome74 extends HandlerInterface_1.HandlerInterface {\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Chrome74();\n    }\n    constructor() {\n        super();\n        // Map of RTCTransceivers indexed by MID.\n        this._mapMidTransceiver = new Map();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    get name() {\n        return 'Chrome74';\n    }\n    close() {\n        logger.debug('close()');\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n        this.emit('@close');\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'unified-plan'\n        });\n        try {\n            pc.addTransceiver('audio');\n            pc.addTransceiver('video');\n            const offer = await pc.createOffer();\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            // libwebrtc supports NACK for OPUS but doesn't announce it.\n            ortcUtils.addNackSuppportForOpus(nativeRtpCapabilities);\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        if (dtlsParameters.role && dtlsParameters.role !== 'auto') {\n            this._forcedLocalDtlsRole = dtlsParameters.role === 'server'\n                ? 'client'\n                : 'server';\n        }\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'unified-plan',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        if (this._pc.connectionState) {\n            this._pc.addEventListener('connectionstatechange', () => {\n                this.emit('@connectionstatechange', this._pc.connectionState);\n            });\n        }\n        else {\n            logger.warn('run() | pc.connectionState not supported, using pc.iceConnectionState');\n            this._pc.addEventListener('iceconnectionstatechange', () => {\n                switch (this._pc.iceConnectionState) {\n                    case 'checking':\n                        this.emit('@connectionstatechange', 'connecting');\n                        break;\n                    case 'connected':\n                    case 'completed':\n                        this.emit('@connectionstatechange', 'connected');\n                        break;\n                    case 'failed':\n                        this.emit('@connectionstatechange', 'failed');\n                        break;\n                    case 'disconnected':\n                        this.emit('@connectionstatechange', 'disconnected');\n                        break;\n                    case 'closed':\n                        this.emit('@connectionstatechange', 'closed');\n                        break;\n                }\n            });\n        }\n    }\n    async updateIceServers(iceServers) {\n        logger.debug('updateIceServers()');\n        const configuration = this._pc.getConfiguration();\n        configuration.iceServers = iceServers;\n        this._pc.setConfiguration(configuration);\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady) {\n            return;\n        }\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        var _a;\n        this.assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (encodings && encodings.length > 1) {\n            encodings.forEach((encoding, idx) => {\n                encoding.rid = `r${idx}`;\n            });\n        }\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs, codec);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs, codec);\n        const mediaSectionIdx = this._remoteSdp.getNextMediaSectionIdx();\n        const transceiver = this._pc.addTransceiver(track, {\n            direction: 'sendonly',\n            streams: [this._sendStream],\n            sendEncodings: encodings\n        });\n        let offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        let offerMediaObject;\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        // Special case for VP9 with SVC.\n        let hackVp9Svc = false;\n        const layers = (0, scalabilityModes_1.parse)((encodings || [{}])[0].scalabilityMode);\n        if (encodings &&\n            encodings.length === 1 &&\n            layers.spatialLayers > 1 &&\n            sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp9') {\n            logger.debug('send() | enabling legacy simulcast for VP9 SVC');\n            hackVp9Svc = true;\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n            sdpUnifiedPlanUtils.addLegacySimulcast({\n                offerMediaObject,\n                numStreams: layers.spatialLayers\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        // We can now get the transceiver.mid.\n        const localId = transceiver.mid;\n        // Set MID.\n        sendingRtpParameters.mid = localId;\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings by parsing the SDP offer if no encodings are given.\n        if (!encodings) {\n            sendingRtpParameters.encodings =\n                sdpUnifiedPlanUtils.getRtpEncodings({ offerMediaObject });\n        }\n        // Set RTP encodings by parsing the SDP offer and complete them with given\n        // one if just a single encoding has been given.\n        else if (encodings.length === 1) {\n            let newEncodings = sdpUnifiedPlanUtils.getRtpEncodings({ offerMediaObject });\n            Object.assign(newEncodings[0], encodings[0]);\n            // Hack for VP9 SVC.\n            if (hackVp9Svc) {\n                newEncodings = [newEncodings[0]];\n            }\n            sendingRtpParameters.encodings = newEncodings;\n        }\n        // Otherwise if more than 1 encoding are given use them verbatim.\n        else {\n            sendingRtpParameters.encodings = encodings;\n        }\n        // If VP8 or H264 and there is effective simulcast, add scalabilityMode to\n        // each encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            (sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8' ||\n                sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/h264')) {\n            for (const encoding of sendingRtpParameters.encodings) {\n                if (encoding.scalabilityMode) {\n                    encoding.scalabilityMode = `L1T${layers.temporalLayers}`;\n                }\n                else {\n                    encoding.scalabilityMode = 'L1T3';\n                }\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            reuseMid: mediaSectionIdx.reuseMid,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions,\n            extmapAllowMixed: true\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        // Store in the map.\n        this._mapMidTransceiver.set(localId, transceiver);\n        return {\n            localId,\n            rtpParameters: sendingRtpParameters,\n            rtpSender: transceiver.sender\n        };\n    }\n    async stopSending(localId) {\n        this.assertSendDirection();\n        logger.debug('stopSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        transceiver.sender.replaceTrack(null);\n        this._pc.removeTrack(transceiver.sender);\n        const mediaSectionClosed = this._remoteSdp.closeMediaSection(transceiver.mid);\n        if (mediaSectionClosed) {\n            try {\n                transceiver.stop();\n            }\n            catch (error) { }\n        }\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        this._mapMidTransceiver.delete(localId);\n    }\n    async pauseSending(localId) {\n        this.assertSendDirection();\n        logger.debug('pauseSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        transceiver.direction = 'inactive';\n        this._remoteSdp.pauseMediaSection(localId);\n        const offer = await this._pc.createOffer();\n        logger.debug('pauseSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('pauseSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async resumeSending(localId) {\n        this.assertSendDirection();\n        logger.debug('resumeSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        this._remoteSdp.resumeSendingMediaSection(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        transceiver.direction = 'sendonly';\n        const offer = await this._pc.createOffer();\n        logger.debug('resumeSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('resumeSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async replaceTrack(localId, track) {\n        this.assertSendDirection();\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        await transceiver.sender.replaceTrack(track);\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        this.assertSendDirection();\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            if (idx <= spatialLayer) {\n                encoding.active = true;\n            }\n            else {\n                encoding.active = false;\n            }\n        });\n        await transceiver.sender.setParameters(parameters);\n        this._remoteSdp.muxMediaSectionSimulcast(localId, parameters.encodings);\n        const offer = await this._pc.createOffer();\n        logger.debug('setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        this.assertSendDirection();\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await transceiver.sender.setParameters(parameters);\n        this._remoteSdp.muxMediaSectionSimulcast(localId, parameters.encodings);\n        const offer = await this._pc.createOffer();\n        logger.debug('setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async getSenderStats(localId) {\n        this.assertSendDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        return transceiver.sender.getStats();\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        var _a;\n        this.assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive(optionsList) {\n        var _a;\n        this.assertRecvDirection();\n        const results = [];\n        const mapLocalId = new Map();\n        for (const options of optionsList) {\n            const { trackId, kind, rtpParameters, streamId } = options;\n            logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n            const localId = rtpParameters.mid || String(this._mapMidTransceiver.size);\n            mapLocalId.set(trackId, localId);\n            this._remoteSdp.receive({\n                mid: localId,\n                kind,\n                offerRtpParameters: rtpParameters,\n                streamId: streamId || rtpParameters.rtcp.cname,\n                trackId\n            });\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        for (const options of optionsList) {\n            const { trackId, rtpParameters } = options;\n            const localId = mapLocalId.get(trackId);\n            const answerMediaObject = localSdpObject.media\n                .find((m) => String(m.mid) === localId);\n            // May need to modify codec parameters in the answer based on codec\n            // parameters in the offer.\n            sdpCommonUtils.applyCodecParameters({\n                offerRtpParameters: rtpParameters,\n                answerMediaObject\n            });\n        }\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        for (const options of optionsList) {\n            const { trackId } = options;\n            const localId = mapLocalId.get(trackId);\n            const transceiver = this._pc.getTransceivers()\n                .find((t) => t.mid === localId);\n            if (!transceiver) {\n                throw new Error('new RTCRtpTransceiver not found');\n            }\n            else {\n                // Store in the map.\n                this._mapMidTransceiver.set(localId, transceiver);\n                results.push({\n                    localId,\n                    track: transceiver.receiver.track,\n                    rtpReceiver: transceiver.receiver\n                });\n            }\n        }\n        return results;\n    }\n    async stopReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('stopReceiving() [localId:%s]', localId);\n            const transceiver = this._mapMidTransceiver.get(localId);\n            if (!transceiver) {\n                throw new Error('associated RTCRtpTransceiver not found');\n            }\n            this._remoteSdp.closeMediaSection(transceiver.mid);\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        for (const localId of localIds) {\n            this._mapMidTransceiver.delete(localId);\n        }\n    }\n    async pauseReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('pauseReceiving() [localId:%s]', localId);\n            const transceiver = this._mapMidTransceiver.get(localId);\n            if (!transceiver) {\n                throw new Error('associated RTCRtpTransceiver not found');\n            }\n            transceiver.direction = 'inactive';\n            this._remoteSdp.pauseMediaSection(localId);\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('pauseReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async resumeReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('resumeReceiving() [localId:%s]', localId);\n            const transceiver = this._mapMidTransceiver.get(localId);\n            if (!transceiver) {\n                throw new Error('associated RTCRtpTransceiver not found');\n            }\n            transceiver.direction = 'recvonly';\n            this._remoteSdp.resumeReceivingMediaSection(localId);\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('resumeReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async getReceiverStats(localId) {\n        this.assertRecvDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        return transceiver.receiver.getStats();\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        var _a;\n        this.assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation();\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject) {\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        }\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@connect', { dtlsParameters }, resolve, reject);\n        });\n        this._transportReady = true;\n    }\n    assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.Chrome74 = Chrome74;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Edge11 = void 0;\nconst Logger_1 = require(\"../Logger\");\nconst errors_1 = require(\"../errors\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst edgeUtils = __importStar(require(\"./ortc/edgeUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst logger = new Logger_1.Logger('Edge11');\nclass Edge11 extends HandlerInterface_1.HandlerInterface {\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Edge11();\n    }\n    constructor() {\n        super();\n        // Map of RTCRtpSenders indexed by id.\n        this._rtpSenders = new Map();\n        // Map of RTCRtpReceivers indexed by id.\n        this._rtpReceivers = new Map();\n        // Next localId for sending tracks.\n        this._nextSendLocalId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    get name() {\n        return 'Edge11';\n    }\n    close() {\n        logger.debug('close()');\n        // Close the ICE gatherer.\n        // NOTE: Not yet implemented by Edge.\n        try {\n            this._iceGatherer.close();\n        }\n        catch (error) { }\n        // Close the ICE transport.\n        try {\n            this._iceTransport.stop();\n        }\n        catch (error) { }\n        // Close the DTLS transport.\n        try {\n            this._dtlsTransport.stop();\n        }\n        catch (error) { }\n        // Close RTCRtpSenders.\n        for (const rtpSender of this._rtpSenders.values()) {\n            try {\n                rtpSender.stop();\n            }\n            catch (error) { }\n        }\n        // Close RTCRtpReceivers.\n        for (const rtpReceiver of this._rtpReceivers.values()) {\n            try {\n                rtpReceiver.stop();\n            }\n            catch (error) { }\n        }\n        this.emit('@close');\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        return edgeUtils.getCapabilities();\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: { OS: 0, MIS: 0 }\n        };\n    }\n    run({ direction, // eslint-disable-line @typescript-eslint/no-unused-vars\n    iceParameters, iceCandidates, dtlsParameters, sctpParameters, // eslint-disable-line @typescript-eslint/no-unused-vars\n    iceServers, iceTransportPolicy, additionalSettings, // eslint-disable-line @typescript-eslint/no-unused-vars\n    proprietaryConstraints, // eslint-disable-line @typescript-eslint/no-unused-vars\n    extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._remoteIceParameters = iceParameters;\n        this._remoteIceCandidates = iceCandidates;\n        this._remoteDtlsParameters = dtlsParameters;\n        this._cname = `CNAME-${utils.generateRandomNumber()}`;\n        this.setIceGatherer({ iceServers, iceTransportPolicy });\n        this.setIceTransport();\n        this.setDtlsTransport();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async updateIceServers(iceServers) {\n        // NOTE: Edge 11 does not implement iceGatherer.gater().\n        throw new errors_1.UnsupportedError('not supported');\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        this._remoteIceParameters = iceParameters;\n        if (!this._transportReady) {\n            return;\n        }\n        logger.debug('restartIce() | calling iceTransport.start()');\n        this._iceTransport.start(this._iceGatherer, iceParameters, 'controlling');\n        for (const candidate of this._remoteIceCandidates) {\n            this._iceTransport.addRemoteCandidate(candidate);\n        }\n        this._iceTransport.addRemoteCandidate({});\n    }\n    async getTransportStats() {\n        return this._iceTransport.getStats();\n    }\n    async send(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    { track, encodings, codecOptions, codec }) {\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (!this._transportReady) {\n            await this.setupTransport({ localDtlsRole: 'server' });\n        }\n        logger.debug('send() | calling new RTCRtpSender()');\n        const rtpSender = new RTCRtpSender(track, this._dtlsTransport);\n        const rtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        rtpParameters.codecs = ortc.reduceCodecs(rtpParameters.codecs, codec);\n        const useRtx = rtpParameters.codecs\n            .some((_codec) => /.+\\/rtx$/i.test(_codec.mimeType));\n        if (!encodings) {\n            encodings = [{}];\n        }\n        for (const encoding of encodings) {\n            encoding.ssrc = utils.generateRandomNumber();\n            if (useRtx) {\n                encoding.rtx = { ssrc: utils.generateRandomNumber() };\n            }\n        }\n        rtpParameters.encodings = encodings;\n        // Fill RTCRtpParameters.rtcp.\n        rtpParameters.rtcp =\n            {\n                cname: this._cname,\n                reducedSize: true,\n                mux: true\n            };\n        // NOTE: Convert our standard RTCRtpParameters into those that Edge\n        // expects.\n        const edgeRtpParameters = edgeUtils.mangleRtpParameters(rtpParameters);\n        logger.debug('send() | calling rtpSender.send() [params:%o]', edgeRtpParameters);\n        await rtpSender.send(edgeRtpParameters);\n        const localId = String(this._nextSendLocalId);\n        this._nextSendLocalId++;\n        // Store it.\n        this._rtpSenders.set(localId, rtpSender);\n        return { localId, rtpParameters, rtpSender };\n    }\n    async stopSending(localId) {\n        logger.debug('stopSending() [localId:%s]', localId);\n        const rtpSender = this._rtpSenders.get(localId);\n        if (!rtpSender) {\n            throw new Error('RTCRtpSender not found');\n        }\n        this._rtpSenders.delete(localId);\n        try {\n            logger.debug('stopSending() | calling rtpSender.stop()');\n            rtpSender.stop();\n        }\n        catch (error) {\n            logger.warn('stopSending() | rtpSender.stop() failed:%o', error);\n            throw error;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async pauseSending(localId) {\n        // Unimplemented.\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async resumeSending(localId) {\n        // Unimplemented.\n    }\n    async replaceTrack(localId, track) {\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const rtpSender = this._rtpSenders.get(localId);\n        if (!rtpSender) {\n            throw new Error('RTCRtpSender not found');\n        }\n        rtpSender.setTrack(track);\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const rtpSender = this._rtpSenders.get(localId);\n        if (!rtpSender) {\n            throw new Error('RTCRtpSender not found');\n        }\n        const parameters = rtpSender.getParameters();\n        parameters.encodings\n            .forEach((encoding, idx) => {\n            if (idx <= spatialLayer) {\n                encoding.active = true;\n            }\n            else {\n                encoding.active = false;\n            }\n        });\n        await rtpSender.setParameters(parameters);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const rtpSender = this._rtpSenders.get(localId);\n        if (!rtpSender) {\n            throw new Error('RTCRtpSender not found');\n        }\n        const parameters = rtpSender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await rtpSender.setParameters(parameters);\n    }\n    async getSenderStats(localId) {\n        const rtpSender = this._rtpSenders.get(localId);\n        if (!rtpSender) {\n            throw new Error('RTCRtpSender not found');\n        }\n        return rtpSender.getStats();\n    }\n    async sendDataChannel(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    options) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    async receive(optionsList) {\n        const results = [];\n        for (const options of optionsList) {\n            const { trackId, kind } = options;\n            logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n        }\n        if (!this._transportReady) {\n            await this.setupTransport({ localDtlsRole: 'server' });\n        }\n        for (const options of optionsList) {\n            const { trackId, kind, rtpParameters } = options;\n            logger.debug('receive() | calling new RTCRtpReceiver()');\n            const rtpReceiver = new RTCRtpReceiver(this._dtlsTransport, kind);\n            rtpReceiver.addEventListener('error', (event) => {\n                logger.error('rtpReceiver \"error\" event [event:%o]', event);\n            });\n            // NOTE: Convert our standard RTCRtpParameters into those that Edge\n            // expects.\n            const edgeRtpParameters = edgeUtils.mangleRtpParameters(rtpParameters);\n            logger.debug('receive() | calling rtpReceiver.receive() [params:%o]', edgeRtpParameters);\n            await rtpReceiver.receive(edgeRtpParameters);\n            const localId = trackId;\n            // Store it.\n            this._rtpReceivers.set(localId, rtpReceiver);\n            results.push({\n                localId,\n                track: rtpReceiver.track,\n                rtpReceiver\n            });\n        }\n        return results;\n    }\n    async stopReceiving(localIds) {\n        for (const localId of localIds) {\n            logger.debug('stopReceiving() [localId:%s]', localId);\n            const rtpReceiver = this._rtpReceivers.get(localId);\n            if (!rtpReceiver) {\n                throw new Error('RTCRtpReceiver not found');\n            }\n            this._rtpReceivers.delete(localId);\n            try {\n                logger.debug('stopReceiving() | calling rtpReceiver.stop()');\n                rtpReceiver.stop();\n            }\n            catch (error) {\n                logger.warn('stopReceiving() | rtpReceiver.stop() failed:%o', error);\n            }\n        }\n    }\n    async pauseReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localIds) {\n        // Unimplemented.\n    }\n    async resumeReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localIds) {\n        // Unimplemented.\n    }\n    async getReceiverStats(localId) {\n        const rtpReceiver = this._rtpReceivers.get(localId);\n        if (!rtpReceiver) {\n            throw new Error('RTCRtpReceiver not found');\n        }\n        return rtpReceiver.getStats();\n    }\n    async receiveDataChannel(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    options) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    setIceGatherer({ iceServers, iceTransportPolicy }) {\n        // @ts-ignore\n        const iceGatherer = new RTCIceGatherer({\n            iceServers: iceServers || [],\n            gatherPolicy: iceTransportPolicy || 'all'\n        });\n        iceGatherer.addEventListener('error', (event) => {\n            logger.error('iceGatherer \"error\" event [event:%o]', event);\n        });\n        // NOTE: Not yet implemented by Edge, which starts gathering automatically.\n        try {\n            iceGatherer.gather();\n        }\n        catch (error) {\n            logger.debug('setIceGatherer() | iceGatherer.gather() failed: %s', error.toString());\n        }\n        this._iceGatherer = iceGatherer;\n    }\n    setIceTransport() {\n        const iceTransport = new RTCIceTransport(this._iceGatherer);\n        // NOTE: Not yet implemented by Edge.\n        iceTransport.addEventListener('statechange', () => {\n            switch (iceTransport.state) {\n                case 'checking':\n                    this.emit('@connectionstatechange', 'connecting');\n                    break;\n                case 'connected':\n                case 'completed':\n                    this.emit('@connectionstatechange', 'connected');\n                    break;\n                case 'failed':\n                    this.emit('@connectionstatechange', 'failed');\n                    break;\n                case 'disconnected':\n                    this.emit('@connectionstatechange', 'disconnected');\n                    break;\n                case 'closed':\n                    this.emit('@connectionstatechange', 'closed');\n                    break;\n            }\n        });\n        // NOTE: Not standard, but implemented by Edge.\n        iceTransport.addEventListener('icestatechange', () => {\n            switch (iceTransport.state) {\n                case 'checking':\n                    this.emit('@connectionstatechange', 'connecting');\n                    break;\n                case 'connected':\n                case 'completed':\n                    this.emit('@connectionstatechange', 'connected');\n                    break;\n                case 'failed':\n                    this.emit('@connectionstatechange', 'failed');\n                    break;\n                case 'disconnected':\n                    this.emit('@connectionstatechange', 'disconnected');\n                    break;\n                case 'closed':\n                    this.emit('@connectionstatechange', 'closed');\n                    break;\n            }\n        });\n        iceTransport.addEventListener('candidatepairchange', (event) => {\n            logger.debug('iceTransport \"candidatepairchange\" event [pair:%o]', event.pair);\n        });\n        this._iceTransport = iceTransport;\n    }\n    setDtlsTransport() {\n        const dtlsTransport = new RTCDtlsTransport(this._iceTransport);\n        // NOTE: Not yet implemented by Edge.\n        dtlsTransport.addEventListener('statechange', () => {\n            logger.debug('dtlsTransport \"statechange\" event [state:%s]', dtlsTransport.state);\n        });\n        // NOTE: Not standard, but implemented by Edge.\n        dtlsTransport.addEventListener('dtlsstatechange', () => {\n            logger.debug('dtlsTransport \"dtlsstatechange\" event [state:%s]', dtlsTransport.state);\n            if (dtlsTransport.state === 'closed') {\n                this.emit('@connectionstatechange', 'closed');\n            }\n        });\n        dtlsTransport.addEventListener('error', (event) => {\n            logger.error('dtlsTransport \"error\" event [event:%o]', event);\n        });\n        this._dtlsTransport = dtlsTransport;\n    }\n    async setupTransport({ localDtlsRole }) {\n        logger.debug('setupTransport()');\n        // Get our local DTLS parameters.\n        const dtlsParameters = this._dtlsTransport.getLocalParameters();\n        dtlsParameters.role = localDtlsRole;\n        // Need to tell the remote transport about our parameters.\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@connect', { dtlsParameters }, resolve, reject);\n        });\n        // Start the RTCIceTransport.\n        this._iceTransport.start(this._iceGatherer, this._remoteIceParameters, 'controlling');\n        // Add remote ICE candidates.\n        for (const candidate of this._remoteIceCandidates) {\n            this._iceTransport.addRemoteCandidate(candidate);\n        }\n        // Also signal a 'complete' candidate as per spec.\n        // NOTE: It should be {complete: true} but Edge prefers {}.\n        // NOTE: If we don't signal end of candidates, the Edge RTCIceTransport\n        // won't enter the 'completed' state.\n        this._iceTransport.addRemoteCandidate({});\n        // NOTE: Edge does not like SHA less than 256.\n        this._remoteDtlsParameters.fingerprints = this._remoteDtlsParameters.fingerprints\n            .filter((fingerprint) => {\n            return (fingerprint.algorithm === 'sha-256' ||\n                fingerprint.algorithm === 'sha-384' ||\n                fingerprint.algorithm === 'sha-512');\n        });\n        // Start the RTCDtlsTransport.\n        this._dtlsTransport.start(this._remoteDtlsParameters);\n        this._transportReady = true;\n    }\n}\nexports.Edge11 = Edge11;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Firefox60 = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst errors_1 = require(\"../errors\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpUnifiedPlanUtils = __importStar(require(\"./sdp/unifiedPlanUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst scalabilityModes_1 = require(\"../scalabilityModes\");\nconst logger = new Logger_1.Logger('Firefox60');\nconst SCTP_NUM_STREAMS = { OS: 16, MIS: 2048 };\nclass Firefox60 extends HandlerInterface_1.HandlerInterface {\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Firefox60();\n    }\n    constructor() {\n        super();\n        // Map of RTCTransceivers indexed by MID.\n        this._mapMidTransceiver = new Map();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    get name() {\n        return 'Firefox60';\n    }\n    close() {\n        logger.debug('close()');\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n        this.emit('@close');\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require'\n        });\n        // NOTE: We need to add a real video track to get the RID extension mapping.\n        const canvas = document.createElement('canvas');\n        // NOTE: Otherwise Firefox fails in next line.\n        canvas.getContext('2d');\n        const fakeStream = canvas.captureStream();\n        const fakeVideoTrack = fakeStream.getVideoTracks()[0];\n        try {\n            pc.addTransceiver('audio', { direction: 'sendrecv' });\n            const videoTransceiver = pc.addTransceiver(fakeVideoTrack, { direction: 'sendrecv' });\n            const parameters = videoTransceiver.sender.getParameters();\n            const encodings = [\n                { rid: 'r0', maxBitrate: 100000 },\n                { rid: 'r1', maxBitrate: 500000 }\n            ];\n            parameters.encodings = encodings;\n            await videoTransceiver.sender.setParameters(parameters);\n            const offer = await pc.createOffer();\n            try {\n                canvas.remove();\n            }\n            catch (error) { }\n            try {\n                fakeVideoTrack.stop();\n            }\n            catch (error) { }\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                canvas.remove();\n            }\n            catch (error2) { }\n            try {\n                fakeVideoTrack.stop();\n            }\n            catch (error2) { }\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        if (this._pc.connectionState) {\n            this._pc.addEventListener('connectionstatechange', () => {\n                this.emit('@connectionstatechange', this._pc.connectionState);\n            });\n        }\n        else {\n            this._pc.addEventListener('iceconnectionstatechange', () => {\n                logger.warn('run() | pc.connectionState not supported, using pc.iceConnectionState');\n                switch (this._pc.iceConnectionState) {\n                    case 'checking':\n                        this.emit('@connectionstatechange', 'connecting');\n                        break;\n                    case 'connected':\n                    case 'completed':\n                        this.emit('@connectionstatechange', 'connected');\n                        break;\n                    case 'failed':\n                        this.emit('@connectionstatechange', 'failed');\n                        break;\n                    case 'disconnected':\n                        this.emit('@connectionstatechange', 'disconnected');\n                        break;\n                    case 'closed':\n                        this.emit('@connectionstatechange', 'closed');\n                        break;\n                }\n            });\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async updateIceServers(iceServers) {\n        // NOTE: Firefox does not implement pc.setConfiguration().\n        throw new errors_1.UnsupportedError('not supported');\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady) {\n            return;\n        }\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        this.assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (encodings) {\n            encodings = utils.clone(encodings, []);\n            if (encodings.length > 1) {\n                encodings.forEach((encoding, idx) => {\n                    encoding.rid = `r${idx}`;\n                });\n                // Clone the encodings and reverse them because Firefox likes them\n                // from high to low.\n                encodings.reverse();\n            }\n        }\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs, codec);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs, codec);\n        // NOTE: Firefox fails sometimes to properly anticipate the closed media\n        // section that it should use, so don't reuse closed media sections.\n        //   https://github.com/versatica/mediasoup-client/issues/104\n        //\n        // const mediaSectionIdx = this._remoteSdp!.getNextMediaSectionIdx();\n        const transceiver = this._pc.addTransceiver(track, { direction: 'sendonly', streams: [this._sendStream] });\n        // NOTE: This is not spec compliants. Encodings should be given in addTransceiver\n        // second argument, but Firefox does not support it.\n        if (encodings) {\n            const parameters = transceiver.sender.getParameters();\n            parameters.encodings = encodings;\n            await transceiver.sender.setParameters(parameters);\n        }\n        const offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        // In Firefox use DTLS role client even if we are the \"offerer\" since\n        // Firefox does not respect ICE-Lite.\n        if (!this._transportReady) {\n            await this.setupTransport({ localDtlsRole: 'client', localSdpObject });\n        }\n        const layers = (0, scalabilityModes_1.parse)((encodings || [{}])[0].scalabilityMode);\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        // We can now get the transceiver.mid.\n        const localId = transceiver.mid;\n        // Set MID.\n        sendingRtpParameters.mid = localId;\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        const offerMediaObject = localSdpObject.media[localSdpObject.media.length - 1];\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings by parsing the SDP offer if no encodings are given.\n        if (!encodings) {\n            sendingRtpParameters.encodings =\n                sdpUnifiedPlanUtils.getRtpEncodings({ offerMediaObject });\n        }\n        // Set RTP encodings by parsing the SDP offer and complete them with given\n        // one if just a single encoding has been given.\n        else if (encodings.length === 1) {\n            const newEncodings = sdpUnifiedPlanUtils.getRtpEncodings({ offerMediaObject });\n            Object.assign(newEncodings[0], encodings[0]);\n            sendingRtpParameters.encodings = newEncodings;\n        }\n        // Otherwise if more than 1 encoding are given use them verbatim (but\n        // reverse them back since we reversed them above to satisfy Firefox).\n        else {\n            sendingRtpParameters.encodings = encodings.reverse();\n        }\n        // If VP8 or H264 and there is effective simulcast, add scalabilityMode to\n        // each encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            (sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8' ||\n                sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/h264')) {\n            for (const encoding of sendingRtpParameters.encodings) {\n                if (encoding.scalabilityMode) {\n                    encoding.scalabilityMode = `L1T${layers.temporalLayers}`;\n                }\n                else {\n                    encoding.scalabilityMode = 'L1T3';\n                }\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions,\n            extmapAllowMixed: true\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        // Store in the map.\n        this._mapMidTransceiver.set(localId, transceiver);\n        return {\n            localId,\n            rtpParameters: sendingRtpParameters,\n            rtpSender: transceiver.sender\n        };\n    }\n    async stopSending(localId) {\n        logger.debug('stopSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated transceiver not found');\n        }\n        transceiver.sender.replaceTrack(null);\n        // NOTE: Cannot use stop() the transceiver due to the the note above in\n        // send() method.\n        // try\n        // {\n        // \ttransceiver.stop();\n        // }\n        // catch (error)\n        // {}\n        this._pc.removeTrack(transceiver.sender);\n        // NOTE: Cannot use closeMediaSection() due to the the note above in send()\n        // method.\n        // this._remoteSdp!.closeMediaSection(transceiver.mid);\n        this._remoteSdp.disableMediaSection(transceiver.mid);\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        this._mapMidTransceiver.delete(localId);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async pauseSending(localId) {\n        this.assertSendDirection();\n        logger.debug('pauseSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        transceiver.direction = 'inactive';\n        this._remoteSdp.pauseMediaSection(localId);\n        const offer = await this._pc.createOffer();\n        logger.debug('pauseSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('pauseSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async resumeSending(localId) {\n        this.assertSendDirection();\n        logger.debug('resumeSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        transceiver.direction = 'sendonly';\n        this._remoteSdp.resumeSendingMediaSection(localId);\n        const offer = await this._pc.createOffer();\n        logger.debug('resumeSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('resumeSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async replaceTrack(localId, track) {\n        this.assertSendDirection();\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        await transceiver.sender.replaceTrack(track);\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        this.assertSendDirection();\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated transceiver not found');\n        }\n        const parameters = transceiver.sender.getParameters();\n        // NOTE: We require encodings given from low to high, however Firefox\n        // requires them in reverse order, so do magic here.\n        spatialLayer = parameters.encodings.length - 1 - spatialLayer;\n        parameters.encodings.forEach((encoding, idx) => {\n            if (idx >= spatialLayer) {\n                encoding.active = true;\n            }\n            else {\n                encoding.active = false;\n            }\n        });\n        await transceiver.sender.setParameters(parameters);\n        this._remoteSdp.muxMediaSectionSimulcast(localId, parameters.encodings);\n        const offer = await this._pc.createOffer();\n        logger.debug('setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        this.assertSendDirection();\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await transceiver.sender.setParameters(parameters);\n        this._remoteSdp.muxMediaSectionSimulcast(localId, parameters.encodings);\n        const offer = await this._pc.createOffer();\n        logger.debug('setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async getSenderStats(localId) {\n        this.assertSendDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        return transceiver.sender.getStats();\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        this.assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this.setupTransport({ localDtlsRole: 'client', localSdpObject });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    optionsList) {\n        this.assertRecvDirection();\n        const results = [];\n        const mapLocalId = new Map();\n        for (const options of optionsList) {\n            const { trackId, kind, rtpParameters, streamId } = options;\n            logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n            const localId = rtpParameters.mid || String(this._mapMidTransceiver.size);\n            mapLocalId.set(trackId, localId);\n            this._remoteSdp.receive({\n                mid: localId,\n                kind,\n                offerRtpParameters: rtpParameters,\n                streamId: streamId || rtpParameters.rtcp.cname,\n                trackId\n            });\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        for (const options of optionsList) {\n            const { trackId, rtpParameters } = options;\n            const localId = mapLocalId.get(trackId);\n            const answerMediaObject = localSdpObject.media\n                .find((m) => String(m.mid) === localId);\n            // May need to modify codec parameters in the answer based on codec\n            // parameters in the offer.\n            sdpCommonUtils.applyCodecParameters({\n                offerRtpParameters: rtpParameters,\n                answerMediaObject\n            });\n            answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        if (!this._transportReady) {\n            await this.setupTransport({ localDtlsRole: 'client', localSdpObject });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        for (const options of optionsList) {\n            const { trackId } = options;\n            const localId = mapLocalId.get(trackId);\n            const transceiver = this._pc.getTransceivers()\n                .find((t) => t.mid === localId);\n            if (!transceiver) {\n                throw new Error('new RTCRtpTransceiver not found');\n            }\n            // Store in the map.\n            this._mapMidTransceiver.set(localId, transceiver);\n            results.push({\n                localId,\n                track: transceiver.receiver.track,\n                rtpReceiver: transceiver.receiver\n            });\n        }\n        return results;\n    }\n    async stopReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('stopReceiving() [localId:%s]', localId);\n            const transceiver = this._mapMidTransceiver.get(localId);\n            if (!transceiver) {\n                throw new Error('associated RTCRtpTransceiver not found');\n            }\n            this._remoteSdp.closeMediaSection(transceiver.mid);\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        for (const localId of localIds) {\n            this._mapMidTransceiver.delete(localId);\n        }\n    }\n    async pauseReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('pauseReceiving() [localId:%s]', localId);\n            const transceiver = this._mapMidTransceiver.get(localId);\n            if (!transceiver) {\n                throw new Error('associated RTCRtpTransceiver not found');\n            }\n            transceiver.direction = 'inactive';\n            this._remoteSdp.pauseMediaSection(localId);\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('pauseReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async resumeReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('resumeReceiving() [localId:%s]', localId);\n            const transceiver = this._mapMidTransceiver.get(localId);\n            if (!transceiver) {\n                throw new Error('associated RTCRtpTransceiver not found');\n            }\n            transceiver.direction = 'recvonly';\n            this._remoteSdp.resumeReceivingMediaSection(localId);\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('resumeReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async getReceiverStats(localId) {\n        this.assertRecvDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        return transceiver.receiver.getStats();\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        this.assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation();\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this.setupTransport({ localDtlsRole: 'client', localSdpObject });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject) {\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        }\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@connect', { dtlsParameters }, resolve, reject);\n        });\n        this._transportReady = true;\n    }\n    assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.Firefox60 = Firefox60;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HandlerInterface = void 0;\nconst EnhancedEventEmitter_1 = require(\"../EnhancedEventEmitter\");\nclass HandlerInterface extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n    constructor() {\n        super();\n    }\n}\nexports.HandlerInterface = HandlerInterface;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReactNative = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst errors_1 = require(\"../errors\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpPlanBUtils = __importStar(require(\"./sdp/planBUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst logger = new Logger_1.Logger('ReactNative');\nconst SCTP_NUM_STREAMS = { OS: 1024, MIS: 1024 };\nclass ReactNative extends HandlerInterface_1.HandlerInterface {\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new ReactNative();\n    }\n    constructor() {\n        super();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Map of sending MediaStreamTracks indexed by localId.\n        this._mapSendLocalIdTrack = new Map();\n        // Next sending localId.\n        this._nextSendLocalId = 0;\n        // Map of MID, RTP parameters and RTCRtpReceiver indexed by local id.\n        // Value is an Object with mid, rtpParameters and rtpReceiver.\n        this._mapRecvLocalIdInfo = new Map();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    get name() {\n        return 'ReactNative';\n    }\n    close() {\n        logger.debug('close()');\n        // Free/dispose native MediaStream but DO NOT free/dispose native\n        // MediaStreamTracks (that is parent's business).\n        // @ts-ignore (proprietary API in react-native-webrtc).\n        this._sendStream.release(/* releaseTracks */ false);\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n        this.emit('@close');\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'plan-b'\n        });\n        try {\n            const offer = await pc.createOffer({\n                offerToReceiveAudio: true,\n                offerToReceiveVideo: true\n            });\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters,\n            planB: true\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        if (dtlsParameters.role && dtlsParameters.role !== 'auto') {\n            this._forcedLocalDtlsRole = dtlsParameters.role === 'server'\n                ? 'client'\n                : 'server';\n        }\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'plan-b',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        if (this._pc.connectionState) {\n            this._pc.addEventListener('connectionstatechange', () => {\n                this.emit('@connectionstatechange', this._pc.connectionState);\n            });\n        }\n        else {\n            this._pc.addEventListener('iceconnectionstatechange', () => {\n                logger.warn('run() | pc.connectionState not supported, using pc.iceConnectionState');\n                switch (this._pc.iceConnectionState) {\n                    case 'checking':\n                        this.emit('@connectionstatechange', 'connecting');\n                        break;\n                    case 'connected':\n                    case 'completed':\n                        this.emit('@connectionstatechange', 'connected');\n                        break;\n                    case 'failed':\n                        this.emit('@connectionstatechange', 'failed');\n                        break;\n                    case 'disconnected':\n                        this.emit('@connectionstatechange', 'disconnected');\n                        break;\n                    case 'closed':\n                        this.emit('@connectionstatechange', 'closed');\n                        break;\n                }\n            });\n        }\n    }\n    async updateIceServers(iceServers) {\n        logger.debug('updateIceServers()');\n        const configuration = this._pc.getConfiguration();\n        configuration.iceServers = iceServers;\n        this._pc.setConfiguration(configuration);\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady) {\n            return;\n        }\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        var _a;\n        this.assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (codec) {\n            logger.warn('send() | codec selection is not available in %s handler', this.name);\n        }\n        this._sendStream.addTrack(track);\n        this._pc.addStream(this._sendStream);\n        let offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        let offerMediaObject;\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs);\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        if (track.kind === 'video' && encodings && encodings.length > 1) {\n            logger.debug('send() | enabling simulcast');\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'video');\n            sdpPlanBUtils.addLegacySimulcast({\n                offerMediaObject,\n                track,\n                numStreams: encodings.length\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        offerMediaObject = localSdpObject.media\n            .find((m) => m.type === track.kind);\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings.\n        sendingRtpParameters.encodings =\n            sdpPlanBUtils.getRtpEncodings({ offerMediaObject, track });\n        // Complete encodings with given values.\n        if (encodings) {\n            for (let idx = 0; idx < sendingRtpParameters.encodings.length; ++idx) {\n                if (encodings[idx]) {\n                    Object.assign(sendingRtpParameters.encodings[idx], encodings[idx]);\n                }\n            }\n        }\n        // If VP8 or H264 and there is effective simulcast, add scalabilityMode to\n        // each encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            (sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8' ||\n                sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/h264')) {\n            for (const encoding of sendingRtpParameters.encodings) {\n                encoding.scalabilityMode = 'L1T3';\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        const localId = String(this._nextSendLocalId);\n        this._nextSendLocalId++;\n        // Insert into the map.\n        this._mapSendLocalIdTrack.set(localId, track);\n        return {\n            localId: localId,\n            rtpParameters: sendingRtpParameters\n        };\n    }\n    async stopSending(localId) {\n        this.assertSendDirection();\n        logger.debug('stopSending() [localId:%s]', localId);\n        const track = this._mapSendLocalIdTrack.get(localId);\n        if (!track) {\n            throw new Error('track not found');\n        }\n        this._mapSendLocalIdTrack.delete(localId);\n        this._sendStream.removeTrack(track);\n        this._pc.addStream(this._sendStream);\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        try {\n            await this._pc.setLocalDescription(offer);\n        }\n        catch (error) {\n            // NOTE: If there are no sending tracks, setLocalDescription() will fail with\n            // \"Failed to create channels\". If so, ignore it.\n            if (this._sendStream.getTracks().length === 0) {\n                logger.warn('stopSending() | ignoring expected error due no sending tracks: %s', error.toString());\n                return;\n            }\n            throw error;\n        }\n        if (this._pc.signalingState === 'stable') {\n            return;\n        }\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async pauseSending(localId) {\n        // Unimplemented.\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async resumeSending(localId) {\n        // Unimplemented.\n    }\n    async replaceTrack(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localId, track) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async setRtpEncodingParameters(localId, params) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async getSenderStats(localId) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        var _a;\n        this.assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmitTime: maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive(optionsList) {\n        var _a;\n        this.assertRecvDirection();\n        const results = [];\n        const mapStreamId = new Map();\n        for (const options of optionsList) {\n            const { trackId, kind, rtpParameters } = options;\n            logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n            const mid = kind;\n            let streamId = options.streamId || rtpParameters.rtcp.cname;\n            // NOTE: In React-Native we cannot reuse the same remote MediaStream for new\n            // remote tracks. This is because react-native-webrtc does not react on new\n            // tracks generated within already existing streams, so force the streamId\n            // to be different. See:\n            // https://github.com/react-native-webrtc/react-native-webrtc/issues/401\n            logger.debug('receive() | forcing a random remote streamId to avoid well known bug in react-native-webrtc');\n            streamId += `-hack-${utils.generateRandomNumber()}`;\n            mapStreamId.set(trackId, streamId);\n            this._remoteSdp.receive({\n                mid,\n                kind,\n                offerRtpParameters: rtpParameters,\n                streamId,\n                trackId\n            });\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        for (const options of optionsList) {\n            const { kind, rtpParameters } = options;\n            const mid = kind;\n            const answerMediaObject = localSdpObject.media\n                .find((m) => String(m.mid) === mid);\n            // May need to modify codec parameters in the answer based on codec\n            // parameters in the offer.\n            sdpCommonUtils.applyCodecParameters({\n                offerRtpParameters: rtpParameters,\n                answerMediaObject\n            });\n        }\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        for (const options of optionsList) {\n            const { kind, trackId, rtpParameters } = options;\n            const localId = trackId;\n            const mid = kind;\n            const streamId = mapStreamId.get(trackId);\n            const stream = this._pc.getRemoteStreams()\n                .find((s) => s.id === streamId);\n            const track = stream.getTrackById(localId);\n            if (!track) {\n                throw new Error('remote track not found');\n            }\n            // Insert into the map.\n            this._mapRecvLocalIdInfo.set(localId, { mid, rtpParameters });\n            results.push({ localId, track });\n        }\n        return results;\n    }\n    async stopReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('stopReceiving() [localId:%s]', localId);\n            const { mid, rtpParameters } = this._mapRecvLocalIdInfo.get(localId) || {};\n            // Remove from the map.\n            this._mapRecvLocalIdInfo.delete(localId);\n            this._remoteSdp.planBStopReceiving({ mid: mid, offerRtpParameters: rtpParameters });\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async pauseReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localIds) {\n        // Unimplemented.\n    }\n    async resumeReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localIds) {\n        // Unimplemented.\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async getReceiverStats(localId) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        var _a;\n        this.assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmitTime: maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation({ oldDataChannelSpec: true });\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject) {\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        }\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@connect', { dtlsParameters }, resolve, reject);\n        });\n        this._transportReady = true;\n    }\n    assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.ReactNative = ReactNative;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReactNativeUnifiedPlan = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpUnifiedPlanUtils = __importStar(require(\"./sdp/unifiedPlanUtils\"));\nconst ortcUtils = __importStar(require(\"./ortc/utils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst scalabilityModes_1 = require(\"../scalabilityModes\");\nconst logger = new Logger_1.Logger('ReactNativeUnifiedPlan');\nconst SCTP_NUM_STREAMS = { OS: 1024, MIS: 1024 };\nclass ReactNativeUnifiedPlan extends HandlerInterface_1.HandlerInterface {\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new ReactNativeUnifiedPlan();\n    }\n    constructor() {\n        super();\n        // Map of RTCTransceivers indexed by MID.\n        this._mapMidTransceiver = new Map();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    get name() {\n        return 'ReactNativeUnifiedPlan';\n    }\n    close() {\n        logger.debug('close()');\n        // Free/dispose native MediaStream but DO NOT free/dispose native\n        // MediaStreamTracks (that is parent's business).\n        // @ts-ignore (proprietary API in react-native-webrtc).\n        this._sendStream.release(/* releaseTracks */ false);\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n        this.emit('@close');\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'unified-plan'\n        });\n        try {\n            pc.addTransceiver('audio');\n            pc.addTransceiver('video');\n            const offer = await pc.createOffer();\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            // libwebrtc supports NACK for OPUS but doesn't announce it.\n            ortcUtils.addNackSuppportForOpus(nativeRtpCapabilities);\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        if (dtlsParameters.role && dtlsParameters.role !== 'auto') {\n            this._forcedLocalDtlsRole = dtlsParameters.role === 'server'\n                ? 'client'\n                : 'server';\n        }\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'unified-plan',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        if (this._pc.connectionState) {\n            this._pc.addEventListener('connectionstatechange', () => {\n                this.emit('@connectionstatechange', this._pc.connectionState);\n            });\n        }\n        else {\n            this._pc.addEventListener('iceconnectionstatechange', () => {\n                logger.warn('run() | pc.connectionState not supported, using pc.iceConnectionState');\n                switch (this._pc.iceConnectionState) {\n                    case 'checking':\n                        this.emit('@connectionstatechange', 'connecting');\n                        break;\n                    case 'connected':\n                    case 'completed':\n                        this.emit('@connectionstatechange', 'connected');\n                        break;\n                    case 'failed':\n                        this.emit('@connectionstatechange', 'failed');\n                        break;\n                    case 'disconnected':\n                        this.emit('@connectionstatechange', 'disconnected');\n                        break;\n                    case 'closed':\n                        this.emit('@connectionstatechange', 'closed');\n                        break;\n                }\n            });\n        }\n    }\n    async updateIceServers(iceServers) {\n        logger.debug('updateIceServers()');\n        const configuration = this._pc.getConfiguration();\n        configuration.iceServers = iceServers;\n        this._pc.setConfiguration(configuration);\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady) {\n            return;\n        }\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        var _a;\n        this.assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (encodings && encodings.length > 1) {\n            encodings.forEach((encoding, idx) => {\n                encoding.rid = `r${idx}`;\n            });\n        }\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs, codec);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs, codec);\n        const mediaSectionIdx = this._remoteSdp.getNextMediaSectionIdx();\n        const transceiver = this._pc.addTransceiver(track, {\n            direction: 'sendonly',\n            streams: [this._sendStream],\n            sendEncodings: encodings\n        });\n        let offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        let offerMediaObject;\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        // Special case for VP9 with SVC.\n        let hackVp9Svc = false;\n        const layers = (0, scalabilityModes_1.parse)((encodings || [{}])[0].scalabilityMode);\n        if (encodings &&\n            encodings.length === 1 &&\n            layers.spatialLayers > 1 &&\n            sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp9') {\n            logger.debug('send() | enabling legacy simulcast for VP9 SVC');\n            hackVp9Svc = true;\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n            sdpUnifiedPlanUtils.addLegacySimulcast({\n                offerMediaObject,\n                numStreams: layers.spatialLayers\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        // We can now get the transceiver.mid.\n        const localId = transceiver.mid;\n        // Set MID.\n        sendingRtpParameters.mid = localId;\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings by parsing the SDP offer if no encodings are given.\n        if (!encodings) {\n            sendingRtpParameters.encodings =\n                sdpUnifiedPlanUtils.getRtpEncodings({ offerMediaObject });\n        }\n        // Set RTP encodings by parsing the SDP offer and complete them with given\n        // one if just a single encoding has been given.\n        else if (encodings.length === 1) {\n            let newEncodings = sdpUnifiedPlanUtils.getRtpEncodings({ offerMediaObject });\n            Object.assign(newEncodings[0], encodings[0]);\n            // Hack for VP9 SVC.\n            if (hackVp9Svc) {\n                newEncodings = [newEncodings[0]];\n            }\n            sendingRtpParameters.encodings = newEncodings;\n        }\n        // Otherwise if more than 1 encoding are given use them verbatim.\n        else {\n            sendingRtpParameters.encodings = encodings;\n        }\n        // If VP8 or H264 and there is effective simulcast, add scalabilityMode to\n        // each encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            (sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8' ||\n                sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/h264')) {\n            for (const encoding of sendingRtpParameters.encodings) {\n                if (encoding.scalabilityMode) {\n                    encoding.scalabilityMode = `L1T${layers.temporalLayers}`;\n                }\n                else {\n                    encoding.scalabilityMode = 'L1T3';\n                }\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            reuseMid: mediaSectionIdx.reuseMid,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions,\n            extmapAllowMixed: true\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        // Store in the map.\n        this._mapMidTransceiver.set(localId, transceiver);\n        return {\n            localId,\n            rtpParameters: sendingRtpParameters,\n            rtpSender: transceiver.sender\n        };\n    }\n    async stopSending(localId) {\n        this.assertSendDirection();\n        logger.debug('stopSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        transceiver.sender.replaceTrack(null);\n        this._pc.removeTrack(transceiver.sender);\n        const mediaSectionClosed = this._remoteSdp.closeMediaSection(transceiver.mid);\n        if (mediaSectionClosed) {\n            try {\n                transceiver.stop();\n            }\n            catch (error) { }\n        }\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        this._mapMidTransceiver.delete(localId);\n    }\n    async pauseSending(localId) {\n        this.assertSendDirection();\n        logger.debug('pauseSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        transceiver.direction = 'inactive';\n        this._remoteSdp.pauseMediaSection(localId);\n        const offer = await this._pc.createOffer();\n        logger.debug('pauseSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('pauseSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async resumeSending(localId) {\n        this.assertSendDirection();\n        logger.debug('resumeSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        this._remoteSdp.resumeSendingMediaSection(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        transceiver.direction = 'sendonly';\n        const offer = await this._pc.createOffer();\n        logger.debug('resumeSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('resumeSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async replaceTrack(localId, track) {\n        this.assertSendDirection();\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        await transceiver.sender.replaceTrack(track);\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        this.assertSendDirection();\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            if (idx <= spatialLayer) {\n                encoding.active = true;\n            }\n            else {\n                encoding.active = false;\n            }\n        });\n        await transceiver.sender.setParameters(parameters);\n        this._remoteSdp.muxMediaSectionSimulcast(localId, parameters.encodings);\n        const offer = await this._pc.createOffer();\n        logger.debug('setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        this.assertSendDirection();\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await transceiver.sender.setParameters(parameters);\n        this._remoteSdp.muxMediaSectionSimulcast(localId, parameters.encodings);\n        const offer = await this._pc.createOffer();\n        logger.debug('setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async getSenderStats(localId) {\n        this.assertSendDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        return transceiver.sender.getStats();\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        var _a;\n        this.assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive(optionsList) {\n        var _a;\n        this.assertRecvDirection();\n        const results = [];\n        const mapLocalId = new Map();\n        for (const options of optionsList) {\n            const { trackId, kind, rtpParameters, streamId } = options;\n            logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n            const localId = rtpParameters.mid || String(this._mapMidTransceiver.size);\n            mapLocalId.set(trackId, localId);\n            this._remoteSdp.receive({\n                mid: localId,\n                kind,\n                offerRtpParameters: rtpParameters,\n                streamId: streamId || rtpParameters.rtcp.cname,\n                trackId\n            });\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        for (const options of optionsList) {\n            const { trackId, rtpParameters } = options;\n            const localId = mapLocalId.get(trackId);\n            const answerMediaObject = localSdpObject.media\n                .find((m) => String(m.mid) === localId);\n            // May need to modify codec parameters in the answer based on codec\n            // parameters in the offer.\n            sdpCommonUtils.applyCodecParameters({\n                offerRtpParameters: rtpParameters,\n                answerMediaObject\n            });\n        }\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        for (const options of optionsList) {\n            const { trackId } = options;\n            const localId = mapLocalId.get(trackId);\n            const transceiver = this._pc.getTransceivers()\n                .find((t) => t.mid === localId);\n            if (!transceiver) {\n                throw new Error('new RTCRtpTransceiver not found');\n            }\n            else {\n                // Store in the map.\n                this._mapMidTransceiver.set(localId, transceiver);\n                results.push({\n                    localId,\n                    track: transceiver.receiver.track,\n                    rtpReceiver: transceiver.receiver\n                });\n            }\n        }\n        return results;\n    }\n    async stopReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('stopReceiving() [localId:%s]', localId);\n            const transceiver = this._mapMidTransceiver.get(localId);\n            if (!transceiver) {\n                throw new Error('associated RTCRtpTransceiver not found');\n            }\n            this._remoteSdp.closeMediaSection(transceiver.mid);\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        for (const localId of localIds) {\n            this._mapMidTransceiver.delete(localId);\n        }\n    }\n    async pauseReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('pauseReceiving() [localId:%s]', localId);\n            const transceiver = this._mapMidTransceiver.get(localId);\n            if (!transceiver) {\n                throw new Error('associated RTCRtpTransceiver not found');\n            }\n            transceiver.direction = 'inactive';\n            this._remoteSdp.pauseMediaSection(localId);\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('pauseReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async resumeReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('resumeReceiving() [localId:%s]', localId);\n            const transceiver = this._mapMidTransceiver.get(localId);\n            if (!transceiver) {\n                throw new Error('associated RTCRtpTransceiver not found');\n            }\n            transceiver.direction = 'recvonly';\n            this._remoteSdp.resumeReceivingMediaSection(localId);\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('resumeReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async getReceiverStats(localId) {\n        this.assertRecvDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        return transceiver.receiver.getStats();\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        var _a;\n        this.assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation();\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject) {\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        }\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@connect', { dtlsParameters }, resolve, reject);\n        });\n        this._transportReady = true;\n    }\n    assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.ReactNativeUnifiedPlan = ReactNativeUnifiedPlan;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Safari11 = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpPlanBUtils = __importStar(require(\"./sdp/planBUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst logger = new Logger_1.Logger('Safari11');\nconst SCTP_NUM_STREAMS = { OS: 1024, MIS: 1024 };\nclass Safari11 extends HandlerInterface_1.HandlerInterface {\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Safari11();\n    }\n    constructor() {\n        super();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Map of RTCRtpSender indexed by localId.\n        this._mapSendLocalIdRtpSender = new Map();\n        // Next sending localId.\n        this._nextSendLocalId = 0;\n        // Map of MID, RTP parameters and RTCRtpReceiver indexed by local id.\n        // Value is an Object with mid, rtpParameters and rtpReceiver.\n        this._mapRecvLocalIdInfo = new Map();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    get name() {\n        return 'Safari11';\n    }\n    close() {\n        logger.debug('close()');\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n        this.emit('@close');\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'plan-b'\n        });\n        try {\n            const offer = await pc.createOffer({\n                offerToReceiveAudio: true,\n                offerToReceiveVideo: true\n            });\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters,\n            planB: true\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        if (dtlsParameters.role && dtlsParameters.role !== 'auto') {\n            this._forcedLocalDtlsRole = dtlsParameters.role === 'server'\n                ? 'client'\n                : 'server';\n        }\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        if (this._pc.connectionState) {\n            this._pc.addEventListener('connectionstatechange', () => {\n                this.emit('@connectionstatechange', this._pc.connectionState);\n            });\n        }\n        else {\n            this._pc.addEventListener('iceconnectionstatechange', () => {\n                logger.warn('run() | pc.connectionState not supported, using pc.iceConnectionState');\n                switch (this._pc.iceConnectionState) {\n                    case 'checking':\n                        this.emit('@connectionstatechange', 'connecting');\n                        break;\n                    case 'connected':\n                    case 'completed':\n                        this.emit('@connectionstatechange', 'connected');\n                        break;\n                    case 'failed':\n                        this.emit('@connectionstatechange', 'failed');\n                        break;\n                    case 'disconnected':\n                        this.emit('@connectionstatechange', 'disconnected');\n                        break;\n                    case 'closed':\n                        this.emit('@connectionstatechange', 'closed');\n                        break;\n                }\n            });\n        }\n    }\n    async updateIceServers(iceServers) {\n        logger.debug('updateIceServers()');\n        const configuration = this._pc.getConfiguration();\n        configuration.iceServers = iceServers;\n        this._pc.setConfiguration(configuration);\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady) {\n            return;\n        }\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        var _a;\n        this.assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (codec) {\n            logger.warn('send() | codec selection is not available in %s handler', this.name);\n        }\n        this._sendStream.addTrack(track);\n        this._pc.addTrack(track, this._sendStream);\n        let offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        let offerMediaObject;\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs);\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        if (track.kind === 'video' && encodings && encodings.length > 1) {\n            logger.debug('send() | enabling simulcast');\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media.find((m) => m.type === 'video');\n            sdpPlanBUtils.addLegacySimulcast({\n                offerMediaObject,\n                track,\n                numStreams: encodings.length\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        offerMediaObject = localSdpObject.media\n            .find((m) => m.type === track.kind);\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings.\n        sendingRtpParameters.encodings =\n            sdpPlanBUtils.getRtpEncodings({ offerMediaObject, track });\n        // Complete encodings with given values.\n        if (encodings) {\n            for (let idx = 0; idx < sendingRtpParameters.encodings.length; ++idx) {\n                if (encodings[idx]) {\n                    Object.assign(sendingRtpParameters.encodings[idx], encodings[idx]);\n                }\n            }\n        }\n        // If VP8 and there is effective simulcast, add scalabilityMode to each\n        // encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8') {\n            for (const encoding of sendingRtpParameters.encodings) {\n                encoding.scalabilityMode = 'L1T3';\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        const localId = String(this._nextSendLocalId);\n        this._nextSendLocalId++;\n        const rtpSender = this._pc.getSenders()\n            .find((s) => s.track === track);\n        // Insert into the map.\n        this._mapSendLocalIdRtpSender.set(localId, rtpSender);\n        return {\n            localId: localId,\n            rtpParameters: sendingRtpParameters,\n            rtpSender\n        };\n    }\n    async stopSending(localId) {\n        this.assertSendDirection();\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender) {\n            throw new Error('associated RTCRtpSender not found');\n        }\n        if (rtpSender.track) {\n            this._sendStream.removeTrack(rtpSender.track);\n        }\n        this._mapSendLocalIdRtpSender.delete(localId);\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        try {\n            await this._pc.setLocalDescription(offer);\n        }\n        catch (error) {\n            // NOTE: If there are no sending tracks, setLocalDescription() will fail with\n            // \"Failed to create channels\". If so, ignore it.\n            if (this._sendStream.getTracks().length === 0) {\n                logger.warn('stopSending() | ignoring expected error due no sending tracks: %s', error.toString());\n                return;\n            }\n            throw error;\n        }\n        if (this._pc.signalingState === 'stable') {\n            return;\n        }\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async pauseSending(localId) {\n        // Unimplemented.\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async resumeSending(localId) {\n        // Unimplemented.\n    }\n    async replaceTrack(localId, track) {\n        this.assertSendDirection();\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender) {\n            throw new Error('associated RTCRtpSender not found');\n        }\n        const oldTrack = rtpSender.track;\n        await rtpSender.replaceTrack(track);\n        // Remove the old track from the local stream.\n        if (oldTrack) {\n            this._sendStream.removeTrack(oldTrack);\n        }\n        // Add the new track to the local stream.\n        if (track) {\n            this._sendStream.addTrack(track);\n        }\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        this.assertSendDirection();\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender) {\n            throw new Error('associated RTCRtpSender not found');\n        }\n        const parameters = rtpSender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            if (idx <= spatialLayer) {\n                encoding.active = true;\n            }\n            else {\n                encoding.active = false;\n            }\n        });\n        await rtpSender.setParameters(parameters);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        this.assertSendDirection();\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender) {\n            throw new Error('associated RTCRtpSender not found');\n        }\n        const parameters = rtpSender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await rtpSender.setParameters(parameters);\n    }\n    async getSenderStats(localId) {\n        this.assertSendDirection();\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender) {\n            throw new Error('associated RTCRtpSender not found');\n        }\n        return rtpSender.getStats();\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        var _a;\n        this.assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive(optionsList) {\n        var _a;\n        this.assertRecvDirection();\n        const results = [];\n        for (const options of optionsList) {\n            const { trackId, kind, rtpParameters, streamId } = options;\n            logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n            const mid = kind;\n            this._remoteSdp.receive({\n                mid,\n                kind,\n                offerRtpParameters: rtpParameters,\n                streamId: streamId || rtpParameters.rtcp.cname,\n                trackId\n            });\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        for (const options of optionsList) {\n            const { kind, rtpParameters } = options;\n            const mid = kind;\n            const answerMediaObject = localSdpObject.media\n                .find((m) => String(m.mid) === mid);\n            // May need to modify codec parameters in the answer based on codec\n            // parameters in the offer.\n            sdpCommonUtils.applyCodecParameters({\n                offerRtpParameters: rtpParameters,\n                answerMediaObject\n            });\n        }\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        for (const options of optionsList) {\n            const { kind, trackId, rtpParameters } = options;\n            const mid = kind;\n            const localId = trackId;\n            const rtpReceiver = this._pc.getReceivers()\n                .find((r) => r.track && r.track.id === localId);\n            if (!rtpReceiver) {\n                throw new Error('new RTCRtpReceiver not');\n            }\n            // Insert into the map.\n            this._mapRecvLocalIdInfo.set(localId, { mid, rtpParameters, rtpReceiver });\n            results.push({\n                localId,\n                track: rtpReceiver.track,\n                rtpReceiver\n            });\n        }\n        return results;\n    }\n    async stopReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('stopReceiving() [localId:%s]', localId);\n            const { mid, rtpParameters } = this._mapRecvLocalIdInfo.get(localId) || {};\n            // Remove from the map.\n            this._mapRecvLocalIdInfo.delete(localId);\n            this._remoteSdp.planBStopReceiving({ mid: mid, offerRtpParameters: rtpParameters });\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async getReceiverStats(localId) {\n        this.assertRecvDirection();\n        const { rtpReceiver } = this._mapRecvLocalIdInfo.get(localId) || {};\n        if (!rtpReceiver) {\n            throw new Error('associated RTCRtpReceiver not found');\n        }\n        return rtpReceiver.getStats();\n    }\n    async pauseReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localIds) {\n        // Unimplemented.\n    }\n    async resumeReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localIds) {\n        // Unimplemented.\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        var _a;\n        this.assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation({ oldDataChannelSpec: true });\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject) {\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        }\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@connect', { dtlsParameters }, resolve, reject);\n        });\n        this._transportReady = true;\n    }\n    assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.Safari11 = Safari11;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Safari12 = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpUnifiedPlanUtils = __importStar(require(\"./sdp/unifiedPlanUtils\"));\nconst ortcUtils = __importStar(require(\"./ortc/utils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst scalabilityModes_1 = require(\"../scalabilityModes\");\nconst logger = new Logger_1.Logger('Safari12');\nconst SCTP_NUM_STREAMS = { OS: 1024, MIS: 1024 };\nclass Safari12 extends HandlerInterface_1.HandlerInterface {\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Safari12();\n    }\n    constructor() {\n        super();\n        // Map of RTCTransceivers indexed by MID.\n        this._mapMidTransceiver = new Map();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    get name() {\n        return 'Safari12';\n    }\n    close() {\n        logger.debug('close()');\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n        this.emit('@close');\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require'\n        });\n        try {\n            pc.addTransceiver('audio');\n            pc.addTransceiver('video');\n            const offer = await pc.createOffer();\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            // libwebrtc supports NACK for OPUS but doesn't announce it.\n            ortcUtils.addNackSuppportForOpus(nativeRtpCapabilities);\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        if (dtlsParameters.role && dtlsParameters.role !== 'auto') {\n            this._forcedLocalDtlsRole = dtlsParameters.role === 'server'\n                ? 'client'\n                : 'server';\n        }\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        if (this._pc.connectionState) {\n            this._pc.addEventListener('connectionstatechange', () => {\n                this.emit('@connectionstatechange', this._pc.connectionState);\n            });\n        }\n        else {\n            this._pc.addEventListener('iceconnectionstatechange', () => {\n                logger.warn('run() | pc.connectionState not supported, using pc.iceConnectionState');\n                switch (this._pc.iceConnectionState) {\n                    case 'checking':\n                        this.emit('@connectionstatechange', 'connecting');\n                        break;\n                    case 'connected':\n                    case 'completed':\n                        this.emit('@connectionstatechange', 'connected');\n                        break;\n                    case 'failed':\n                        this.emit('@connectionstatechange', 'failed');\n                        break;\n                    case 'disconnected':\n                        this.emit('@connectionstatechange', 'disconnected');\n                        break;\n                    case 'closed':\n                        this.emit('@connectionstatechange', 'closed');\n                        break;\n                }\n            });\n        }\n    }\n    async updateIceServers(iceServers) {\n        logger.debug('updateIceServers()');\n        const configuration = this._pc.getConfiguration();\n        configuration.iceServers = iceServers;\n        this._pc.setConfiguration(configuration);\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady) {\n            return;\n        }\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        var _a;\n        this.assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs, codec);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs, codec);\n        const mediaSectionIdx = this._remoteSdp.getNextMediaSectionIdx();\n        const transceiver = this._pc.addTransceiver(track, { direction: 'sendonly', streams: [this._sendStream] });\n        let offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        let offerMediaObject;\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        const layers = (0, scalabilityModes_1.parse)((encodings || [{}])[0].scalabilityMode);\n        if (encodings && encodings.length > 1) {\n            logger.debug('send() | enabling legacy simulcast');\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n            sdpUnifiedPlanUtils.addLegacySimulcast({\n                offerMediaObject,\n                numStreams: encodings.length\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        // We can now get the transceiver.mid.\n        const localId = transceiver.mid;\n        // Set MID.\n        sendingRtpParameters.mid = localId;\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings.\n        sendingRtpParameters.encodings =\n            sdpUnifiedPlanUtils.getRtpEncodings({ offerMediaObject });\n        // Complete encodings with given values.\n        if (encodings) {\n            for (let idx = 0; idx < sendingRtpParameters.encodings.length; ++idx) {\n                if (encodings[idx]) {\n                    Object.assign(sendingRtpParameters.encodings[idx], encodings[idx]);\n                }\n            }\n        }\n        // If VP8 or H264 and there is effective simulcast, add scalabilityMode to\n        // each encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            (sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8' ||\n                sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/h264')) {\n            for (const encoding of sendingRtpParameters.encodings) {\n                if (encoding.scalabilityMode) {\n                    encoding.scalabilityMode = `L1T${layers.temporalLayers}`;\n                }\n                else {\n                    encoding.scalabilityMode = 'L1T3';\n                }\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            reuseMid: mediaSectionIdx.reuseMid,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        // Store in the map.\n        this._mapMidTransceiver.set(localId, transceiver);\n        return {\n            localId,\n            rtpParameters: sendingRtpParameters,\n            rtpSender: transceiver.sender\n        };\n    }\n    async stopSending(localId) {\n        this.assertSendDirection();\n        logger.debug('stopSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        transceiver.sender.replaceTrack(null);\n        this._pc.removeTrack(transceiver.sender);\n        const mediaSectionClosed = this._remoteSdp.closeMediaSection(transceiver.mid);\n        if (mediaSectionClosed) {\n            try {\n                transceiver.stop();\n            }\n            catch (error) { }\n        }\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        this._mapMidTransceiver.delete(localId);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async pauseSending(localId) {\n        this.assertSendDirection();\n        logger.debug('pauseSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        transceiver.direction = 'inactive';\n        this._remoteSdp.pauseMediaSection(localId);\n        const offer = await this._pc.createOffer();\n        logger.debug('pauseSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('pauseSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async resumeSending(localId) {\n        this.assertSendDirection();\n        logger.debug('resumeSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        transceiver.direction = 'sendonly';\n        this._remoteSdp.resumeSendingMediaSection(localId);\n        const offer = await this._pc.createOffer();\n        logger.debug('resumeSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('resumeSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async replaceTrack(localId, track) {\n        this.assertSendDirection();\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        await transceiver.sender.replaceTrack(track);\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        this.assertSendDirection();\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            if (idx <= spatialLayer) {\n                encoding.active = true;\n            }\n            else {\n                encoding.active = false;\n            }\n        });\n        await transceiver.sender.setParameters(parameters);\n        this._remoteSdp.muxMediaSectionSimulcast(localId, parameters.encodings);\n        const offer = await this._pc.createOffer();\n        logger.debug('setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        this.assertSendDirection();\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await transceiver.sender.setParameters(parameters);\n        this._remoteSdp.muxMediaSectionSimulcast(localId, parameters.encodings);\n        const offer = await this._pc.createOffer();\n        logger.debug('setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async getSenderStats(localId) {\n        this.assertSendDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        return transceiver.sender.getStats();\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        var _a;\n        this.assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive(optionsList) {\n        var _a;\n        this.assertRecvDirection();\n        const results = [];\n        const mapLocalId = new Map();\n        for (const options of optionsList) {\n            const { trackId, kind, rtpParameters, streamId } = options;\n            logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n            const localId = rtpParameters.mid || String(this._mapMidTransceiver.size);\n            mapLocalId.set(trackId, localId);\n            this._remoteSdp.receive({\n                mid: localId,\n                kind,\n                offerRtpParameters: rtpParameters,\n                streamId: streamId || rtpParameters.rtcp.cname,\n                trackId\n            });\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        for (const options of optionsList) {\n            const { trackId, rtpParameters } = options;\n            const localId = mapLocalId.get(trackId);\n            const answerMediaObject = localSdpObject.media\n                .find((m) => String(m.mid) === localId);\n            // May need to modify codec parameters in the answer based on codec\n            // parameters in the offer.\n            sdpCommonUtils.applyCodecParameters({\n                offerRtpParameters: rtpParameters,\n                answerMediaObject\n            });\n        }\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady) {\n            await this.setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        for (const options of optionsList) {\n            const { trackId } = options;\n            const localId = mapLocalId.get(trackId);\n            const transceiver = this._pc.getTransceivers()\n                .find((t) => t.mid === localId);\n            if (!transceiver) {\n                throw new Error('new RTCRtpTransceiver not found');\n            }\n            // Store in the map.\n            this._mapMidTransceiver.set(localId, transceiver);\n            results.push({\n                localId,\n                track: transceiver.receiver.track,\n                rtpReceiver: transceiver.receiver\n            });\n        }\n        return results;\n    }\n    async stopReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('stopReceiving() [localId:%s]', localId);\n            const transceiver = this._mapMidTransceiver.get(localId);\n            if (!transceiver) {\n                throw new Error('associated RTCRtpTransceiver not found');\n            }\n            this._remoteSdp.closeMediaSection(transceiver.mid);\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        for (const localId of localIds) {\n            this._mapMidTransceiver.delete(localId);\n        }\n    }\n    async pauseReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('pauseReceiving() [localId:%s]', localId);\n            const transceiver = this._mapMidTransceiver.get(localId);\n            if (!transceiver) {\n                throw new Error('associated RTCRtpTransceiver not found');\n            }\n            transceiver.direction = 'inactive';\n            this._remoteSdp.pauseMediaSection(localId);\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('pauseReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async resumeReceiving(localIds) {\n        this.assertRecvDirection();\n        for (const localId of localIds) {\n            logger.debug('resumeReceiving() [localId:%s]', localId);\n            const transceiver = this._mapMidTransceiver.get(localId);\n            if (!transceiver) {\n                throw new Error('associated RTCRtpTransceiver not found');\n            }\n            transceiver.direction = 'recvonly';\n            this._remoteSdp.resumeReceivingMediaSection(localId);\n        }\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('resumeReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async getReceiverStats(localId) {\n        this.assertRecvDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver) {\n            throw new Error('associated RTCRtpTransceiver not found');\n        }\n        return transceiver.receiver.getStats();\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        var _a;\n        this.assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation();\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this.setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject) {\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        }\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await new Promise((resolve, reject) => {\n            this.safeEmit('@connect', { dtlsParameters }, resolve, reject);\n        });\n        this._transportReady = true;\n    }\n    assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.Safari12 = Safari12;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mangleRtpParameters = exports.getCapabilities = void 0;\nconst utils = __importStar(require(\"../../utils\"));\n/**\n * Normalize ORTC based Edge's RTCRtpReceiver.getCapabilities() to produce a full\n * compliant ORTC RTCRtpCapabilities.\n */\nfunction getCapabilities() {\n    const nativeCaps = RTCRtpReceiver.getCapabilities();\n    const caps = utils.clone(nativeCaps, {});\n    for (const codec of caps.codecs) {\n        // Rename numChannels to channels.\n        codec.channels = codec.numChannels;\n        delete codec.numChannels;\n        // Add mimeType.\n        codec.mimeType = codec.mimeType || `${codec.kind}/${codec.name}`;\n        // NOTE: Edge sets some numeric parameters as string rather than number. Fix them.\n        if (codec.parameters) {\n            const parameters = codec.parameters;\n            if (parameters.apt) {\n                parameters.apt = Number(parameters.apt);\n            }\n            if (parameters['packetization-mode']) {\n                parameters['packetization-mode'] = Number(parameters['packetization-mode']);\n            }\n        }\n        // Delete emty parameter String in rtcpFeedback.\n        for (const feedback of codec.rtcpFeedback || []) {\n            if (!feedback.parameter) {\n                feedback.parameter = '';\n            }\n        }\n    }\n    return caps;\n}\nexports.getCapabilities = getCapabilities;\n/**\n * Generate RTCRtpParameters as ORTC based Edge likes.\n */\nfunction mangleRtpParameters(rtpParameters) {\n    const params = utils.clone(rtpParameters, {});\n    // Rename mid to muxId.\n    if (params.mid) {\n        params.muxId = params.mid;\n        delete params.mid;\n    }\n    for (const codec of params.codecs) {\n        // Rename channels to numChannels.\n        if (codec.channels) {\n            codec.numChannels = codec.channels;\n            delete codec.channels;\n        }\n        // Add codec.name (requried by Edge).\n        if (codec.mimeType && !codec.name) {\n            codec.name = codec.mimeType.split('/')[1];\n        }\n        // Remove mimeType.\n        delete codec.mimeType;\n    }\n    return params;\n}\nexports.mangleRtpParameters = mangleRtpParameters;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addNackSuppportForOpus = void 0;\n/**\n * This function adds RTCP NACK support for OPUS codec in given capabilities.\n */\nfunction addNackSuppportForOpus(rtpCapabilities) {\n    var _a;\n    for (const codec of (rtpCapabilities.codecs || [])) {\n        if ((codec.mimeType.toLowerCase() === 'audio/opus' ||\n            codec.mimeType.toLowerCase() === 'audio/multiopus') &&\n            !((_a = codec.rtcpFeedback) === null || _a === void 0 ? void 0 : _a.some((fb) => fb.type === 'nack' && !fb.parameter))) {\n            if (!codec.rtcpFeedback) {\n                codec.rtcpFeedback = [];\n            }\n            codec.rtcpFeedback.push({ type: 'nack' });\n        }\n    }\n}\nexports.addNackSuppportForOpus = addNackSuppportForOpus;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OfferMediaSection = exports.AnswerMediaSection = exports.MediaSection = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst utils = __importStar(require(\"../../utils\"));\nclass MediaSection {\n    constructor({ iceParameters, iceCandidates, dtlsParameters, planB = false }) {\n        this._mediaObject = {};\n        this._planB = planB;\n        if (iceParameters) {\n            this.setIceParameters(iceParameters);\n        }\n        if (iceCandidates) {\n            this._mediaObject.candidates = [];\n            for (const candidate of iceCandidates) {\n                const candidateObject = {};\n                // mediasoup does mandates rtcp-mux so candidates component is always\n                // RTP (1).\n                candidateObject.component = 1;\n                candidateObject.foundation = candidate.foundation;\n                candidateObject.ip = candidate.ip;\n                candidateObject.port = candidate.port;\n                candidateObject.priority = candidate.priority;\n                candidateObject.transport = candidate.protocol;\n                candidateObject.type = candidate.type;\n                if (candidate.tcpType) {\n                    candidateObject.tcptype = candidate.tcpType;\n                }\n                this._mediaObject.candidates.push(candidateObject);\n            }\n            this._mediaObject.endOfCandidates = 'end-of-candidates';\n            this._mediaObject.iceOptions = 'renomination';\n        }\n        if (dtlsParameters) {\n            this.setDtlsRole(dtlsParameters.role);\n        }\n    }\n    get mid() {\n        return String(this._mediaObject.mid);\n    }\n    get closed() {\n        return this._mediaObject.port === 0;\n    }\n    getObject() {\n        return this._mediaObject;\n    }\n    setIceParameters(iceParameters) {\n        this._mediaObject.iceUfrag = iceParameters.usernameFragment;\n        this._mediaObject.icePwd = iceParameters.password;\n    }\n    pause() {\n        this._mediaObject.direction = 'inactive';\n    }\n    disable() {\n        this.pause();\n        delete this._mediaObject.ext;\n        delete this._mediaObject.ssrcs;\n        delete this._mediaObject.ssrcGroups;\n        delete this._mediaObject.simulcast;\n        delete this._mediaObject.simulcast_03;\n        delete this._mediaObject.rids;\n        delete this._mediaObject.extmapAllowMixed;\n    }\n    close() {\n        this.disable();\n        this._mediaObject.port = 0;\n    }\n}\nexports.MediaSection = MediaSection;\nclass AnswerMediaSection extends MediaSection {\n    constructor({ iceParameters, iceCandidates, dtlsParameters, sctpParameters, plainRtpParameters, planB = false, offerMediaObject, offerRtpParameters, answerRtpParameters, codecOptions, extmapAllowMixed = false }) {\n        super({ iceParameters, iceCandidates, dtlsParameters, planB });\n        this._mediaObject.mid = String(offerMediaObject.mid);\n        this._mediaObject.type = offerMediaObject.type;\n        this._mediaObject.protocol = offerMediaObject.protocol;\n        if (!plainRtpParameters) {\n            this._mediaObject.connection = { ip: '127.0.0.1', version: 4 };\n            this._mediaObject.port = 7;\n        }\n        else {\n            this._mediaObject.connection =\n                {\n                    ip: plainRtpParameters.ip,\n                    version: plainRtpParameters.ipVersion\n                };\n            this._mediaObject.port = plainRtpParameters.port;\n        }\n        switch (offerMediaObject.type) {\n            case 'audio':\n            case 'video':\n                {\n                    this._mediaObject.direction = 'recvonly';\n                    this._mediaObject.rtp = [];\n                    this._mediaObject.rtcpFb = [];\n                    this._mediaObject.fmtp = [];\n                    for (const codec of answerRtpParameters.codecs) {\n                        const rtp = {\n                            payload: codec.payloadType,\n                            codec: getCodecName(codec),\n                            rate: codec.clockRate\n                        };\n                        if (codec.channels > 1) {\n                            rtp.encoding = codec.channels;\n                        }\n                        this._mediaObject.rtp.push(rtp);\n                        const codecParameters = utils.clone(codec.parameters, {});\n                        let codecRtcpFeedback = utils.clone(codec.rtcpFeedback, []);\n                        if (codecOptions) {\n                            const { opusStereo, opusFec, opusDtx, opusMaxPlaybackRate, opusMaxAverageBitrate, opusPtime, opusNack, videoGoogleStartBitrate, videoGoogleMaxBitrate, videoGoogleMinBitrate } = codecOptions;\n                            const offerCodec = offerRtpParameters.codecs\n                                .find((c) => (c.payloadType === codec.payloadType));\n                            switch (codec.mimeType.toLowerCase()) {\n                                case 'audio/opus':\n                                case 'audio/multiopus':\n                                    {\n                                        if (opusStereo !== undefined) {\n                                            offerCodec.parameters['sprop-stereo'] = opusStereo ? 1 : 0;\n                                            codecParameters.stereo = opusStereo ? 1 : 0;\n                                        }\n                                        if (opusFec !== undefined) {\n                                            offerCodec.parameters.useinbandfec = opusFec ? 1 : 0;\n                                            codecParameters.useinbandfec = opusFec ? 1 : 0;\n                                        }\n                                        if (opusDtx !== undefined) {\n                                            offerCodec.parameters.usedtx = opusDtx ? 1 : 0;\n                                            codecParameters.usedtx = opusDtx ? 1 : 0;\n                                        }\n                                        if (opusMaxPlaybackRate !== undefined) {\n                                            codecParameters.maxplaybackrate = opusMaxPlaybackRate;\n                                        }\n                                        if (opusMaxAverageBitrate !== undefined) {\n                                            codecParameters.maxaveragebitrate = opusMaxAverageBitrate;\n                                        }\n                                        if (opusPtime !== undefined) {\n                                            offerCodec.parameters.ptime = opusPtime;\n                                            codecParameters.ptime = opusPtime;\n                                        }\n                                        // If opusNack is not set, we must remove NACK support for OPUS.\n                                        // Otherwise it would be enabled for those handlers that artificially\n                                        // announce it in their RTP capabilities.\n                                        if (!opusNack) {\n                                            offerCodec.rtcpFeedback = offerCodec\n                                                .rtcpFeedback\n                                                .filter((fb) => fb.type !== 'nack' || fb.parameter);\n                                            codecRtcpFeedback = codecRtcpFeedback\n                                                .filter((fb) => fb.type !== 'nack' || fb.parameter);\n                                        }\n                                        break;\n                                    }\n                                case 'video/vp8':\n                                case 'video/vp9':\n                                case 'video/h264':\n                                case 'video/h265':\n                                    {\n                                        if (videoGoogleStartBitrate !== undefined) {\n                                            codecParameters['x-google-start-bitrate'] = videoGoogleStartBitrate;\n                                        }\n                                        if (videoGoogleMaxBitrate !== undefined) {\n                                            codecParameters['x-google-max-bitrate'] = videoGoogleMaxBitrate;\n                                        }\n                                        if (videoGoogleMinBitrate !== undefined) {\n                                            codecParameters['x-google-min-bitrate'] = videoGoogleMinBitrate;\n                                        }\n                                        break;\n                                    }\n                            }\n                        }\n                        const fmtp = {\n                            payload: codec.payloadType,\n                            config: ''\n                        };\n                        for (const key of Object.keys(codecParameters)) {\n                            if (fmtp.config) {\n                                fmtp.config += ';';\n                            }\n                            fmtp.config += `${key}=${codecParameters[key]}`;\n                        }\n                        if (fmtp.config) {\n                            this._mediaObject.fmtp.push(fmtp);\n                        }\n                        for (const fb of codecRtcpFeedback) {\n                            this._mediaObject.rtcpFb.push({\n                                payload: codec.payloadType,\n                                type: fb.type,\n                                subtype: fb.parameter\n                            });\n                        }\n                    }\n                    this._mediaObject.payloads = answerRtpParameters.codecs\n                        .map((codec) => codec.payloadType)\n                        .join(' ');\n                    this._mediaObject.ext = [];\n                    for (const ext of answerRtpParameters.headerExtensions) {\n                        // Don't add a header extension if not present in the offer.\n                        const found = (offerMediaObject.ext || [])\n                            .some((localExt) => localExt.uri === ext.uri);\n                        if (!found) {\n                            continue;\n                        }\n                        this._mediaObject.ext.push({\n                            uri: ext.uri,\n                            value: ext.id\n                        });\n                    }\n                    // Allow both 1 byte and 2 bytes length header extensions.\n                    if (extmapAllowMixed &&\n                        offerMediaObject.extmapAllowMixed === 'extmap-allow-mixed') {\n                        this._mediaObject.extmapAllowMixed = 'extmap-allow-mixed';\n                    }\n                    // Simulcast.\n                    if (offerMediaObject.simulcast) {\n                        this._mediaObject.simulcast =\n                            {\n                                dir1: 'recv',\n                                list1: offerMediaObject.simulcast.list1\n                            };\n                        this._mediaObject.rids = [];\n                        for (const rid of offerMediaObject.rids || []) {\n                            if (rid.direction !== 'send') {\n                                continue;\n                            }\n                            this._mediaObject.rids.push({\n                                id: rid.id,\n                                direction: 'recv'\n                            });\n                        }\n                    }\n                    // Simulcast (draft version 03).\n                    else if (offerMediaObject.simulcast_03) {\n                        // eslint-disable-next-line camelcase\n                        this._mediaObject.simulcast_03 =\n                            {\n                                value: offerMediaObject.simulcast_03.value.replace(/send/g, 'recv')\n                            };\n                        this._mediaObject.rids = [];\n                        for (const rid of offerMediaObject.rids || []) {\n                            if (rid.direction !== 'send') {\n                                continue;\n                            }\n                            this._mediaObject.rids.push({\n                                id: rid.id,\n                                direction: 'recv'\n                            });\n                        }\n                    }\n                    this._mediaObject.rtcpMux = 'rtcp-mux';\n                    this._mediaObject.rtcpRsize = 'rtcp-rsize';\n                    if (this._planB && this._mediaObject.type === 'video') {\n                        this._mediaObject.xGoogleFlag = 'conference';\n                    }\n                    break;\n                }\n            case 'application':\n                {\n                    // New spec.\n                    if (typeof offerMediaObject.sctpPort === 'number') {\n                        this._mediaObject.payloads = 'webrtc-datachannel';\n                        this._mediaObject.sctpPort = sctpParameters.port;\n                        this._mediaObject.maxMessageSize = sctpParameters.maxMessageSize;\n                    }\n                    // Old spec.\n                    else if (offerMediaObject.sctpmap) {\n                        this._mediaObject.payloads = sctpParameters.port;\n                        this._mediaObject.sctpmap =\n                            {\n                                app: 'webrtc-datachannel',\n                                sctpmapNumber: sctpParameters.port,\n                                maxMessageSize: sctpParameters.maxMessageSize\n                            };\n                    }\n                    break;\n                }\n        }\n    }\n    setDtlsRole(role) {\n        switch (role) {\n            case 'client':\n                this._mediaObject.setup = 'active';\n                break;\n            case 'server':\n                this._mediaObject.setup = 'passive';\n                break;\n            case 'auto':\n                this._mediaObject.setup = 'actpass';\n                break;\n        }\n    }\n    resume() {\n        this._mediaObject.direction = 'recvonly';\n    }\n    muxSimulcastStreams(encodings) {\n        var _a;\n        if (!this._mediaObject.simulcast || !this._mediaObject.simulcast.list1) {\n            return;\n        }\n        const layers = {};\n        for (const encoding of encodings) {\n            if (encoding.rid) {\n                layers[encoding.rid] = encoding;\n            }\n        }\n        const raw = this._mediaObject.simulcast.list1;\n        // NOTE: Ignore bug in @types/sdp-transform.\n        // Ongoing PR: https://github.com/DefinitelyTyped/DefinitelyTyped/pull/64119\n        // @ts-ignore\n        const simulcastStreams = sdpTransform.parseSimulcastStreamList(raw);\n        for (const simulcastStream of simulcastStreams) {\n            for (const simulcastFormat of simulcastStream) {\n                simulcastFormat.paused = !((_a = layers[simulcastFormat.scid]) === null || _a === void 0 ? void 0 : _a.active);\n            }\n        }\n        this._mediaObject.simulcast.list1 = simulcastStreams.map((simulcastFormats) => simulcastFormats.map((f) => `${f.paused ? '~' : ''}${f.scid}`).join(',')).join(';');\n    }\n}\nexports.AnswerMediaSection = AnswerMediaSection;\nclass OfferMediaSection extends MediaSection {\n    constructor({ iceParameters, iceCandidates, dtlsParameters, sctpParameters, plainRtpParameters, planB = false, mid, kind, offerRtpParameters, streamId, trackId, oldDataChannelSpec = false }) {\n        super({ iceParameters, iceCandidates, dtlsParameters, planB });\n        this._mediaObject.mid = String(mid);\n        this._mediaObject.type = kind;\n        if (!plainRtpParameters) {\n            this._mediaObject.connection = { ip: '127.0.0.1', version: 4 };\n            if (!sctpParameters) {\n                this._mediaObject.protocol = 'UDP/TLS/RTP/SAVPF';\n            }\n            else {\n                this._mediaObject.protocol = 'UDP/DTLS/SCTP';\n            }\n            this._mediaObject.port = 7;\n        }\n        else {\n            this._mediaObject.connection =\n                {\n                    ip: plainRtpParameters.ip,\n                    version: plainRtpParameters.ipVersion\n                };\n            this._mediaObject.protocol = 'RTP/AVP';\n            this._mediaObject.port = plainRtpParameters.port;\n        }\n        switch (kind) {\n            case 'audio':\n            case 'video':\n                {\n                    this._mediaObject.direction = 'sendonly';\n                    this._mediaObject.rtp = [];\n                    this._mediaObject.rtcpFb = [];\n                    this._mediaObject.fmtp = [];\n                    if (!this._planB) {\n                        this._mediaObject.msid = `${streamId || '-'} ${trackId}`;\n                    }\n                    for (const codec of offerRtpParameters.codecs) {\n                        const rtp = {\n                            payload: codec.payloadType,\n                            codec: getCodecName(codec),\n                            rate: codec.clockRate\n                        };\n                        if (codec.channels > 1) {\n                            rtp.encoding = codec.channels;\n                        }\n                        this._mediaObject.rtp.push(rtp);\n                        const fmtp = {\n                            payload: codec.payloadType,\n                            config: ''\n                        };\n                        for (const key of Object.keys(codec.parameters)) {\n                            if (fmtp.config) {\n                                fmtp.config += ';';\n                            }\n                            fmtp.config += `${key}=${codec.parameters[key]}`;\n                        }\n                        if (fmtp.config) {\n                            this._mediaObject.fmtp.push(fmtp);\n                        }\n                        for (const fb of codec.rtcpFeedback) {\n                            this._mediaObject.rtcpFb.push({\n                                payload: codec.payloadType,\n                                type: fb.type,\n                                subtype: fb.parameter\n                            });\n                        }\n                    }\n                    this._mediaObject.payloads = offerRtpParameters.codecs\n                        .map((codec) => codec.payloadType)\n                        .join(' ');\n                    this._mediaObject.ext = [];\n                    for (const ext of offerRtpParameters.headerExtensions) {\n                        this._mediaObject.ext.push({\n                            uri: ext.uri,\n                            value: ext.id\n                        });\n                    }\n                    this._mediaObject.rtcpMux = 'rtcp-mux';\n                    this._mediaObject.rtcpRsize = 'rtcp-rsize';\n                    const encoding = offerRtpParameters.encodings[0];\n                    const ssrc = encoding.ssrc;\n                    const rtxSsrc = (encoding.rtx && encoding.rtx.ssrc)\n                        ? encoding.rtx.ssrc\n                        : undefined;\n                    this._mediaObject.ssrcs = [];\n                    this._mediaObject.ssrcGroups = [];\n                    if (offerRtpParameters.rtcp.cname) {\n                        this._mediaObject.ssrcs.push({\n                            id: ssrc,\n                            attribute: 'cname',\n                            value: offerRtpParameters.rtcp.cname\n                        });\n                    }\n                    if (this._planB) {\n                        this._mediaObject.ssrcs.push({\n                            id: ssrc,\n                            attribute: 'msid',\n                            value: `${streamId || '-'} ${trackId}`\n                        });\n                    }\n                    if (rtxSsrc) {\n                        if (offerRtpParameters.rtcp.cname) {\n                            this._mediaObject.ssrcs.push({\n                                id: rtxSsrc,\n                                attribute: 'cname',\n                                value: offerRtpParameters.rtcp.cname\n                            });\n                        }\n                        if (this._planB) {\n                            this._mediaObject.ssrcs.push({\n                                id: rtxSsrc,\n                                attribute: 'msid',\n                                value: `${streamId || '-'} ${trackId}`\n                            });\n                        }\n                        // Associate original and retransmission SSRCs.\n                        this._mediaObject.ssrcGroups.push({\n                            semantics: 'FID',\n                            ssrcs: `${ssrc} ${rtxSsrc}`\n                        });\n                    }\n                    break;\n                }\n            case 'application':\n                {\n                    // New spec.\n                    if (!oldDataChannelSpec) {\n                        this._mediaObject.payloads = 'webrtc-datachannel';\n                        this._mediaObject.sctpPort = sctpParameters.port;\n                        this._mediaObject.maxMessageSize = sctpParameters.maxMessageSize;\n                    }\n                    // Old spec.\n                    else {\n                        this._mediaObject.payloads = sctpParameters.port;\n                        this._mediaObject.sctpmap =\n                            {\n                                app: 'webrtc-datachannel',\n                                sctpmapNumber: sctpParameters.port,\n                                maxMessageSize: sctpParameters.maxMessageSize\n                            };\n                    }\n                    break;\n                }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setDtlsRole(role) {\n        // Always 'actpass'.\n        this._mediaObject.setup = 'actpass';\n    }\n    resume() {\n        this._mediaObject.direction = 'sendonly';\n    }\n    planBReceive({ offerRtpParameters, streamId, trackId }) {\n        const encoding = offerRtpParameters.encodings[0];\n        const ssrc = encoding.ssrc;\n        const rtxSsrc = (encoding.rtx && encoding.rtx.ssrc)\n            ? encoding.rtx.ssrc\n            : undefined;\n        const payloads = this._mediaObject.payloads.split(' ');\n        for (const codec of offerRtpParameters.codecs) {\n            if (payloads.includes(String(codec.payloadType))) {\n                continue;\n            }\n            const rtp = {\n                payload: codec.payloadType,\n                codec: getCodecName(codec),\n                rate: codec.clockRate\n            };\n            if (codec.channels > 1) {\n                rtp.encoding = codec.channels;\n            }\n            this._mediaObject.rtp.push(rtp);\n            const fmtp = {\n                payload: codec.payloadType,\n                config: ''\n            };\n            for (const key of Object.keys(codec.parameters)) {\n                if (fmtp.config) {\n                    fmtp.config += ';';\n                }\n                fmtp.config += `${key}=${codec.parameters[key]}`;\n            }\n            if (fmtp.config) {\n                this._mediaObject.fmtp.push(fmtp);\n            }\n            for (const fb of codec.rtcpFeedback) {\n                this._mediaObject.rtcpFb.push({\n                    payload: codec.payloadType,\n                    type: fb.type,\n                    subtype: fb.parameter\n                });\n            }\n        }\n        this._mediaObject.payloads += ` ${offerRtpParameters\n            .codecs\n            .filter((codec) => !this._mediaObject.payloads.includes(codec.payloadType))\n            .map((codec) => codec.payloadType)\n            .join(' ')}`;\n        this._mediaObject.payloads = this._mediaObject.payloads.trim();\n        if (offerRtpParameters.rtcp.cname) {\n            this._mediaObject.ssrcs.push({\n                id: ssrc,\n                attribute: 'cname',\n                value: offerRtpParameters.rtcp.cname\n            });\n        }\n        this._mediaObject.ssrcs.push({\n            id: ssrc,\n            attribute: 'msid',\n            value: `${streamId || '-'} ${trackId}`\n        });\n        if (rtxSsrc) {\n            if (offerRtpParameters.rtcp.cname) {\n                this._mediaObject.ssrcs.push({\n                    id: rtxSsrc,\n                    attribute: 'cname',\n                    value: offerRtpParameters.rtcp.cname\n                });\n            }\n            this._mediaObject.ssrcs.push({\n                id: rtxSsrc,\n                attribute: 'msid',\n                value: `${streamId || '-'} ${trackId}`\n            });\n            // Associate original and retransmission SSRCs.\n            this._mediaObject.ssrcGroups.push({\n                semantics: 'FID',\n                ssrcs: `${ssrc} ${rtxSsrc}`\n            });\n        }\n    }\n    planBStopReceiving({ offerRtpParameters }) {\n        const encoding = offerRtpParameters.encodings[0];\n        const ssrc = encoding.ssrc;\n        const rtxSsrc = (encoding.rtx && encoding.rtx.ssrc)\n            ? encoding.rtx.ssrc\n            : undefined;\n        this._mediaObject.ssrcs = this._mediaObject.ssrcs\n            .filter((s) => s.id !== ssrc && s.id !== rtxSsrc);\n        if (rtxSsrc) {\n            this._mediaObject.ssrcGroups = this._mediaObject.ssrcGroups\n                .filter((group) => group.ssrcs !== `${ssrc} ${rtxSsrc}`);\n        }\n    }\n}\nexports.OfferMediaSection = OfferMediaSection;\nfunction getCodecName(codec) {\n    const MimeTypeRegex = new RegExp('^(audio|video)/(.+)', 'i');\n    const mimeTypeMatch = MimeTypeRegex.exec(codec.mimeType);\n    if (!mimeTypeMatch) {\n        throw new TypeError('invalid codec.mimeType');\n    }\n    return mimeTypeMatch[2];\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RemoteSdp = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../../Logger\");\nconst MediaSection_1 = require(\"./MediaSection\");\nconst logger = new Logger_1.Logger('RemoteSdp');\nclass RemoteSdp {\n    constructor({ iceParameters, iceCandidates, dtlsParameters, sctpParameters, plainRtpParameters, planB = false }) {\n        // MediaSection instances with same order as in the SDP.\n        this._mediaSections = [];\n        // MediaSection indices indexed by MID.\n        this._midToIndex = new Map();\n        this._iceParameters = iceParameters;\n        this._iceCandidates = iceCandidates;\n        this._dtlsParameters = dtlsParameters;\n        this._sctpParameters = sctpParameters;\n        this._plainRtpParameters = plainRtpParameters;\n        this._planB = planB;\n        this._sdpObject =\n            {\n                version: 0,\n                origin: {\n                    address: '0.0.0.0',\n                    ipVer: 4,\n                    netType: 'IN',\n                    sessionId: 10000,\n                    sessionVersion: 0,\n                    username: 'mediasoup-client'\n                },\n                name: '-',\n                timing: { start: 0, stop: 0 },\n                media: []\n            };\n        // If ICE parameters are given, add ICE-Lite indicator.\n        if (iceParameters && iceParameters.iceLite) {\n            this._sdpObject.icelite = 'ice-lite';\n        }\n        // If DTLS parameters are given, assume WebRTC and BUNDLE.\n        if (dtlsParameters) {\n            this._sdpObject.msidSemantic = { semantic: 'WMS', token: '*' };\n            // NOTE: We take the latest fingerprint.\n            const numFingerprints = this._dtlsParameters.fingerprints.length;\n            this._sdpObject.fingerprint =\n                {\n                    type: dtlsParameters.fingerprints[numFingerprints - 1].algorithm,\n                    hash: dtlsParameters.fingerprints[numFingerprints - 1].value\n                };\n            this._sdpObject.groups = [{ type: 'BUNDLE', mids: '' }];\n        }\n        // If there are plain RPT parameters, override SDP origin.\n        if (plainRtpParameters) {\n            this._sdpObject.origin.address = plainRtpParameters.ip;\n            this._sdpObject.origin.ipVer = plainRtpParameters.ipVersion;\n        }\n    }\n    updateIceParameters(iceParameters) {\n        logger.debug('updateIceParameters() [iceParameters:%o]', iceParameters);\n        this._iceParameters = iceParameters;\n        this._sdpObject.icelite = iceParameters.iceLite ? 'ice-lite' : undefined;\n        for (const mediaSection of this._mediaSections) {\n            mediaSection.setIceParameters(iceParameters);\n        }\n    }\n    updateDtlsRole(role) {\n        logger.debug('updateDtlsRole() [role:%s]', role);\n        this._dtlsParameters.role = role;\n        for (const mediaSection of this._mediaSections) {\n            mediaSection.setDtlsRole(role);\n        }\n    }\n    getNextMediaSectionIdx() {\n        // If a closed media section is found, return its index.\n        for (let idx = 0; idx < this._mediaSections.length; ++idx) {\n            const mediaSection = this._mediaSections[idx];\n            if (mediaSection.closed) {\n                return { idx, reuseMid: mediaSection.mid };\n            }\n        }\n        // If no closed media section is found, return next one.\n        return { idx: this._mediaSections.length };\n    }\n    send({ offerMediaObject, reuseMid, offerRtpParameters, answerRtpParameters, codecOptions, extmapAllowMixed = false }) {\n        const mediaSection = new MediaSection_1.AnswerMediaSection({\n            iceParameters: this._iceParameters,\n            iceCandidates: this._iceCandidates,\n            dtlsParameters: this._dtlsParameters,\n            plainRtpParameters: this._plainRtpParameters,\n            planB: this._planB,\n            offerMediaObject,\n            offerRtpParameters,\n            answerRtpParameters,\n            codecOptions,\n            extmapAllowMixed\n        });\n        // Unified-Plan with closed media section replacement.\n        if (reuseMid) {\n            this._replaceMediaSection(mediaSection, reuseMid);\n        }\n        // Unified-Plan or Plan-B with different media kind.\n        else if (!this._midToIndex.has(mediaSection.mid)) {\n            this._addMediaSection(mediaSection);\n        }\n        // Plan-B with same media kind.\n        else {\n            this._replaceMediaSection(mediaSection);\n        }\n    }\n    receive({ mid, kind, offerRtpParameters, streamId, trackId }) {\n        const idx = this._midToIndex.get(mid);\n        let mediaSection;\n        if (idx !== undefined) {\n            mediaSection = this._mediaSections[idx];\n        }\n        // Unified-Plan or different media kind.\n        if (!mediaSection) {\n            mediaSection = new MediaSection_1.OfferMediaSection({\n                iceParameters: this._iceParameters,\n                iceCandidates: this._iceCandidates,\n                dtlsParameters: this._dtlsParameters,\n                plainRtpParameters: this._plainRtpParameters,\n                planB: this._planB,\n                mid,\n                kind,\n                offerRtpParameters,\n                streamId,\n                trackId\n            });\n            // Let's try to recycle a closed media section (if any).\n            // NOTE: Yes, we can recycle a closed m=audio section with a new m=video.\n            const oldMediaSection = this._mediaSections.find((m) => (m.closed));\n            if (oldMediaSection) {\n                this._replaceMediaSection(mediaSection, oldMediaSection.mid);\n            }\n            else {\n                this._addMediaSection(mediaSection);\n            }\n        }\n        // Plan-B.\n        else {\n            mediaSection.planBReceive({ offerRtpParameters, streamId, trackId });\n            this._replaceMediaSection(mediaSection);\n        }\n    }\n    pauseMediaSection(mid) {\n        const mediaSection = this._findMediaSection(mid);\n        mediaSection.pause();\n    }\n    resumeSendingMediaSection(mid) {\n        const mediaSection = this._findMediaSection(mid);\n        mediaSection.resume();\n    }\n    resumeReceivingMediaSection(mid) {\n        const mediaSection = this._findMediaSection(mid);\n        mediaSection.resume();\n    }\n    disableMediaSection(mid) {\n        const mediaSection = this._findMediaSection(mid);\n        mediaSection.disable();\n    }\n    /**\n     * Closes media section. Returns true if the given MID corresponds to a m\n     * section that has been indeed closed. False otherwise.\n     *\n     * NOTE: Closing the first m section is a pain since it invalidates the bundled\n     * transport, so instead closing it we just disable it.\n     */\n    closeMediaSection(mid) {\n        const mediaSection = this._findMediaSection(mid);\n        // NOTE: Closing the first m section is a pain since it invalidates the\n        // bundled transport, so let's avoid it.\n        if (mid === this._firstMid) {\n            logger.debug('closeMediaSection() | cannot close first media section, disabling it instead [mid:%s]', mid);\n            this.disableMediaSection(mid);\n            return false;\n        }\n        mediaSection.close();\n        // Regenerate BUNDLE mids.\n        this._regenerateBundleMids();\n        return true;\n    }\n    muxMediaSectionSimulcast(mid, encodings) {\n        const mediaSection = this._findMediaSection(mid);\n        mediaSection.muxSimulcastStreams(encodings);\n        this._replaceMediaSection(mediaSection);\n    }\n    planBStopReceiving({ mid, offerRtpParameters }) {\n        const mediaSection = this._findMediaSection(mid);\n        mediaSection.planBStopReceiving({ offerRtpParameters });\n        this._replaceMediaSection(mediaSection);\n    }\n    sendSctpAssociation({ offerMediaObject }) {\n        const mediaSection = new MediaSection_1.AnswerMediaSection({\n            iceParameters: this._iceParameters,\n            iceCandidates: this._iceCandidates,\n            dtlsParameters: this._dtlsParameters,\n            sctpParameters: this._sctpParameters,\n            plainRtpParameters: this._plainRtpParameters,\n            offerMediaObject\n        });\n        this._addMediaSection(mediaSection);\n    }\n    receiveSctpAssociation({ oldDataChannelSpec = false } = {}) {\n        const mediaSection = new MediaSection_1.OfferMediaSection({\n            iceParameters: this._iceParameters,\n            iceCandidates: this._iceCandidates,\n            dtlsParameters: this._dtlsParameters,\n            sctpParameters: this._sctpParameters,\n            plainRtpParameters: this._plainRtpParameters,\n            mid: 'datachannel',\n            kind: 'application',\n            oldDataChannelSpec\n        });\n        this._addMediaSection(mediaSection);\n    }\n    getSdp() {\n        // Increase SDP version.\n        this._sdpObject.origin.sessionVersion++;\n        return sdpTransform.write(this._sdpObject);\n    }\n    _addMediaSection(newMediaSection) {\n        if (!this._firstMid) {\n            this._firstMid = newMediaSection.mid;\n        }\n        // Add to the vector.\n        this._mediaSections.push(newMediaSection);\n        // Add to the map.\n        this._midToIndex.set(newMediaSection.mid, this._mediaSections.length - 1);\n        // Add to the SDP object.\n        this._sdpObject.media.push(newMediaSection.getObject());\n        // Regenerate BUNDLE mids.\n        this._regenerateBundleMids();\n    }\n    _replaceMediaSection(newMediaSection, reuseMid) {\n        // Store it in the map.\n        if (typeof reuseMid === 'string') {\n            const idx = this._midToIndex.get(reuseMid);\n            if (idx === undefined) {\n                throw new Error(`no media section found for reuseMid '${reuseMid}'`);\n            }\n            const oldMediaSection = this._mediaSections[idx];\n            // Replace the index in the vector with the new media section.\n            this._mediaSections[idx] = newMediaSection;\n            // Update the map.\n            this._midToIndex.delete(oldMediaSection.mid);\n            this._midToIndex.set(newMediaSection.mid, idx);\n            // Update the SDP object.\n            this._sdpObject.media[idx] = newMediaSection.getObject();\n            // Regenerate BUNDLE mids.\n            this._regenerateBundleMids();\n        }\n        else {\n            const idx = this._midToIndex.get(newMediaSection.mid);\n            if (idx === undefined) {\n                throw new Error(`no media section found with mid '${newMediaSection.mid}'`);\n            }\n            // Replace the index in the vector with the new media section.\n            this._mediaSections[idx] = newMediaSection;\n            // Update the SDP object.\n            this._sdpObject.media[idx] = newMediaSection.getObject();\n        }\n    }\n    _findMediaSection(mid) {\n        const idx = this._midToIndex.get(mid);\n        if (idx === undefined) {\n            throw new Error(`no media section found with mid '${mid}'`);\n        }\n        return this._mediaSections[idx];\n    }\n    _regenerateBundleMids() {\n        if (!this._dtlsParameters) {\n            return;\n        }\n        this._sdpObject.groups[0].mids = this._mediaSections\n            .filter((mediaSection) => !mediaSection.closed)\n            .map((mediaSection) => mediaSection.mid)\n            .join(' ');\n    }\n}\nexports.RemoteSdp = RemoteSdp;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyCodecParameters = exports.getCname = exports.extractDtlsParameters = exports.extractRtpCapabilities = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\n/**\n * This function must be called with an SDP with 1 m=audio and 1 m=video\n * sections.\n */\nfunction extractRtpCapabilities({ sdpObject }) {\n    // Map of RtpCodecParameters indexed by payload type.\n    const codecsMap = new Map();\n    // Array of RtpHeaderExtensions.\n    const headerExtensions = [];\n    // Whether a m=audio/video section has been already found.\n    let gotAudio = false;\n    let gotVideo = false;\n    for (const m of sdpObject.media) {\n        const kind = m.type;\n        switch (kind) {\n            case 'audio':\n                {\n                    if (gotAudio) {\n                        continue;\n                    }\n                    gotAudio = true;\n                    break;\n                }\n            case 'video':\n                {\n                    if (gotVideo) {\n                        continue;\n                    }\n                    gotVideo = true;\n                    break;\n                }\n            default:\n                {\n                    continue;\n                }\n        }\n        // Get codecs.\n        for (const rtp of m.rtp) {\n            const codec = {\n                kind: kind,\n                mimeType: `${kind}/${rtp.codec}`,\n                preferredPayloadType: rtp.payload,\n                clockRate: rtp.rate,\n                channels: rtp.encoding,\n                parameters: {},\n                rtcpFeedback: []\n            };\n            codecsMap.set(codec.preferredPayloadType, codec);\n        }\n        // Get codec parameters.\n        for (const fmtp of m.fmtp || []) {\n            const parameters = sdpTransform.parseParams(fmtp.config);\n            const codec = codecsMap.get(fmtp.payload);\n            if (!codec) {\n                continue;\n            }\n            // Specials case to convert parameter value to string.\n            if (parameters && parameters.hasOwnProperty('profile-level-id')) {\n                parameters['profile-level-id'] = String(parameters['profile-level-id']);\n            }\n            codec.parameters = parameters;\n        }\n        // Get RTCP feedback for each codec.\n        for (const fb of m.rtcpFb || []) {\n            const feedback = {\n                type: fb.type,\n                parameter: fb.subtype\n            };\n            if (!feedback.parameter) {\n                delete feedback.parameter;\n            }\n            // rtcp-fb payload is not '*', so just apply it to its corresponding\n            // codec.\n            if (fb.payload !== '*') {\n                const codec = codecsMap.get(fb.payload);\n                if (!codec) {\n                    continue;\n                }\n                codec.rtcpFeedback.push(feedback);\n            }\n            // If rtcp-fb payload is '*' it must be applied to all codecs with same\n            // kind (with some exceptions such as RTX codec).\n            else {\n                for (const codec of codecsMap.values()) {\n                    if (codec.kind === kind && !/.+\\/rtx$/i.test(codec.mimeType)) {\n                        codec.rtcpFeedback.push(feedback);\n                    }\n                }\n            }\n        }\n        // Get RTP header extensions.\n        for (const ext of m.ext || []) {\n            // Ignore encrypted extensions (not yet supported in mediasoup).\n            if (ext['encrypt-uri']) {\n                continue;\n            }\n            const headerExtension = {\n                kind: kind,\n                uri: ext.uri,\n                preferredId: ext.value\n            };\n            headerExtensions.push(headerExtension);\n        }\n    }\n    const rtpCapabilities = {\n        codecs: Array.from(codecsMap.values()),\n        headerExtensions: headerExtensions\n    };\n    return rtpCapabilities;\n}\nexports.extractRtpCapabilities = extractRtpCapabilities;\nfunction extractDtlsParameters({ sdpObject }) {\n    const mediaObject = (sdpObject.media || [])\n        .find((m) => (m.iceUfrag && m.port !== 0));\n    if (!mediaObject) {\n        throw new Error('no active media section found');\n    }\n    const fingerprint = mediaObject.fingerprint || sdpObject.fingerprint;\n    let role;\n    switch (mediaObject.setup) {\n        case 'active':\n            role = 'client';\n            break;\n        case 'passive':\n            role = 'server';\n            break;\n        case 'actpass':\n            role = 'auto';\n            break;\n    }\n    const dtlsParameters = {\n        role,\n        fingerprints: [\n            {\n                algorithm: fingerprint.type,\n                value: fingerprint.hash\n            }\n        ]\n    };\n    return dtlsParameters;\n}\nexports.extractDtlsParameters = extractDtlsParameters;\nfunction getCname({ offerMediaObject }) {\n    const ssrcCnameLine = (offerMediaObject.ssrcs || [])\n        .find((line) => line.attribute === 'cname');\n    if (!ssrcCnameLine) {\n        return '';\n    }\n    return ssrcCnameLine.value;\n}\nexports.getCname = getCname;\n/**\n * Apply codec parameters in the given SDP m= section answer based on the\n * given RTP parameters of an offer.\n */\nfunction applyCodecParameters({ offerRtpParameters, answerMediaObject }) {\n    for (const codec of offerRtpParameters.codecs) {\n        const mimeType = codec.mimeType.toLowerCase();\n        // Avoid parsing codec parameters for unhandled codecs.\n        if (mimeType !== 'audio/opus') {\n            continue;\n        }\n        const rtp = (answerMediaObject.rtp || [])\n            .find((r) => r.payload === codec.payloadType);\n        if (!rtp) {\n            continue;\n        }\n        // Just in case.\n        answerMediaObject.fmtp = answerMediaObject.fmtp || [];\n        let fmtp = answerMediaObject.fmtp\n            .find((f) => f.payload === codec.payloadType);\n        if (!fmtp) {\n            fmtp = { payload: codec.payloadType, config: '' };\n            answerMediaObject.fmtp.push(fmtp);\n        }\n        const parameters = sdpTransform.parseParams(fmtp.config);\n        switch (mimeType) {\n            case 'audio/opus':\n                {\n                    const spropStereo = codec.parameters['sprop-stereo'];\n                    if (spropStereo !== undefined) {\n                        parameters.stereo = spropStereo ? 1 : 0;\n                    }\n                    break;\n                }\n        }\n        // Write the codec fmtp.config back.\n        fmtp.config = '';\n        for (const key of Object.keys(parameters)) {\n            if (fmtp.config) {\n                fmtp.config += ';';\n            }\n            fmtp.config += `${key}=${parameters[key]}`;\n        }\n    }\n}\nexports.applyCodecParameters = applyCodecParameters;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addLegacySimulcast = exports.getRtpEncodings = void 0;\nfunction getRtpEncodings({ offerMediaObject, track }) {\n    // First media SSRC (or the only one).\n    let firstSsrc;\n    const ssrcs = new Set();\n    for (const line of offerMediaObject.ssrcs || []) {\n        if (line.attribute !== 'msid') {\n            continue;\n        }\n        const trackId = line.value.split(' ')[1];\n        if (trackId === track.id) {\n            const ssrc = line.id;\n            ssrcs.add(ssrc);\n            if (!firstSsrc) {\n                firstSsrc = ssrc;\n            }\n        }\n    }\n    if (ssrcs.size === 0) {\n        throw new Error(`a=ssrc line with msid information not found [track.id:${track.id}]`);\n    }\n    const ssrcToRtxSsrc = new Map();\n    // First assume RTX is used.\n    for (const line of offerMediaObject.ssrcGroups || []) {\n        if (line.semantics !== 'FID') {\n            continue;\n        }\n        let [ssrc, rtxSsrc] = line.ssrcs.split(/\\s+/);\n        ssrc = Number(ssrc);\n        rtxSsrc = Number(rtxSsrc);\n        if (ssrcs.has(ssrc)) {\n            // Remove both the SSRC and RTX SSRC from the set so later we know that they\n            // are already handled.\n            ssrcs.delete(ssrc);\n            ssrcs.delete(rtxSsrc);\n            // Add to the map.\n            ssrcToRtxSsrc.set(ssrc, rtxSsrc);\n        }\n    }\n    // If the set of SSRCs is not empty it means that RTX is not being used, so take\n    // media SSRCs from there.\n    for (const ssrc of ssrcs) {\n        // Add to the map.\n        ssrcToRtxSsrc.set(ssrc, null);\n    }\n    const encodings = [];\n    for (const [ssrc, rtxSsrc] of ssrcToRtxSsrc) {\n        const encoding = { ssrc };\n        if (rtxSsrc) {\n            encoding.rtx = { ssrc: rtxSsrc };\n        }\n        encodings.push(encoding);\n    }\n    return encodings;\n}\nexports.getRtpEncodings = getRtpEncodings;\n/**\n * Adds multi-ssrc based simulcast into the given SDP media section offer.\n */\nfunction addLegacySimulcast({ offerMediaObject, track, numStreams }) {\n    if (numStreams <= 1) {\n        throw new TypeError('numStreams must be greater than 1');\n    }\n    let firstSsrc;\n    let firstRtxSsrc;\n    let streamId;\n    // Get the SSRC.\n    const ssrcMsidLine = (offerMediaObject.ssrcs || [])\n        .find((line) => {\n        if (line.attribute !== 'msid') {\n            return false;\n        }\n        const trackId = line.value.split(' ')[1];\n        if (trackId === track.id) {\n            firstSsrc = line.id;\n            streamId = line.value.split(' ')[0];\n            return true;\n        }\n        else {\n            return false;\n        }\n    });\n    if (!ssrcMsidLine) {\n        throw new Error(`a=ssrc line with msid information not found [track.id:${track.id}]`);\n    }\n    // Get the SSRC for RTX.\n    (offerMediaObject.ssrcGroups || [])\n        .some((line) => {\n        if (line.semantics !== 'FID') {\n            return false;\n        }\n        const ssrcs = line.ssrcs.split(/\\s+/);\n        if (Number(ssrcs[0]) === firstSsrc) {\n            firstRtxSsrc = Number(ssrcs[1]);\n            return true;\n        }\n        else {\n            return false;\n        }\n    });\n    const ssrcCnameLine = offerMediaObject.ssrcs\n        .find((line) => (line.attribute === 'cname' && line.id === firstSsrc));\n    if (!ssrcCnameLine) {\n        throw new Error(`a=ssrc line with cname information not found [track.id:${track.id}]`);\n    }\n    const cname = ssrcCnameLine.value;\n    const ssrcs = [];\n    const rtxSsrcs = [];\n    for (let i = 0; i < numStreams; ++i) {\n        ssrcs.push(firstSsrc + i);\n        if (firstRtxSsrc) {\n            rtxSsrcs.push(firstRtxSsrc + i);\n        }\n    }\n    offerMediaObject.ssrcGroups = offerMediaObject.ssrcGroups || [];\n    offerMediaObject.ssrcs = offerMediaObject.ssrcs || [];\n    offerMediaObject.ssrcGroups.push({\n        semantics: 'SIM',\n        ssrcs: ssrcs.join(' ')\n    });\n    for (let i = 0; i < ssrcs.length; ++i) {\n        const ssrc = ssrcs[i];\n        offerMediaObject.ssrcs.push({\n            id: ssrc,\n            attribute: 'cname',\n            value: cname\n        });\n        offerMediaObject.ssrcs.push({\n            id: ssrc,\n            attribute: 'msid',\n            value: `${streamId} ${track.id}`\n        });\n    }\n    for (let i = 0; i < rtxSsrcs.length; ++i) {\n        const ssrc = ssrcs[i];\n        const rtxSsrc = rtxSsrcs[i];\n        offerMediaObject.ssrcs.push({\n            id: rtxSsrc,\n            attribute: 'cname',\n            value: cname\n        });\n        offerMediaObject.ssrcs.push({\n            id: rtxSsrc,\n            attribute: 'msid',\n            value: `${streamId} ${track.id}`\n        });\n        offerMediaObject.ssrcGroups.push({\n            semantics: 'FID',\n            ssrcs: `${ssrc} ${rtxSsrc}`\n        });\n    }\n}\nexports.addLegacySimulcast = addLegacySimulcast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addLegacySimulcast = exports.getRtpEncodings = void 0;\nfunction getRtpEncodings({ offerMediaObject }) {\n    const ssrcs = new Set();\n    for (const line of offerMediaObject.ssrcs || []) {\n        const ssrc = line.id;\n        ssrcs.add(ssrc);\n    }\n    if (ssrcs.size === 0) {\n        throw new Error('no a=ssrc lines found');\n    }\n    const ssrcToRtxSsrc = new Map();\n    // First assume RTX is used.\n    for (const line of offerMediaObject.ssrcGroups || []) {\n        if (line.semantics !== 'FID') {\n            continue;\n        }\n        let [ssrc, rtxSsrc] = line.ssrcs.split(/\\s+/);\n        ssrc = Number(ssrc);\n        rtxSsrc = Number(rtxSsrc);\n        if (ssrcs.has(ssrc)) {\n            // Remove both the SSRC and RTX SSRC from the set so later we know\n            // that they are already handled.\n            ssrcs.delete(ssrc);\n            ssrcs.delete(rtxSsrc);\n            // Add to the map.\n            ssrcToRtxSsrc.set(ssrc, rtxSsrc);\n        }\n    }\n    // If the set of SSRCs is not empty it means that RTX is not being used, so\n    // take media SSRCs from there.\n    for (const ssrc of ssrcs) {\n        // Add to the map.\n        ssrcToRtxSsrc.set(ssrc, null);\n    }\n    const encodings = [];\n    for (const [ssrc, rtxSsrc] of ssrcToRtxSsrc) {\n        const encoding = { ssrc };\n        if (rtxSsrc) {\n            encoding.rtx = { ssrc: rtxSsrc };\n        }\n        encodings.push(encoding);\n    }\n    return encodings;\n}\nexports.getRtpEncodings = getRtpEncodings;\n/**\n * Adds multi-ssrc based simulcast into the given SDP media section offer.\n */\nfunction addLegacySimulcast({ offerMediaObject, numStreams }) {\n    if (numStreams <= 1) {\n        throw new TypeError('numStreams must be greater than 1');\n    }\n    // Get the SSRC.\n    const ssrcMsidLine = (offerMediaObject.ssrcs || [])\n        .find((line) => line.attribute === 'msid');\n    if (!ssrcMsidLine) {\n        throw new Error('a=ssrc line with msid information not found');\n    }\n    const [streamId, trackId] = ssrcMsidLine.value.split(' ');\n    const firstSsrc = ssrcMsidLine.id;\n    let firstRtxSsrc;\n    // Get the SSRC for RTX.\n    (offerMediaObject.ssrcGroups || [])\n        .some((line) => {\n        if (line.semantics !== 'FID') {\n            return false;\n        }\n        const ssrcs = line.ssrcs.split(/\\s+/);\n        if (Number(ssrcs[0]) === firstSsrc) {\n            firstRtxSsrc = Number(ssrcs[1]);\n            return true;\n        }\n        else {\n            return false;\n        }\n    });\n    const ssrcCnameLine = offerMediaObject.ssrcs\n        .find((line) => line.attribute === 'cname');\n    if (!ssrcCnameLine) {\n        throw new Error('a=ssrc line with cname information not found');\n    }\n    const cname = ssrcCnameLine.value;\n    const ssrcs = [];\n    const rtxSsrcs = [];\n    for (let i = 0; i < numStreams; ++i) {\n        ssrcs.push(firstSsrc + i);\n        if (firstRtxSsrc) {\n            rtxSsrcs.push(firstRtxSsrc + i);\n        }\n    }\n    offerMediaObject.ssrcGroups = [];\n    offerMediaObject.ssrcs = [];\n    offerMediaObject.ssrcGroups.push({\n        semantics: 'SIM',\n        ssrcs: ssrcs.join(' ')\n    });\n    for (let i = 0; i < ssrcs.length; ++i) {\n        const ssrc = ssrcs[i];\n        offerMediaObject.ssrcs.push({\n            id: ssrc,\n            attribute: 'cname',\n            value: cname\n        });\n        offerMediaObject.ssrcs.push({\n            id: ssrc,\n            attribute: 'msid',\n            value: `${streamId} ${trackId}`\n        });\n    }\n    for (let i = 0; i < rtxSsrcs.length; ++i) {\n        const ssrc = ssrcs[i];\n        const rtxSsrc = rtxSsrcs[i];\n        offerMediaObject.ssrcs.push({\n            id: rtxSsrc,\n            attribute: 'cname',\n            value: cname\n        });\n        offerMediaObject.ssrcs.push({\n            id: rtxSsrc,\n            attribute: 'msid',\n            value: `${streamId} ${trackId}`\n        });\n        offerMediaObject.ssrcGroups.push({\n            semantics: 'FID',\n            ssrcs: `${ssrc} ${rtxSsrc}`\n        });\n    }\n}\nexports.addLegacySimulcast = addLegacySimulcast;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.debug = exports.parseScalabilityMode = exports.detectDevice = exports.Device = exports.version = exports.types = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nexports.debug = debug_1.default;\nconst Device_1 = require(\"./Device\");\nObject.defineProperty(exports, \"Device\", { enumerable: true, get: function () { return Device_1.Device; } });\nObject.defineProperty(exports, \"detectDevice\", { enumerable: true, get: function () { return Device_1.detectDevice; } });\nconst types = __importStar(require(\"./types\"));\nexports.types = types;\n/**\n * Expose mediasoup-client version.\n */\nexports.version = '3.6.82';\n/**\n * Expose parseScalabilityMode() function.\n */\nvar scalabilityModes_1 = require(\"./scalabilityModes\");\nObject.defineProperty(exports, \"parseScalabilityMode\", { enumerable: true, get: function () { return scalabilityModes_1.parse; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.canReceive = exports.canSend = exports.generateProbatorRtpParameters = exports.reduceCodecs = exports.getSendingRemoteRtpParameters = exports.getSendingRtpParameters = exports.getRecvRtpCapabilities = exports.getExtendedRtpCapabilities = exports.validateSctpStreamParameters = exports.validateSctpParameters = exports.validateNumSctpStreams = exports.validateSctpCapabilities = exports.validateRtcpParameters = exports.validateRtpEncodingParameters = exports.validateRtpHeaderExtensionParameters = exports.validateRtpCodecParameters = exports.validateRtpParameters = exports.validateRtpHeaderExtension = exports.validateRtcpFeedback = exports.validateRtpCodecCapability = exports.validateRtpCapabilities = void 0;\nconst h264 = __importStar(require(\"h264-profile-level-id\"));\nconst utils = __importStar(require(\"./utils\"));\nconst RTP_PROBATOR_MID = 'probator';\nconst RTP_PROBATOR_SSRC = 1234;\nconst RTP_PROBATOR_CODEC_PAYLOAD_TYPE = 127;\n/**\n * Validates RtpCapabilities. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtpCapabilities(caps) {\n    if (typeof caps !== 'object') {\n        throw new TypeError('caps is not an object');\n    }\n    // codecs is optional. If unset, fill with an empty array.\n    if (caps.codecs && !Array.isArray(caps.codecs)) {\n        throw new TypeError('caps.codecs is not an array');\n    }\n    else if (!caps.codecs) {\n        caps.codecs = [];\n    }\n    for (const codec of caps.codecs) {\n        validateRtpCodecCapability(codec);\n    }\n    // headerExtensions is optional. If unset, fill with an empty array.\n    if (caps.headerExtensions && !Array.isArray(caps.headerExtensions)) {\n        throw new TypeError('caps.headerExtensions is not an array');\n    }\n    else if (!caps.headerExtensions) {\n        caps.headerExtensions = [];\n    }\n    for (const ext of caps.headerExtensions) {\n        validateRtpHeaderExtension(ext);\n    }\n}\nexports.validateRtpCapabilities = validateRtpCapabilities;\n/**\n * Validates RtpCodecCapability. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtpCodecCapability(codec) {\n    const MimeTypeRegex = new RegExp('^(audio|video)/(.+)', 'i');\n    if (typeof codec !== 'object') {\n        throw new TypeError('codec is not an object');\n    }\n    // mimeType is mandatory.\n    if (!codec.mimeType || typeof codec.mimeType !== 'string') {\n        throw new TypeError('missing codec.mimeType');\n    }\n    const mimeTypeMatch = MimeTypeRegex.exec(codec.mimeType);\n    if (!mimeTypeMatch) {\n        throw new TypeError('invalid codec.mimeType');\n    }\n    // Just override kind with media component of mimeType.\n    codec.kind = mimeTypeMatch[1].toLowerCase();\n    // preferredPayloadType is optional.\n    if (codec.preferredPayloadType && typeof codec.preferredPayloadType !== 'number') {\n        throw new TypeError('invalid codec.preferredPayloadType');\n    }\n    // clockRate is mandatory.\n    if (typeof codec.clockRate !== 'number') {\n        throw new TypeError('missing codec.clockRate');\n    }\n    // channels is optional. If unset, set it to 1 (just if audio).\n    if (codec.kind === 'audio') {\n        if (typeof codec.channels !== 'number') {\n            codec.channels = 1;\n        }\n    }\n    else {\n        delete codec.channels;\n    }\n    // parameters is optional. If unset, set it to an empty object.\n    if (!codec.parameters || typeof codec.parameters !== 'object') {\n        codec.parameters = {};\n    }\n    for (const key of Object.keys(codec.parameters)) {\n        let value = codec.parameters[key];\n        if (value === undefined) {\n            codec.parameters[key] = '';\n            value = '';\n        }\n        if (typeof value !== 'string' && typeof value !== 'number') {\n            throw new TypeError(`invalid codec parameter [key:${key}s, value:${value}]`);\n        }\n        // Specific parameters validation.\n        if (key === 'apt') {\n            if (typeof value !== 'number') {\n                throw new TypeError('invalid codec apt parameter');\n            }\n        }\n    }\n    // rtcpFeedback is optional. If unset, set it to an empty array.\n    if (!codec.rtcpFeedback || !Array.isArray(codec.rtcpFeedback)) {\n        codec.rtcpFeedback = [];\n    }\n    for (const fb of codec.rtcpFeedback) {\n        validateRtcpFeedback(fb);\n    }\n}\nexports.validateRtpCodecCapability = validateRtpCodecCapability;\n/**\n * Validates RtcpFeedback. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtcpFeedback(fb) {\n    if (typeof fb !== 'object') {\n        throw new TypeError('fb is not an object');\n    }\n    // type is mandatory.\n    if (!fb.type || typeof fb.type !== 'string') {\n        throw new TypeError('missing fb.type');\n    }\n    // parameter is optional. If unset set it to an empty string.\n    if (!fb.parameter || typeof fb.parameter !== 'string') {\n        fb.parameter = '';\n    }\n}\nexports.validateRtcpFeedback = validateRtcpFeedback;\n/**\n * Validates RtpHeaderExtension. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtpHeaderExtension(ext) {\n    if (typeof ext !== 'object') {\n        throw new TypeError('ext is not an object');\n    }\n    // kind is mandatory.\n    if (ext.kind !== 'audio' && ext.kind !== 'video') {\n        throw new TypeError('invalid ext.kind');\n    }\n    // uri is mandatory.\n    if (!ext.uri || typeof ext.uri !== 'string') {\n        throw new TypeError('missing ext.uri');\n    }\n    // preferredId is mandatory.\n    if (typeof ext.preferredId !== 'number') {\n        throw new TypeError('missing ext.preferredId');\n    }\n    // preferredEncrypt is optional. If unset set it to false.\n    if (ext.preferredEncrypt && typeof ext.preferredEncrypt !== 'boolean') {\n        throw new TypeError('invalid ext.preferredEncrypt');\n    }\n    else if (!ext.preferredEncrypt) {\n        ext.preferredEncrypt = false;\n    }\n    // direction is optional. If unset set it to sendrecv.\n    if (ext.direction && typeof ext.direction !== 'string') {\n        throw new TypeError('invalid ext.direction');\n    }\n    else if (!ext.direction) {\n        ext.direction = 'sendrecv';\n    }\n}\nexports.validateRtpHeaderExtension = validateRtpHeaderExtension;\n/**\n * Validates RtpParameters. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtpParameters(params) {\n    if (typeof params !== 'object') {\n        throw new TypeError('params is not an object');\n    }\n    // mid is optional.\n    if (params.mid && typeof params.mid !== 'string') {\n        throw new TypeError('params.mid is not a string');\n    }\n    // codecs is mandatory.\n    if (!Array.isArray(params.codecs)) {\n        throw new TypeError('missing params.codecs');\n    }\n    for (const codec of params.codecs) {\n        validateRtpCodecParameters(codec);\n    }\n    // headerExtensions is optional. If unset, fill with an empty array.\n    if (params.headerExtensions && !Array.isArray(params.headerExtensions)) {\n        throw new TypeError('params.headerExtensions is not an array');\n    }\n    else if (!params.headerExtensions) {\n        params.headerExtensions = [];\n    }\n    for (const ext of params.headerExtensions) {\n        validateRtpHeaderExtensionParameters(ext);\n    }\n    // encodings is optional. If unset, fill with an empty array.\n    if (params.encodings && !Array.isArray(params.encodings)) {\n        throw new TypeError('params.encodings is not an array');\n    }\n    else if (!params.encodings) {\n        params.encodings = [];\n    }\n    for (const encoding of params.encodings) {\n        validateRtpEncodingParameters(encoding);\n    }\n    // rtcp is optional. If unset, fill with an empty object.\n    if (params.rtcp && typeof params.rtcp !== 'object') {\n        throw new TypeError('params.rtcp is not an object');\n    }\n    else if (!params.rtcp) {\n        params.rtcp = {};\n    }\n    validateRtcpParameters(params.rtcp);\n}\nexports.validateRtpParameters = validateRtpParameters;\n/**\n * Validates RtpCodecParameters. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtpCodecParameters(codec) {\n    const MimeTypeRegex = new RegExp('^(audio|video)/(.+)', 'i');\n    if (typeof codec !== 'object') {\n        throw new TypeError('codec is not an object');\n    }\n    // mimeType is mandatory.\n    if (!codec.mimeType || typeof codec.mimeType !== 'string') {\n        throw new TypeError('missing codec.mimeType');\n    }\n    const mimeTypeMatch = MimeTypeRegex.exec(codec.mimeType);\n    if (!mimeTypeMatch) {\n        throw new TypeError('invalid codec.mimeType');\n    }\n    // payloadType is mandatory.\n    if (typeof codec.payloadType !== 'number') {\n        throw new TypeError('missing codec.payloadType');\n    }\n    // clockRate is mandatory.\n    if (typeof codec.clockRate !== 'number') {\n        throw new TypeError('missing codec.clockRate');\n    }\n    const kind = mimeTypeMatch[1].toLowerCase();\n    // channels is optional. If unset, set it to 1 (just if audio).\n    if (kind === 'audio') {\n        if (typeof codec.channels !== 'number') {\n            codec.channels = 1;\n        }\n    }\n    else {\n        delete codec.channels;\n    }\n    // parameters is optional. If unset, set it to an empty object.\n    if (!codec.parameters || typeof codec.parameters !== 'object') {\n        codec.parameters = {};\n    }\n    for (const key of Object.keys(codec.parameters)) {\n        let value = codec.parameters[key];\n        if (value === undefined) {\n            codec.parameters[key] = '';\n            value = '';\n        }\n        if (typeof value !== 'string' && typeof value !== 'number') {\n            throw new TypeError(`invalid codec parameter [key:${key}s, value:${value}]`);\n        }\n        // Specific parameters validation.\n        if (key === 'apt') {\n            if (typeof value !== 'number') {\n                throw new TypeError('invalid codec apt parameter');\n            }\n        }\n    }\n    // rtcpFeedback is optional. If unset, set it to an empty array.\n    if (!codec.rtcpFeedback || !Array.isArray(codec.rtcpFeedback)) {\n        codec.rtcpFeedback = [];\n    }\n    for (const fb of codec.rtcpFeedback) {\n        validateRtcpFeedback(fb);\n    }\n}\nexports.validateRtpCodecParameters = validateRtpCodecParameters;\n/**\n * Validates RtpHeaderExtensionParameteters. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtpHeaderExtensionParameters(ext) {\n    if (typeof ext !== 'object') {\n        throw new TypeError('ext is not an object');\n    }\n    // uri is mandatory.\n    if (!ext.uri || typeof ext.uri !== 'string') {\n        throw new TypeError('missing ext.uri');\n    }\n    // id is mandatory.\n    if (typeof ext.id !== 'number') {\n        throw new TypeError('missing ext.id');\n    }\n    // encrypt is optional. If unset set it to false.\n    if (ext.encrypt && typeof ext.encrypt !== 'boolean') {\n        throw new TypeError('invalid ext.encrypt');\n    }\n    else if (!ext.encrypt) {\n        ext.encrypt = false;\n    }\n    // parameters is optional. If unset, set it to an empty object.\n    if (!ext.parameters || typeof ext.parameters !== 'object') {\n        ext.parameters = {};\n    }\n    for (const key of Object.keys(ext.parameters)) {\n        let value = ext.parameters[key];\n        if (value === undefined) {\n            ext.parameters[key] = '';\n            value = '';\n        }\n        if (typeof value !== 'string' && typeof value !== 'number') {\n            throw new TypeError('invalid header extension parameter');\n        }\n    }\n}\nexports.validateRtpHeaderExtensionParameters = validateRtpHeaderExtensionParameters;\n/**\n * Validates RtpEncodingParameters. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtpEncodingParameters(encoding) {\n    if (typeof encoding !== 'object') {\n        throw new TypeError('encoding is not an object');\n    }\n    // ssrc is optional.\n    if (encoding.ssrc && typeof encoding.ssrc !== 'number') {\n        throw new TypeError('invalid encoding.ssrc');\n    }\n    // rid is optional.\n    if (encoding.rid && typeof encoding.rid !== 'string') {\n        throw new TypeError('invalid encoding.rid');\n    }\n    // rtx is optional.\n    if (encoding.rtx && typeof encoding.rtx !== 'object') {\n        throw new TypeError('invalid encoding.rtx');\n    }\n    else if (encoding.rtx) {\n        // RTX ssrc is mandatory if rtx is present.\n        if (typeof encoding.rtx.ssrc !== 'number') {\n            throw new TypeError('missing encoding.rtx.ssrc');\n        }\n    }\n    // dtx is optional. If unset set it to false.\n    if (!encoding.dtx || typeof encoding.dtx !== 'boolean') {\n        encoding.dtx = false;\n    }\n    // scalabilityMode is optional.\n    if (encoding.scalabilityMode && typeof encoding.scalabilityMode !== 'string') {\n        throw new TypeError('invalid encoding.scalabilityMode');\n    }\n}\nexports.validateRtpEncodingParameters = validateRtpEncodingParameters;\n/**\n * Validates RtcpParameters. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtcpParameters(rtcp) {\n    if (typeof rtcp !== 'object') {\n        throw new TypeError('rtcp is not an object');\n    }\n    // cname is optional.\n    if (rtcp.cname && typeof rtcp.cname !== 'string') {\n        throw new TypeError('invalid rtcp.cname');\n    }\n    // reducedSize is optional. If unset set it to true.\n    if (!rtcp.reducedSize || typeof rtcp.reducedSize !== 'boolean') {\n        rtcp.reducedSize = true;\n    }\n}\nexports.validateRtcpParameters = validateRtcpParameters;\n/**\n * Validates SctpCapabilities. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateSctpCapabilities(caps) {\n    if (typeof caps !== 'object') {\n        throw new TypeError('caps is not an object');\n    }\n    // numStreams is mandatory.\n    if (!caps.numStreams || typeof caps.numStreams !== 'object') {\n        throw new TypeError('missing caps.numStreams');\n    }\n    validateNumSctpStreams(caps.numStreams);\n}\nexports.validateSctpCapabilities = validateSctpCapabilities;\n/**\n * Validates NumSctpStreams. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateNumSctpStreams(numStreams) {\n    if (typeof numStreams !== 'object') {\n        throw new TypeError('numStreams is not an object');\n    }\n    // OS is mandatory.\n    if (typeof numStreams.OS !== 'number') {\n        throw new TypeError('missing numStreams.OS');\n    }\n    // MIS is mandatory.\n    if (typeof numStreams.MIS !== 'number') {\n        throw new TypeError('missing numStreams.MIS');\n    }\n}\nexports.validateNumSctpStreams = validateNumSctpStreams;\n/**\n * Validates SctpParameters. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateSctpParameters(params) {\n    if (typeof params !== 'object') {\n        throw new TypeError('params is not an object');\n    }\n    // port is mandatory.\n    if (typeof params.port !== 'number') {\n        throw new TypeError('missing params.port');\n    }\n    // OS is mandatory.\n    if (typeof params.OS !== 'number') {\n        throw new TypeError('missing params.OS');\n    }\n    // MIS is mandatory.\n    if (typeof params.MIS !== 'number') {\n        throw new TypeError('missing params.MIS');\n    }\n    // maxMessageSize is mandatory.\n    if (typeof params.maxMessageSize !== 'number') {\n        throw new TypeError('missing params.maxMessageSize');\n    }\n}\nexports.validateSctpParameters = validateSctpParameters;\n/**\n * Validates SctpStreamParameters. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateSctpStreamParameters(params) {\n    if (typeof params !== 'object') {\n        throw new TypeError('params is not an object');\n    }\n    // streamId is mandatory.\n    if (typeof params.streamId !== 'number') {\n        throw new TypeError('missing params.streamId');\n    }\n    // ordered is optional.\n    let orderedGiven = false;\n    if (typeof params.ordered === 'boolean') {\n        orderedGiven = true;\n    }\n    else {\n        params.ordered = true;\n    }\n    // maxPacketLifeTime is optional.\n    if (params.maxPacketLifeTime && typeof params.maxPacketLifeTime !== 'number') {\n        throw new TypeError('invalid params.maxPacketLifeTime');\n    }\n    // maxRetransmits is optional.\n    if (params.maxRetransmits && typeof params.maxRetransmits !== 'number') {\n        throw new TypeError('invalid params.maxRetransmits');\n    }\n    if (params.maxPacketLifeTime && params.maxRetransmits) {\n        throw new TypeError('cannot provide both maxPacketLifeTime and maxRetransmits');\n    }\n    if (orderedGiven &&\n        params.ordered &&\n        (params.maxPacketLifeTime || params.maxRetransmits)) {\n        throw new TypeError('cannot be ordered with maxPacketLifeTime or maxRetransmits');\n    }\n    else if (!orderedGiven && (params.maxPacketLifeTime || params.maxRetransmits)) {\n        params.ordered = false;\n    }\n    // label is optional.\n    if (params.label && typeof params.label !== 'string') {\n        throw new TypeError('invalid params.label');\n    }\n    // protocol is optional.\n    if (params.protocol && typeof params.protocol !== 'string') {\n        throw new TypeError('invalid params.protocol');\n    }\n}\nexports.validateSctpStreamParameters = validateSctpStreamParameters;\n/**\n * Generate extended RTP capabilities for sending and receiving.\n */\nfunction getExtendedRtpCapabilities(localCaps, remoteCaps) {\n    const extendedRtpCapabilities = {\n        codecs: [],\n        headerExtensions: []\n    };\n    // Match media codecs and keep the order preferred by remoteCaps.\n    for (const remoteCodec of remoteCaps.codecs || []) {\n        if (isRtxCodec(remoteCodec)) {\n            continue;\n        }\n        const matchingLocalCodec = (localCaps.codecs || [])\n            .find((localCodec) => (matchCodecs(localCodec, remoteCodec, { strict: true, modify: true })));\n        if (!matchingLocalCodec) {\n            continue;\n        }\n        const extendedCodec = {\n            mimeType: matchingLocalCodec.mimeType,\n            kind: matchingLocalCodec.kind,\n            clockRate: matchingLocalCodec.clockRate,\n            channels: matchingLocalCodec.channels,\n            localPayloadType: matchingLocalCodec.preferredPayloadType,\n            localRtxPayloadType: undefined,\n            remotePayloadType: remoteCodec.preferredPayloadType,\n            remoteRtxPayloadType: undefined,\n            localParameters: matchingLocalCodec.parameters,\n            remoteParameters: remoteCodec.parameters,\n            rtcpFeedback: reduceRtcpFeedback(matchingLocalCodec, remoteCodec)\n        };\n        extendedRtpCapabilities.codecs.push(extendedCodec);\n    }\n    // Match RTX codecs.\n    for (const extendedCodec of extendedRtpCapabilities.codecs) {\n        const matchingLocalRtxCodec = localCaps.codecs\n            .find((localCodec) => (isRtxCodec(localCodec) &&\n            localCodec.parameters.apt === extendedCodec.localPayloadType));\n        const matchingRemoteRtxCodec = remoteCaps.codecs\n            .find((remoteCodec) => (isRtxCodec(remoteCodec) &&\n            remoteCodec.parameters.apt === extendedCodec.remotePayloadType));\n        if (matchingLocalRtxCodec && matchingRemoteRtxCodec) {\n            extendedCodec.localRtxPayloadType = matchingLocalRtxCodec.preferredPayloadType;\n            extendedCodec.remoteRtxPayloadType = matchingRemoteRtxCodec.preferredPayloadType;\n        }\n    }\n    // Match header extensions.\n    for (const remoteExt of remoteCaps.headerExtensions) {\n        const matchingLocalExt = localCaps.headerExtensions\n            .find((localExt) => (matchHeaderExtensions(localExt, remoteExt)));\n        if (!matchingLocalExt) {\n            continue;\n        }\n        const extendedExt = {\n            kind: remoteExt.kind,\n            uri: remoteExt.uri,\n            sendId: matchingLocalExt.preferredId,\n            recvId: remoteExt.preferredId,\n            encrypt: matchingLocalExt.preferredEncrypt,\n            direction: 'sendrecv'\n        };\n        switch (remoteExt.direction) {\n            case 'sendrecv':\n                extendedExt.direction = 'sendrecv';\n                break;\n            case 'recvonly':\n                extendedExt.direction = 'sendonly';\n                break;\n            case 'sendonly':\n                extendedExt.direction = 'recvonly';\n                break;\n            case 'inactive':\n                extendedExt.direction = 'inactive';\n                break;\n        }\n        extendedRtpCapabilities.headerExtensions.push(extendedExt);\n    }\n    return extendedRtpCapabilities;\n}\nexports.getExtendedRtpCapabilities = getExtendedRtpCapabilities;\n/**\n * Generate RTP capabilities for receiving media based on the given extended\n * RTP capabilities.\n */\nfunction getRecvRtpCapabilities(extendedRtpCapabilities) {\n    const rtpCapabilities = {\n        codecs: [],\n        headerExtensions: []\n    };\n    for (const extendedCodec of extendedRtpCapabilities.codecs) {\n        const codec = {\n            mimeType: extendedCodec.mimeType,\n            kind: extendedCodec.kind,\n            preferredPayloadType: extendedCodec.remotePayloadType,\n            clockRate: extendedCodec.clockRate,\n            channels: extendedCodec.channels,\n            parameters: extendedCodec.localParameters,\n            rtcpFeedback: extendedCodec.rtcpFeedback\n        };\n        rtpCapabilities.codecs.push(codec);\n        // Add RTX codec.\n        if (!extendedCodec.remoteRtxPayloadType) {\n            continue;\n        }\n        const rtxCodec = {\n            mimeType: `${extendedCodec.kind}/rtx`,\n            kind: extendedCodec.kind,\n            preferredPayloadType: extendedCodec.remoteRtxPayloadType,\n            clockRate: extendedCodec.clockRate,\n            parameters: {\n                apt: extendedCodec.remotePayloadType\n            },\n            rtcpFeedback: []\n        };\n        rtpCapabilities.codecs.push(rtxCodec);\n        // TODO: In the future, we need to add FEC, CN, etc, codecs.\n    }\n    for (const extendedExtension of extendedRtpCapabilities.headerExtensions) {\n        // Ignore RTP extensions not valid for receiving.\n        if (extendedExtension.direction !== 'sendrecv' &&\n            extendedExtension.direction !== 'recvonly') {\n            continue;\n        }\n        const ext = {\n            kind: extendedExtension.kind,\n            uri: extendedExtension.uri,\n            preferredId: extendedExtension.recvId,\n            preferredEncrypt: extendedExtension.encrypt,\n            direction: extendedExtension.direction\n        };\n        rtpCapabilities.headerExtensions.push(ext);\n    }\n    return rtpCapabilities;\n}\nexports.getRecvRtpCapabilities = getRecvRtpCapabilities;\n/**\n * Generate RTP parameters of the given kind for sending media.\n * NOTE: mid, encodings and rtcp fields are left empty.\n */\nfunction getSendingRtpParameters(kind, extendedRtpCapabilities) {\n    const rtpParameters = {\n        mid: undefined,\n        codecs: [],\n        headerExtensions: [],\n        encodings: [],\n        rtcp: {}\n    };\n    for (const extendedCodec of extendedRtpCapabilities.codecs) {\n        if (extendedCodec.kind !== kind) {\n            continue;\n        }\n        const codec = {\n            mimeType: extendedCodec.mimeType,\n            payloadType: extendedCodec.localPayloadType,\n            clockRate: extendedCodec.clockRate,\n            channels: extendedCodec.channels,\n            parameters: extendedCodec.localParameters,\n            rtcpFeedback: extendedCodec.rtcpFeedback\n        };\n        rtpParameters.codecs.push(codec);\n        // Add RTX codec.\n        if (extendedCodec.localRtxPayloadType) {\n            const rtxCodec = {\n                mimeType: `${extendedCodec.kind}/rtx`,\n                payloadType: extendedCodec.localRtxPayloadType,\n                clockRate: extendedCodec.clockRate,\n                parameters: {\n                    apt: extendedCodec.localPayloadType\n                },\n                rtcpFeedback: []\n            };\n            rtpParameters.codecs.push(rtxCodec);\n        }\n    }\n    for (const extendedExtension of extendedRtpCapabilities.headerExtensions) {\n        // Ignore RTP extensions of a different kind and those not valid for sending.\n        if ((extendedExtension.kind && extendedExtension.kind !== kind) ||\n            (extendedExtension.direction !== 'sendrecv' &&\n                extendedExtension.direction !== 'sendonly')) {\n            continue;\n        }\n        const ext = {\n            uri: extendedExtension.uri,\n            id: extendedExtension.sendId,\n            encrypt: extendedExtension.encrypt,\n            parameters: {}\n        };\n        rtpParameters.headerExtensions.push(ext);\n    }\n    return rtpParameters;\n}\nexports.getSendingRtpParameters = getSendingRtpParameters;\n/**\n * Generate RTP parameters of the given kind suitable for the remote SDP answer.\n */\nfunction getSendingRemoteRtpParameters(kind, extendedRtpCapabilities) {\n    const rtpParameters = {\n        mid: undefined,\n        codecs: [],\n        headerExtensions: [],\n        encodings: [],\n        rtcp: {}\n    };\n    for (const extendedCodec of extendedRtpCapabilities.codecs) {\n        if (extendedCodec.kind !== kind) {\n            continue;\n        }\n        const codec = {\n            mimeType: extendedCodec.mimeType,\n            payloadType: extendedCodec.localPayloadType,\n            clockRate: extendedCodec.clockRate,\n            channels: extendedCodec.channels,\n            parameters: extendedCodec.remoteParameters,\n            rtcpFeedback: extendedCodec.rtcpFeedback\n        };\n        rtpParameters.codecs.push(codec);\n        // Add RTX codec.\n        if (extendedCodec.localRtxPayloadType) {\n            const rtxCodec = {\n                mimeType: `${extendedCodec.kind}/rtx`,\n                payloadType: extendedCodec.localRtxPayloadType,\n                clockRate: extendedCodec.clockRate,\n                parameters: {\n                    apt: extendedCodec.localPayloadType\n                },\n                rtcpFeedback: []\n            };\n            rtpParameters.codecs.push(rtxCodec);\n        }\n    }\n    for (const extendedExtension of extendedRtpCapabilities.headerExtensions) {\n        // Ignore RTP extensions of a different kind and those not valid for sending.\n        if ((extendedExtension.kind && extendedExtension.kind !== kind) ||\n            (extendedExtension.direction !== 'sendrecv' &&\n                extendedExtension.direction !== 'sendonly')) {\n            continue;\n        }\n        const ext = {\n            uri: extendedExtension.uri,\n            id: extendedExtension.sendId,\n            encrypt: extendedExtension.encrypt,\n            parameters: {}\n        };\n        rtpParameters.headerExtensions.push(ext);\n    }\n    // Reduce codecs' RTCP feedback. Use Transport-CC if available, REMB otherwise.\n    if (rtpParameters.headerExtensions.some((ext) => (ext.uri === 'http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01'))) {\n        for (const codec of rtpParameters.codecs) {\n            codec.rtcpFeedback = (codec.rtcpFeedback || [])\n                .filter((fb) => fb.type !== 'goog-remb');\n        }\n    }\n    else if (rtpParameters.headerExtensions.some((ext) => (ext.uri === 'http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time'))) {\n        for (const codec of rtpParameters.codecs) {\n            codec.rtcpFeedback = (codec.rtcpFeedback || [])\n                .filter((fb) => fb.type !== 'transport-cc');\n        }\n    }\n    else {\n        for (const codec of rtpParameters.codecs) {\n            codec.rtcpFeedback = (codec.rtcpFeedback || [])\n                .filter((fb) => (fb.type !== 'transport-cc' &&\n                fb.type !== 'goog-remb'));\n        }\n    }\n    return rtpParameters;\n}\nexports.getSendingRemoteRtpParameters = getSendingRemoteRtpParameters;\n/**\n * Reduce given codecs by returning an array of codecs \"compatible\" with the\n * given capability codec. If no capability codec is given, take the first\n * one(s).\n *\n * Given codecs must be generated by ortc.getSendingRtpParameters() or\n * ortc.getSendingRemoteRtpParameters().\n *\n * The returned array of codecs also include a RTX codec if available.\n */\nfunction reduceCodecs(codecs, capCodec) {\n    const filteredCodecs = [];\n    // If no capability codec is given, take the first one (and RTX).\n    if (!capCodec) {\n        filteredCodecs.push(codecs[0]);\n        if (isRtxCodec(codecs[1])) {\n            filteredCodecs.push(codecs[1]);\n        }\n    }\n    // Otherwise look for a compatible set of codecs.\n    else {\n        for (let idx = 0; idx < codecs.length; ++idx) {\n            if (matchCodecs(codecs[idx], capCodec)) {\n                filteredCodecs.push(codecs[idx]);\n                if (isRtxCodec(codecs[idx + 1])) {\n                    filteredCodecs.push(codecs[idx + 1]);\n                }\n                break;\n            }\n        }\n        if (filteredCodecs.length === 0) {\n            throw new TypeError('no matching codec found');\n        }\n    }\n    return filteredCodecs;\n}\nexports.reduceCodecs = reduceCodecs;\n/**\n * Create RTP parameters for a Consumer for the RTP probator.\n */\nfunction generateProbatorRtpParameters(videoRtpParameters) {\n    // Clone given reference video RTP parameters.\n    videoRtpParameters = utils.clone(videoRtpParameters, {});\n    // This may throw.\n    validateRtpParameters(videoRtpParameters);\n    const rtpParameters = {\n        mid: RTP_PROBATOR_MID,\n        codecs: [],\n        headerExtensions: [],\n        encodings: [{ ssrc: RTP_PROBATOR_SSRC }],\n        rtcp: { cname: 'probator' }\n    };\n    rtpParameters.codecs.push(videoRtpParameters.codecs[0]);\n    rtpParameters.codecs[0].payloadType = RTP_PROBATOR_CODEC_PAYLOAD_TYPE;\n    rtpParameters.headerExtensions = videoRtpParameters.headerExtensions;\n    return rtpParameters;\n}\nexports.generateProbatorRtpParameters = generateProbatorRtpParameters;\n/**\n * Whether media can be sent based on the given RTP capabilities.\n */\nfunction canSend(kind, extendedRtpCapabilities) {\n    return extendedRtpCapabilities.codecs.\n        some((codec) => codec.kind === kind);\n}\nexports.canSend = canSend;\n/**\n * Whether the given RTP parameters can be received with the given RTP\n * capabilities.\n */\nfunction canReceive(rtpParameters, extendedRtpCapabilities) {\n    // This may throw.\n    validateRtpParameters(rtpParameters);\n    if (rtpParameters.codecs.length === 0) {\n        return false;\n    }\n    const firstMediaCodec = rtpParameters.codecs[0];\n    return extendedRtpCapabilities.codecs\n        .some((codec) => codec.remotePayloadType === firstMediaCodec.payloadType);\n}\nexports.canReceive = canReceive;\nfunction isRtxCodec(codec) {\n    if (!codec) {\n        return false;\n    }\n    return /.+\\/rtx$/i.test(codec.mimeType);\n}\nfunction matchCodecs(aCodec, bCodec, { strict = false, modify = false } = {}) {\n    const aMimeType = aCodec.mimeType.toLowerCase();\n    const bMimeType = bCodec.mimeType.toLowerCase();\n    if (aMimeType !== bMimeType) {\n        return false;\n    }\n    if (aCodec.clockRate !== bCodec.clockRate) {\n        return false;\n    }\n    if (aCodec.channels !== bCodec.channels) {\n        return false;\n    }\n    // Per codec special checks.\n    switch (aMimeType) {\n        case 'video/h264':\n            {\n                if (strict) {\n                    const aPacketizationMode = aCodec.parameters['packetization-mode'] || 0;\n                    const bPacketizationMode = bCodec.parameters['packetization-mode'] || 0;\n                    if (aPacketizationMode !== bPacketizationMode) {\n                        return false;\n                    }\n                    if (!h264.isSameProfile(aCodec.parameters, bCodec.parameters)) {\n                        return false;\n                    }\n                    let selectedProfileLevelId;\n                    try {\n                        selectedProfileLevelId =\n                            h264.generateProfileLevelIdForAnswer(aCodec.parameters, bCodec.parameters);\n                    }\n                    catch (error) {\n                        return false;\n                    }\n                    if (modify) {\n                        if (selectedProfileLevelId) {\n                            aCodec.parameters['profile-level-id'] = selectedProfileLevelId;\n                            bCodec.parameters['profile-level-id'] = selectedProfileLevelId;\n                        }\n                        else {\n                            delete aCodec.parameters['profile-level-id'];\n                            delete bCodec.parameters['profile-level-id'];\n                        }\n                    }\n                }\n                break;\n            }\n        case 'video/vp9':\n            {\n                if (strict) {\n                    const aProfileId = aCodec.parameters['profile-id'] || 0;\n                    const bProfileId = bCodec.parameters['profile-id'] || 0;\n                    if (aProfileId !== bProfileId) {\n                        return false;\n                    }\n                }\n                break;\n            }\n    }\n    return true;\n}\nfunction matchHeaderExtensions(aExt, bExt) {\n    if (aExt.kind && bExt.kind && aExt.kind !== bExt.kind) {\n        return false;\n    }\n    if (aExt.uri !== bExt.uri) {\n        return false;\n    }\n    return true;\n}\nfunction reduceRtcpFeedback(codecA, codecB) {\n    const reducedRtcpFeedback = [];\n    for (const aFb of codecA.rtcpFeedback || []) {\n        const matchingBFb = (codecB.rtcpFeedback || [])\n            .find((bFb) => (bFb.type === aFb.type &&\n            (bFb.parameter === aFb.parameter || (!bFb.parameter && !aFb.parameter))));\n        if (matchingBFb) {\n            reducedRtcpFeedback.push(matchingBFb);\n        }\n    }\n    return reducedRtcpFeedback;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = void 0;\nconst ScalabilityModeRegex = new RegExp('^[LS]([1-9]\\\\d{0,1})T([1-9]\\\\d{0,1})');\nfunction parse(scalabilityMode) {\n    const match = ScalabilityModeRegex.exec(scalabilityMode || '');\n    if (match) {\n        return {\n            spatialLayers: Number(match[1]),\n            temporalLayers: Number(match[2])\n        };\n    }\n    else {\n        return {\n            spatialLayers: 1,\n            temporalLayers: 1\n        };\n    }\n}\nexports.parse = parse;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Device\"), exports);\n__exportStar(require(\"./Transport\"), exports);\n__exportStar(require(\"./Producer\"), exports);\n__exportStar(require(\"./Consumer\"), exports);\n__exportStar(require(\"./DataProducer\"), exports);\n__exportStar(require(\"./DataConsumer\"), exports);\n__exportStar(require(\"./RtpParameters\"), exports);\n__exportStar(require(\"./SctpParameters\"), exports);\n__exportStar(require(\"./handlers/HandlerInterface\"), exports);\n__exportStar(require(\"./errors\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateRandomNumber = exports.clone = void 0;\n/**\n * Clones the given data.\n */\nfunction clone(data, defaultValue) {\n    if (typeof data === 'undefined') {\n        return defaultValue;\n    }\n    return JSON.parse(JSON.stringify(data));\n}\nexports.clone = clone;\n/**\n * Generates a random positive integer.\n */\nfunction generateRandomNumber() {\n    return Math.round(Math.random() * 10000000);\n}\nexports.generateRandomNumber = generateRandomNumber;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{\n    // o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly...\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  // k: [{}], // outdated thing ignored\n  t: [{\n    // t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{\n    // c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{\n    // b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{\n    // m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    {\n      // a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding)\n          ? 'rtpmap:%d %s/%s/%s'\n          : o.rate\n            ? 'rtpmap:%d %s/%s'\n            : 'rtpmap:%d %s';\n      }\n    },\n    {\n      // a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      // a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    {\n      // a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    {\n      // a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null)\n          ? 'rtcp:%d %s IP%d %s'\n          : 'rtcp:%d';\n      }\n    },\n    {\n      // a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%s trr-int %d'\n    },\n    {\n      // a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null)\n          ? 'rtcp-fb:%s %s %s'\n          : 'rtcp-fb:%s %s';\n      }\n    },\n    {\n      // a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      // a=extmap:1/recvonly URI-gps-string\n      // a=extmap:3 urn:ietf:params:rtp-hdrext:encrypt urn:ietf:params:rtp-hdrext:smpte-tc 25@600/24\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'encrypt-uri', 'uri', 'config'],\n      format: function (o) {\n        return (\n          'extmap:%d' +\n          (o.direction ? '/%s' : '%v') +\n          (o['encrypt-uri'] ? ' %s' : '%v') +\n          ' %s' +\n          (o.config ? ' %s' : '')\n        );\n      }\n    },\n    {\n      // a=extmap-allow-mixed\n      name: 'extmapAllowMixed',\n      reg: /^(extmap-allow-mixed)/\n    },\n    {\n      // a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null)\n          ? 'crypto:%d %s %s %s'\n          : 'crypto:%d %s %s';\n      }\n    },\n    {\n      // a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    {\n      // a=connection:new\n      name: 'connectionType',\n      reg: /^connection:(new|existing)/,\n      format: 'connection:%s'\n    },\n    {\n      // a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    {\n      // a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    {\n      // a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'ptime:%d'\n    },\n    {\n      // a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'maxptime:%d'\n    },\n    {\n      // a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    {\n      // a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    {\n      // a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    {\n      // a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    {\n      // a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    {\n      // a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      // a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      // a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    {\n      // a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    {\n      // a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    {\n      // a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    {\n      // a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_-]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    {\n      // a=ssrc-group:FEC 1 2\n      // a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    {\n      // a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    {\n      // a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    {\n      // a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    {\n      // a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    {\n      // a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null)\n          ? 'sctpmap:%s %s %s'\n          : 'sctpmap:%s %s';\n      }\n    },\n    {\n      // a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    {\n      // a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    {\n      // a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      // a=imageattr:* send [x=800,y=640] recv *\n      // a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        // a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        // send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        // recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      // a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        // a=simulcast:\n        '^simulcast:' +\n        // send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        // space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        // end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // old simulcast draft 03 (implemented by Firefox)\n      //   https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      // a=simulcast: recv pt=97;98 send pt=97\n      // a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      // a=framerate:25\n      // a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    {\n      // RFC4570\n      // a=source-filter: incl IN IP4 239.5.2.31 10.1.15.5\n      name: 'sourceFilter',\n      reg: /^source-filter: *(excl|incl) (\\S*) (IP4|IP6|\\*) (\\S*) (.*)/,\n      names: ['filterMode', 'netType', 'addressTypes', 'destAddress', 'srcList'],\n      format: 'source-filter: %s %s %s %s %s'\n    },\n    {\n      // a=bundle-only\n      name: 'bundleOnly',\n      reg: /^(bundle-only)/\n    },\n    {\n      // a=label:1\n      name: 'label',\n      reg: /^label:(.+)/,\n      format: 'label:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-5\n      name: 'sctpPort',\n      reg: /^sctp-port:(\\d+)$/,\n      format: 'sctp-port:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-6\n      name: 'maxMessageSize',\n      reg: /^max-message-size:(\\d+)$/,\n      format: 'max-message-size:%s'\n    },\n    {\n      // RFC7273\n      // a=ts-refclk:ptp=IEEE1588-2008:39-A7-94-FF-FE-07-CB-D0:37\n      push:'tsRefClocks',\n      reg: /^ts-refclk:([^\\s=]*)(?:=(\\S*))?/,\n      names: ['clksrc', 'clksrcExt'],\n      format: function (o) {\n        return 'ts-refclk:%s' + (o.clksrcExt != null ? '=%s' : '');\n      }\n    },\n    {\n      // RFC7273\n      // a=mediaclk:direct=963214424\n      name:'mediaClk',\n      reg: /^mediaclk:(?:id=(\\S*))? *([^\\s=]*)(?:=(\\S*))?(?: *rate=(\\d+)\\/(\\d+))?/,\n      names: ['id', 'mediaClockName', 'mediaClockValue', 'rateNumerator', 'rateDenominator'],\n      format: function (o) {\n        var str = 'mediaclk:';\n        str += (o.id != null ? 'id=%s %s' : '%v%s');\n        str += (o.mediaClockValue != null ? '=%s' : '');\n        str += (o.rateNumerator != null ? ' rate=%s' : '');\n        str += (o.rateDenominator != null ? '/%s' : '');\n        return str;\n      }\n    },\n    {\n      // a=keywds:keywords\n      name: 'keywords',\n      reg: /^keywds:(.+)$/,\n      format: 'keywds:%s'\n    },\n    {\n      // a=content:main\n      name: 'content',\n      reg: /^content:(.+)/,\n      format: 'content:%s'\n    },\n    // BFCP https://tools.ietf.org/html/rfc4583\n    {\n      // a=floorctrl:c-s\n      name: 'bfcpFloorCtrl',\n      reg: /^floorctrl:(c-only|s-only|c-s)/,\n      format: 'floorctrl:%s'\n    },\n    {\n      // a=confid:1\n      name: 'bfcpConfId',\n      reg: /^confid:(\\d+)/,\n      format: 'confid:%s'\n    },\n    {\n      // a=userid:1\n      name: 'bfcpUserId',\n      reg: /^userid:(\\d+)/,\n      format: 'userid:%s'\n    },\n    {\n      // a=floorid:1\n      name: 'bfcpFloorId',\n      reg: /^floorid:(.+) (?:m-stream|mstrm):(.+)/,\n      names: ['id', 'mStream'],\n      format: 'floorid:%s mstrm:%s'\n    },\n    {\n      // any a= that we don't understand is kept verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n","var parser = require('./parser');\nvar writer = require('./writer');\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseParams = parser.parseParams;\nexports.parseFmtpConfig = parser.parseFmtpConfig; // Alias of parseParams().\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n","var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.toString().split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n","var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn.js\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}\n\nmodule.exports = _createSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _get.apply(this, arguments);\n}\n\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nfunction _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\n\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeFunction = require(\"./isNativeFunction.js\");\n\nvar construct = require(\"./construct.js\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","Logger","debug_1","require","LIB_NAME","prefix","_debug","default","_warn","_error","log","console","info","bind","warn","error","AwaitQueue","AwaitQueueRemovedTaskError","AwaitQueueStoppedError","logger","message","name","Error","captureStackTrace","pendingTasks","Map","nextTaskId","stopping","size","task","debug","TypeError","Promise","resolve","reject","pendingTask","id","enqueuedAt","Date","now","executedAt","undefined","completed","result","delete","values","nextPendingTask","execute","String","set","taskIdx","Array","from","idx","map","enqueuedTime","executionTime","formatArgs","args","useColors","namespace","module","humanize","diff","c","color","splice","index","lastC","replace","match","save","namespaces","storage","setItem","removeItem","load","r","getItem","process","DEBUG","window","type","__nwjs","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","RegExp","$1","localStorage","localstorage","destroy","warned","colors","formatters","j","v","JSON","stringify","env","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","self","curr","Number","ms","prev","coerce","unshift","format","formatter","val","call","logFn","apply","selectColor","extend","enumerable","configurable","get","init","delimiter","newDebug","toNamespace","regexp","toString","substring","length","stack","disable","names","skips","join","enable","i","split","len","push","slice","test","keys","forEach","key","hash","charCodeAt","Math","abs","s","m","h","d","w","y","plural","msAbs","n","isPlural","round","options","str","exec","parseFloat","parse","isFinite","long","fmtLong","fmtShort","e","t","l","o","Symbol","toStringTag","create","prototype","hasOwnProperty","p","getFirstMatch","getSecondMatch","matchAndReturnConst","getWindowsVersionName","getMacOSVersionName","getAndroidVersionName","getVersionPrecision","compareVersions","a","max","u","reverse","min","find","assign","arguments","concat","getBrowserAlias","BROWSER_ALIASES_MAP","getBrowserTypeByAlias","BROWSER_MAP","ENGINE_MAP","OS_MAP","PLATFORMS_MAP","Bada","BlackBerry","Chrome","Chromium","Electron","Epiphany","Firefox","Focus","Generic","Googlebot","Maxthon","Opera","PhantomJS","Puffin","QupZilla","QQ","QQLite","Safari","Sailfish","SeaMonkey","Sleipnir","Swing","Tizen","Vivaldi","WeChat","Roku","amazon_silk","android","bada","blackberry","chrome","chromium","electron","epiphany","firefox","focus","generic","googlebot","google_search","ie","k_meleon","maxthon","edge","mz","naver","opera","opera_coast","phantomjs","puffin","qupzilla","qq","qqlite","safari","sailfish","samsung_internet","seamonkey","sleipnir","swing","tizen","uc","vivaldi","webos","wechat","yandex","tablet","mobile","desktop","tv","WindowsPhone","Windows","MacOS","iOS","Android","WebOS","Linux","ChromeOS","PlayStation4","EdgeHTML","Blink","Trident","Presto","Gecko","WebKit","writable","getParser","getResult","_ua","parsedResult","getUA","parseBrowser","browser","some","describe","getBrowser","getBrowserName","getBrowserVersion","version","getOS","os","parseOS","getOSName","getOSVersion","getPlatform","platform","parsePlatform","getPlatformType","getEngine","engine","parseEngine","getEngineName","satisfies","isOS","isPlatform","f","isBrowser","compareVersion","substr","indexOf","isEngine","is","search","versionName","vendor","model","ReflectOwnKeys","R","Reflect","ReflectApply","target","receiver","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","isNaN","EventEmitter","once","emitter","errorListener","err","removeListener","resolver","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","events","existing","warning","newListener","emit","count","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","addEventListener","wrapListener","arg","removeEventListener","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","context","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","pop","spliceOne","off","removeAllListeners","rawListeners","eventNames","ProfileConstrainedBaseline","ProfileBaseline","ProfileMain","ProfileConstrainedHigh","ProfileHigh","Level1_b","Level1","Level1_1","Level1_2","Level1_3","Level2","Level2_1","Level2_2","Level3","Level3_1","Level3_2","Level4","Level4_1","Level4_2","Level5","Level5_1","Level5_2","ProfileLevelId","profile","level","DefaultProfileLevelId","BitPattern","_mask","byteMaskString","_maskedValue","ProfilePattern","profile_idc","profile_iop","ProfilePatterns","minLevel","b","isLessLevel","isLevelAsymmetryAllowed","params","level_asymmetry_allowed","parseProfileLevelId","profile_level_id_numeric","level_idc","pattern","isMatch","profileLevelIdToString","profile_level_id","profile_idc_iop_string","levelStr","parseSdpProfileLevelId","isSameProfile","params1","params2","profile_level_id_1","profile_level_id_2","Boolean","generateProfileLevelIdForAnswer","local_supported_params","remote_offered_params","local_profile_level_id","remote_profile_level_id","local_level","remote_level","min_level","answer_level","Consumer","Logger_1","EnhancedEventEmitter_1","errors_1","localId","producerId","rtpReceiver","track","rtpParameters","appData","_closed","_observer","EnhancedEventEmitter","_id","_localId","_producerId","_rtpReceiver","_track","_rtpParameters","_paused","_appData","onTrackEnded","handleTrack","kind","destroyTrack","safeEmit","InvalidStateError","stop","DataConsumer","dataProducerId","dataChannel","sctpStreamParameters","_dataProducerId","_dataChannel","_sctpStreamParameters","handleDataChannel","readyState","label","protocol","binaryType","close","event","errorDetail","sctpCauseCode","data","DataProducer","bufferedAmount","bufferedAmountLowThreshold","send","__createBinding","k","k2","desc","getOwnPropertyDescriptor","__setModuleDefault","__importStar","Device","detectDevice","bowser_1","utils","ortc","Transport_1","Chrome111_1","Chrome74_1","Chrome70_1","Chrome67_1","Chrome55_1","Firefox60_1","Safari12_1","Safari11_1","Edge11_1","ReactNativeUnifiedPlan_1","ReactNative_1","product","RTCPeerConnection","RTCRtpTransceiver","ua","ios","OS","handlerName","handlerFactory","Handler","_loaded","_handlerFactory","UnsupportedError","Chrome111","createFactory","Chrome74","Chrome70","Chrome67","Chrome55","Firefox60","Safari12","Safari11","Edge11","ReactNativeUnifiedPlan","ReactNative","_handlerName","_extendedRtpCapabilities","_recvRtpCapabilities","_canProduceByKind","audio","video","_sctpCapabilities","routerRtpCapabilities","clone","validateRtpCapabilities","getNativeRtpCapabilities","nativeRtpCapabilities","getExtendedRtpCapabilities","canSend","getRecvRtpCapabilities","getNativeSctpCapabilities","validateSctpCapabilities","iceParameters","iceCandidates","dtlsParameters","sctpParameters","iceServers","iceTransportPolicy","additionalSettings","proprietaryConstraints","createTransport","direction","isArray","transport","Transport","extendedRtpCapabilities","canProduceByKind","events_1","Infinity","eventName","numListeners","APP_NAME","Producer","rtpSender","stopTracks","disableTrackOnPause","zeroRtpOnPause","_rtpSender","_kind","_maxSpatialLayer","_stopTracks","_disableTrackOnPause","_zeroRtpOnPause","catch","spatialLayer","awaitqueue_1","queue_microtask_1","Producer_1","Consumer_1","DataProducer_1","DataConsumer_1","ConsumerCreationTask","consumerOptions","promise","_connectionState","_producers","_consumers","_dataProducers","_dataConsumers","_probatorConsumerCreated","_awaitQueue","_pendingConsumerTasks","_consumerCreationInProgress","_pendingPauseConsumers","_consumerPauseInProgress","_pendingResumeConsumers","_consumerResumeInProgress","_pendingCloseConsumers","_consumerCloseInProgress","_direction","_maxSctpMessageSize","maxMessageSize","bundlePolicy","rtcpMuxPolicy","sdpSemantics","_handler","run","handleHandler","transportClosed","clear","getTransportStats","restartIce","updateIceServers","encodings","codecOptions","codec","normalizedEncodings","encoding","normalizedEncoding","active","dtx","scalabilityMode","scaleResolutionDownBy","maxBitrate","maxFramerate","adaptivePtime","priority","networkPriority","validateRtpParameters","producer","handleProducer","stopSending","error2","streamId","canReceive","consumerCreationTask","createPendingConsumers","ordered","maxPacketLifeTime","maxRetransmits","sendDataChannel","validateSctpStreamParameters","dataProducer","handleDataProducer","receiveDataChannel","dataConsumer","handleDataConsumer","pendingConsumerTasks","videoConsumerForProbator","optionsList","trackId","receive","results","consumer","handleConsumer","probatorRtpParameters","generateProbatorRtpParameters","then","pendingPauseConsumers","localIds","pauseReceiving","pausePendingConsumers","pendingResumeConsumers","resumeReceiving","resumePendingConsumers","pendingCloseConsumers","stopReceiving","closePendingConsumers","callback","errback","connectionState","pauseSending","resumeSending","replaceTrack","setMaxSpatialLayer","setRtpEncodingParameters","getSenderStats","has","getReceiverStats","sdpTransform","sdpCommonUtils","sdpUnifiedPlanUtils","ortcUtils","HandlerInterface_1","RemoteSdp_1","scalabilityModes_1","SCTP_NUM_STREAMS","MIS","_mapMidTransceiver","_sendStream","MediaStream","_hasDataChannelMediaSection","_nextSendSctpStreamId","_transportReady","_pc","pc","addTransceiver","createOffer","offer","sdpObject","sdp","extractRtpCapabilities","addNackSuppportForOpus","numStreams","_remoteSdp","RemoteSdp","_sendingRtpParametersByKind","getSendingRtpParameters","_sendingRemoteRtpParametersByKind","getSendingRemoteRtpParameters","role","_forcedLocalDtlsRole","iceConnectionState","configuration","getConfiguration","setConfiguration","updateIceParameters","iceRestart","setLocalDescription","answer","getSdp","setRemoteDescription","createAnswer","getStats","assertSendDirection","rid","nextRid","maxTemporalLayers","temporalLayers","sendingRtpParameters","codecs","reduceCodecs","sendingRemoteRtpParameters","mediaSectionIdx","getNextMediaSectionIdx","transceiver","streams","sendEncodings","localSdpObject","setupTransport","localDtlsRole","_a","mid","localDescription","offerMediaObject","media","rtcp","cname","getCname","newEncodings","getRtpEncodings","reuseMid","offerRtpParameters","answerRtpParameters","extmapAllowMixed","sender","removeTrack","closeMediaSection","pauseMediaSection","resumeSendingMediaSection","parameters","getParameters","setParameters","muxMediaSectionSimulcast","negotiated","createDataChannel","sendSctpAssociation","assertRecvDirection","mapLocalId","answerMediaObject","applyCodecParameters","write","getTransceivers","resumeReceivingMediaSection","receiveSctpAssociation","extractDtlsParameters","updateDtlsRole","HandlerInterface","sdpPlanBUtils","_mapSendLocalIdTrack","_nextSendLocalId","_mapRecvLocalIdInfo","offerToReceiveAudio","offerToReceiveVideo","planB","addTrack","addStream","addLegacySimulcast","mimeType","getTracks","signalingState","maxRetransmitTime","getRemoteStreams","getTrackById","planBStopReceiving","oldDataChannelSpec","_mapSendLocalIdRtpSender","getSenders","oldTrack","getReceivers","hackVp9Svc","layers","spatialLayers","desiredEncoding","edgeUtils","_rtpSenders","_rtpReceivers","_iceGatherer","_iceTransport","_dtlsTransport","getCapabilities","_remoteIceParameters","_remoteIceCandidates","_remoteDtlsParameters","_cname","generateRandomNumber","setIceGatherer","setIceTransport","setDtlsTransport","start","candidate","addRemoteCandidate","RTCRtpSender","useRtx","_codec","ssrc","rtx","reducedSize","mux","edgeRtpParameters","mangleRtpParameters","setTrack","RTCRtpReceiver","iceGatherer","RTCIceGatherer","gatherPolicy","gather","iceTransport","RTCIceTransport","pair","dtlsTransport","RTCDtlsTransport","getLocalParameters","fingerprints","filter","fingerprint","algorithm","canvas","createElement","getContext","fakeStream","captureStream","fakeVideoTrack","getVideoTracks","videoTransceiver","remove","disableMediaSection","release","mapStreamId","nativeCaps","caps","channels","numChannels","apt","rtcpFeedback","feedback","parameter","muxId","rtpCapabilities","fb","OfferMediaSection","AnswerMediaSection","MediaSection","_mediaObject","_planB","setIceParameters","candidates","candidateObject","foundation","ip","port","tcpType","tcptype","endOfCandidates","iceOptions","setDtlsRole","iceUfrag","usernameFragment","icePwd","password","pause","ext","ssrcs","ssrcGroups","simulcast","simulcast_03","rids","plainRtpParameters","connection","ipVersion","rtp","rtcpFb","fmtp","payload","payloadType","getCodecName","rate","clockRate","codecParameters","codecRtcpFeedback","opusStereo","opusFec","opusDtx","opusMaxPlaybackRate","opusMaxAverageBitrate","opusPtime","opusNack","videoGoogleStartBitrate","videoGoogleMaxBitrate","videoGoogleMinBitrate","offerCodec","stereo","useinbandfec","usedtx","maxplaybackrate","maxaveragebitrate","ptime","config","subtype","payloads","headerExtensions","localExt","uri","dir1","list1","rtcpMux","rtcpRsize","xGoogleFlag","sctpPort","sctpmap","app","sctpmapNumber","setup","raw","simulcastStreams","parseSimulcastStreamList","simulcastStream","simulcastFormat","paused","scid","simulcastFormats","msid","rtxSsrc","attribute","semantics","includes","trim","group","mimeTypeMatch","MediaSection_1","_mediaSections","_midToIndex","_iceParameters","_iceCandidates","_dtlsParameters","_sctpParameters","_plainRtpParameters","_sdpObject","origin","address","ipVer","netType","sessionId","sessionVersion","username","timing","iceLite","icelite","msidSemantic","semantic","token","numFingerprints","groups","mids","mediaSection","closed","_replaceMediaSection","_addMediaSection","planBReceive","oldMediaSection","_findMediaSection","resume","_firstMid","_regenerateBundleMids","muxSimulcastStreams","newMediaSection","getObject","codecsMap","gotAudio","gotVideo","preferredPayloadType","parseParams","headerExtension","preferredId","mediaObject","ssrcCnameLine","line","spropStereo","firstSsrc","Set","add","ssrcToRtxSsrc","firstRtxSsrc","rtxSsrcs","ssrcMsidLine","parseScalabilityMode","types","Device_1","validateSctpParameters","validateNumSctpStreams","validateRtcpParameters","validateRtpEncodingParameters","validateRtpHeaderExtensionParameters","validateRtpCodecParameters","validateRtpHeaderExtension","validateRtcpFeedback","validateRtpCodecCapability","h264","MimeTypeRegex","preferredEncrypt","encrypt","isRtxCodec","matchCodecs","aCodec","bCodec","strict","modify","aMimeType","bMimeType","selectedProfileLevelId","aPacketizationMode","bPacketizationMode","aProfileId","bProfileId","reduceRtcpFeedback","codecA","codecB","reducedRtcpFeedback","aFb","matchingBFb","bFb","orderedGiven","localCaps","remoteCaps","remoteCodec","matchingLocalCodec","localCodec","extendedCodec","localPayloadType","localRtxPayloadType","remotePayloadType","remoteRtxPayloadType","localParameters","remoteParameters","matchingLocalRtxCodec","matchingRemoteRtxCodec","remoteExt","matchingLocalExt","aExt","bExt","matchHeaderExtensions","extendedExt","sendId","recvId","rtxCodec","extendedExtension","capCodec","filteredCodecs","videoRtpParameters","firstMediaCodec","ScalabilityModeRegex","__exportStar","defaultValue","random","queueMicrotask","global","cb","setTimeout","grammar","reg","z","sessionConfig","raddr","generation","dir2","clksrcExt","mediaClockValue","rateNumerator","rateDenominator","obj","parser","writer","parseFmtpConfig","parsePayloads","parseRemoteCandidates","parseImageAttributes","toIntIfInt","parseReg","location","content","needsBlank","keyLocation","rawName","attachProperties","validLine","session","paramReducer","acc","expr","reduce","parts","component","item","stream","formatRegExp","formatStr","x","makeLine","defaultOuterOrder","defaultInnerOrder","opts","mLine","outerOrder","innerOrder","el","arrayLikeToArray","ReferenceError","asyncGeneratorStep","gen","_next","_throw","done","fn","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","Class","construct","instance","unsupportedIterableToArray","allowArrayLike","it","iterator","F","_e","normalCompletion","didErr","step","next","_e2","possibleConstructorReturn","Derived","hasNativeReflectConstruct","Super","NewTarget","constructor","superPropBase","_get","property","base","_getPrototypeOf","__proto__","subClass","superClass","sham","Proxy","valueOf","iter","object","enumerableOnly","symbols","sym","source","getOwnPropertyDescriptors","defineProperties","_typeof","assertThisInitialized","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","skipTempReset","charAt","rootRecord","rval","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_setPrototypeOf","arrayWithoutHoles","iterableToArray","nonIterableSpread","isNativeFunction","_wrapNativeSuper","_cache","Wrapper"],"sourceRoot":""}